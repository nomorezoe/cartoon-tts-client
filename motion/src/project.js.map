{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/game/BodyAnim.js","assets/Scripts/game/BottomUI.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/game/CamMove.js","assets/Scripts/game/Eye.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["SwitchWidget","require","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","switchwidget","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","init","isFurwee","color","Color","active","string","isPcView","fw","step","x","opacity","parent","removeChild","w","fontSize","lineHeight","width","anim","Animation","start","playIntro","play","introComplete","musicWidget","Widget","sendButton","musicButton","inputWidget","mobileViews","pcViews","editBox","EditBox","mobileEditBG","mobileSmile","pop","mobileFirst","isFirst","i","length","_i","bottom","left","updateAlignment","scale","setMobileView","popMovileFirst","GAP_ICON","arguments","undefined","textLabel","placeholderLabel","min","GAP_TEXTBG","GAP_BORDER","len","ICON","_i2","popupComingSoon","closeComingSoon","oldw","closeMobileFirst","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","isM","isN","statics","systemEvent","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","z","y","_i3","_i4","_i5","_i6","rotationX","_i7","_i8","fov","_i9","event","keyCode","macro","KEY","a","d","s","o","p","k","l","m","n","u","console","log","position","Game","sceneNodes","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","game","view","getDesignResolutionSize","getCanvasSize","info","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","furweeIntialized","targetY","_x","targetX","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","v3","stopAllActions","runAction","stage","eye","isLeft","Boolean","randX","randY","touchMoveHandler","mouseMoveHandler","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","convertToNodeSpaceAR","tan","posX","posY","mouseLen2","pow","factor","len2","setPosition","Helper","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","getComponent","Canvas","frameSize","getFrameSize","MusicToggle","BodyAnim","UIManager","audioID","mouthNode","mouthIsReset","historyObjects","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","idleMouthTimeout","bodyAnim","headAnim","initialMsgJSON","introCameras","URL","URL_SUFFIX","enableTextInput","uiManager","music","isLocalHost","window","location","href","indexOf","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","audioOffset","updateMouth","setFinishCallback","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","reply","index","message","soundloadedHandler","lip_sync_animation","err","res","stopIdleMouth","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","json","params","stringify","history","xhr2","requestURL2","params2","getChildByName","clearMouth","dt","time","getCurrentTime","startIdleMouth","textContent","children","balloon","instantiate","addChild","blockClickHandler","initialize","introCameraAnim","setIdleMouth","clearTimeout","idle","floor","random","errorClickHandler","captureError","bool","enabled","logout","UIBase","callBacks","initialized","setResizeCallback","handleResize","func","removeCallback","splice","debugNode","_this","DeviceOrientationEvent","requestPermission","then","permissionState","addEventListener","onDeviceMove","error","gamma","moveTo","toggleDebug","acctive","progressBar","ProgressBar","setOrientation","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","loadScene","onNode","offNode","hintNode","hintText","audioId","bgVolumn","bgSlider","Slider","bgProgress","offTimer","isMusicOn","sys","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","TOUCH_END","toggleOver","toggleOut","pauseMusic","resumeMusic","playMusic","setMusicVolume","value","checkVolumnToggle","emit","LayerCamerasMove","isHActive","hNode","vNOde","uiCamera","startBlock","cameraMove","ws","getComponentsInChildren","closeStartBlock"],"mappings":"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","sourcesContent":["let SwitchWidget = require(\"SwitchWidget\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        switchwidget: SwitchWidget,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = new cc.Color(\"#63697B\");\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 2;\n\n        if(this.switchwidget && !this.switchwidget.isPcView){\n            this.mobileView(this.switchwidget.fw);\n        }\n\n    },\n\n    step() {\n        if (this.isFurwee) {\n            this.node.x -= 20;\n        }\n        else {\n            this.node.x += 20;\n        }\n\n        this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n            this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 22;\n        this.text.string = this.text.string;\n\n        this.pinkBG.width = Math.max(230, w - 200);\n        this.whiteBG.width = Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = 2;\n    },\n\n    pcView(){\n        this.text.fontSize = 12;\n        this.text.lineHeight = 15;\n        this.text.string = this.text.string;\n\n        this.pinkBG.width = 230;\n        this.whiteBG.width = 230;\n        this.text.node.width = 190;\n\n        this.updateTextHeight = 2;\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    }\n\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nlet BodyAnim = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anim: cc.Animation\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    playIntro(){\n        this.anim.play(\"intro_body\");\n    },\n\n    introComplete(){\n        this.anim.play(\"body\");\n    },\n\n    play(){\n        this.anim.play(\"body\");\n    }\n    // update (dt) {},\n});\n","let SwitchWidget = require(\"SwitchWidget\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        switchwidget: SwitchWidget,\n        musicWidget: cc.Widget,\n        sendButton: cc.Node,\n        musicButton: cc.Node,\n\n        inputWidget: cc.Widget,\n\n        mobileViews: [cc.Node],\n        pcViews: [cc.Node],\n\n        editBox: cc.EditBox,\n        mobileEditBG: cc.Node,\n        mobileSmile: cc.Node,\n\n        pop: cc.Node,\n        mobileFirst: cc.Node,\n        isFirst: true\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n\n        if (this.switchwidget && !this.switchwidget.isPcView) {\n            this.mobileView(this.switchwidget.fw);\n\n        }\n    },\n\n    mobileView(w) {\n\n        for (let i = 0; i < this.mobileViews.length; i++) {\n            this.mobileViews[i].active = true;\n        }\n\n        for (let i = 0; i < this.pcViews.length; i++) {\n            this.pcViews[i].active = false;\n        }\n\n\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n        this.musicWidget.updateAlignment();\n\n        this.inputWidget.bottom = 35.5;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n\n        this.sendButton.scale = 0.5;\n\n        this.setMobileView(w);\n\n        if (this.isFirst) {\n            this.isFirst = false;\n            this.popMovileFirst();\n        }\n    },\n\n    setMobileView(w, gapicon = 8) {\n        let GAP_TEXTBG = 30;\n        let GAP_BORDER = 10;\n        let GAP_ICON = gapicon;\n        let ICON = 36;\n\n\n        this.editBox.textLabel.fontSize = 20;\n        this.editBox.placeholderLabel.fontSize = 20;\n\n        this.editBox.node.width = Math.min(420, w - GAP_TEXTBG * 2 - GAP_BORDER * 2 - GAP_ICON - ICON);\n        this.mobileEditBG.width = this.editBox.node.width + GAP_TEXTBG * 2;\n\n        let len = this.editBox.node.width + GAP_TEXTBG * 2 + GAP_ICON + ICON;\n\n        this.mobileEditBG.x = this.editBox.node.x = -len / 2 + this.editBox.node.width / 2 + GAP_TEXTBG;\n\n        this.mobileSmile.x = this.mobileEditBG.x + this.mobileEditBG.width / 2 - 20;\n\n        this.sendButton.x = this.editBox.node.x + this.editBox.node.width / 2 + GAP_TEXTBG + GAP_ICON + ICON / 2;\n    },\n\n    pcView() {\n        for (let i = 0; i < this.mobileViews.length; i++) {\n            this.mobileViews[i].active = false;\n        }\n\n        for (let i = 0; i < this.pcViews.length; i++) {\n            this.pcViews[i].active = true;\n        }\n\n        this.editBox.textLabel.fontSize = 17;\n        this.editBox.placeholderLabel.fontSize = 17;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n\n        this.inputWidget.bottom = 83;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        this.sendButton.scale = 1;\n        this.sendButton.x = 334;\n        this.editBox.node.width = 420;\n        this.editBox.node.x = 0;\n\n        if (this.isFirst) {\n            this.isFirst = false;\n        }\n\n        /*if(cc.sys.isBrowser){\n            this.editBox.textLabel.fontSize = 20;\n            this.editBox.placeholderLabel.fontSize = 20;\n        }*/\n    },\n\n    popupComingSoon() {\n        this.pop.active = true;\n    },\n\n    closeComingSoon() {\n        this.pop.active = false;\n    },\n\n    popMovileFirst() {\n        this.mobileFirst.active = true;\n        let oldw = this.mobileEditBG.width;\n        this.mobileEditBG.width = 360;\n        //this.mobileEditBG.x -= (oldw - this.mobileEditBG.width)/2;\n        this.editBox.node.width = 300;\n        this.editBox.node.x += (oldw - this.mobileEditBG.width) / 2;\n        //this.editBox.node.x = this.mobileEditBG.x;\n\n\n        this.mobileFirst.x = 180;\n\n        this.mobileSmile.x = this.mobileEditBG.x - this.mobileEditBG.width / 2 + 20;\n\n    },\n\n    closeMobileFirst() {\n        if (this.mobileFirst.active) {\n            this.mobileFirst.active = false;\n            this.setMobileView(this.switchwidget.fw);\n        }\n    }\n});\n","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false,\n\n        isM:false,\n        isN:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n         if(this.isM){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x +=1;\n             }\n        }\n\n         if(this.isN){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n            case cc.macro.KEY.m:\n                this.isM = true;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n            case cc.macro.KEY.m:\n                this.isM = false;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = false;\n                break;\n        }\n    }\n});","let Game = require(\"Game\");\n\nlet CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cameras: [cc.Camera],\n        sceneNodes: [cc.Node],\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game:Game\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].eulerAngles.x, y: this.sceneNodes[i].eulerAngles.y };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onMouseMove: function (evt) {\n        if(!this.game.furweeIntialized){\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        let targetY = (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY;\n        let targetX = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX ;\n\n        //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n        //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n        //console.log(\"currentX\", currentX, \"currentY\", currentY);\n\n        let timeY = Math.abs(targetY - currentY) / this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX) / this.rotRangeX;\n        //console.log('time', timeX, timeY);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY + this.infos[i].y, 0));\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n            //    console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(rotate3DTo);\n\n        }\n\n    },\n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stage: cc.Node,\n        eye: cc.Node,\n        isLeft: cc.Boolean\n    },\n\n    onLoad() {\n        this.randX = 8;\n        this.randY = 1.5;\n        // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        // this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt) {\n        //console.log(evt);\n    },\n\n    mouseMoveHandler(evt) {\n\n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let len = 0;\n        let tan = 0;\n        let ctan = 0;\n\n        let posX = 0;\n        let posY = 0;\n\n        if (pos.x != 0 && pos.y != 0) {\n\n            let mouseLen2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            if (mouseLen2 > Math.pow(150, 2)) {\n                posX = 0;\n                posY = 0;\n\n            }\n            else {\n                let factor = Math.min(Math.pow(mouseLen2, 0.5) / 40, 1);\n                //factor = Math.pow(factor, 2);\n                if (this.isLeft) {\n                    pos.x -= 40 * factor;\n                }\n                else {\n                    pos.x += 40 * factor;\n                }\n                if (pos.x < 0) {\n                    pos.x = Math.max(pos.x, -8);\n                }\n                else {\n                    pos.x = Math.min(pos.x, 8);\n                }\n                if (pos.y < 0) {\n                    pos.y = Math.max(pos.y, -2.5);\n                }\n                else {\n                    pos.y = Math.min(pos.y, 2.5);\n                }\n                let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n                len = Math.pow(len2, 0.5);\n\n                tan = pos.y / len;\n                ctan = pos.x / len;\n\n                posX = len * ctan;\n                posY = len * tan;\n\n            }\n\n        }\n\n        this.eye.setPosition(posX, posY);\n        //console.log(\"set pos\", posX, posY);\n\n    }\n})","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = this.fitHeight / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let MusicToggle = require(\"MusicToggle\");\nlet BodyAnim = require(\"BodyAnim\");\nlet UIManager = require(\"UIManager\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        audioID: -1,\n        mouthNode: cc.Node,\n        mouthIsReset: true,\n        historyObjects: [],\n       \n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n       \n        idleMouthTimeout: -1,\n        bodyAnim: BodyAnim,\n        headAnim: cc.Animation,\n\n        initialMsgJSON: null,\n\n        introCameras: [cc.Camera],\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node,\n       \n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n      \n        this.uiManager.game = this;\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n\n        if (window.location.href.indexOf(\"furwee\") != -1) {\n            this.URL = \"http://furwee.ai\";\n            this.URL_SUFFIX = \"furwee.json\";\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n        \n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n        \n        return;\n        \n        */\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.bodyAnim.playIntro();\n        this.headAnim.play();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.mouthIsReset = false;\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.headAnim.play();\n        this.bodyAnim.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.setEnableTextInput(true);\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.bodyAnim.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.stopIdleMouth();\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        this.editBox.focus();\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this.clearMouth();\n            node.active = true;\n        }\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else {\n            if (!this.mouthIsReset) {\n                this.mouthIsReset = true;\n                this.clearMouth();\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n                this.startIdleMouth();\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        this.balloonNode.addChild(balloon);\n\n\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n         //this.tryToStartFurweeIntro();\n       this.introCameraAnim();\n    },\n\n    introCameraAnim() {\n        for (let i = 0; i < this.introCameras.length; i++) {\n            this.introCameras[i].getComponent(cc.Animation).play();\n        }\n\n        setTimeout(this.tryToStartFurweeIntro.bind(this), 2000);\n    },\n\n    clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    startIdleMouth() {\n        this.setIdleMouth();\n    },\n\n    setIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n\n        this.clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        setTimeout(this.setIdleMouth.bind(this), 3000 * Math.random() + 3000);\n    },\n\n    stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.editBox.enabled = this.enableTextInput = bool;\n    },\n\n    logout(){\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST', this.URL  + \"/logout\", true);\n        xhr.send();\n    }\n});\n","let UIBase = require(\"UIBase\");\n\nlet HUI = cc.Class({\n    extends: UIBase,\n    \n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n}\n\nHelper.handleResize = function(){\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i]();\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\nexport {Helper};","let Game = require(\"Game\");\n\nlet LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n   \n        sceneNodes: [cc.Node],\n\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game:Game,\n        debugNode: cc.Label\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n      \n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y,z:this.sceneNodes[i].z };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n       // window.addEventListener(\"deviceorientation\", this.onDeviceMove.bind(this));\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function(){\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\n            DeviceOrientationEvent.requestPermission()\n              .then(permissionState => {\n                if (permissionState === 'granted') {\n                  window.addEventListener('deviceorientation',this.onDeviceMove.bind(this));\n                }\n              })\n              .catch(console.error);\n          }else {\n            // Handle regular non iOS 13+ devices.\n            window.addEventListener('deviceorientation', this.onDeviceMove.bind(this));\n          }\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onDeviceMove: function(evt){\n        \n        console.log(evt.gamma);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let targetX= this.infos[i].x + (evt.gamma/90) * this.rotRangeX * this.infos[i].z/10;\n           \n            let currentX = this.sceneNodes[0].x;\n\n            let timeX = Math.abs(targetX - currentX)/this.rotRangeX * 2;\n            //console.log('time', timeX, timeY);\n    \n            //targetY + \n            let moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n           \n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(moveTo);\n            \n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if(!this.game.furweeIntialized){\n            return;\n        }\n\n        this.debugNode.string += \"string\"+\"\\n\";\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        \n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let targetX= (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY * (this.infos[i].z/ 10);\n            let targetY = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX * (this.infos[i].z/ 10);\n    \n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n    \n            // console.log(\"target\", targetX, targetY);\n            let currentX = this.sceneNodes[0].x;\n            let currentY = this.sceneNodes[0].y;\n            //console.log(\"currentX\", currentX, \"currentY\", currentY);\n    \n            let timeY = Math.abs(targetY - currentY) / this.rotRangeY / 2;\n            let timeX = Math.abs(targetX - currentX) / this.rotRangeX / 2;\n            //console.log('time', timeX, timeY);\n    \n            //targetY + \n            let moveTo = cc.moveTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            console.log(\"i\", targetX + this.infos[i].x, targetY + this.infos[i].y, this.infos[i].z);\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n            //    console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(moveTo);\n            \n        }\n\n    },\n\n    toggleDebug: function(){\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar:cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad () {\n\n        if(false){//cc.sys.isBrowser){\n            cc.director.preloadScene(\"game\", this.onProgress.bind(this), this.onComplete.bind(this));\n        }\n        else{\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n       \n    },\n\n    onProgress(completedCount, totalCount){\n        this.progressBar.progress = completedCount/totalCount;\n    },\n\n    onComplete(error){\n        if(!error){\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n    \n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: null,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId != null) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (!this.audioId) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n          clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n       \n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n           \n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle(){\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0){\n            this.toggleOff();\n        }\n    },\n\n\n});","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n        isPcView: true,\n        fw : -1\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = this.fitHeight / frameSize.height * frameSize.width;\n        this.fw = w;\n        console.log(\"W\",w);\n        if (w < this.minWidth) {\n            this.node.emit(\"mobileView\", w);\n            this.isPcView = false;\n        }\n        else{\n            this.node.emit(\"pcView\", w);\n            this.isPcView = true;\n        }\n    }\n});\n","let Game = require(\"Game\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox\n    },\n    \n});","let SwitchWidget = require(\"SwitchWidget\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        switchwidget: SwitchWidget,\n        game: null,\n        cameraMove: LayerCamerasMove\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (this.switchwidget && !this.switchwidget.isPcView) {\n            this.mobileView(this.switchwidget.fw);\n\n        }\n    },\n\n\n    mobileView(){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n    },\n\n    pcView(){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    }\n});","let UIBase = require(\"UIBase\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n        pop: cc.Node,\n    },\n\n    //mobile\n    popupComingSoon() {\n        this.pop.active = true;\n    },\n\n    closeComingSoon() {\n        this.pop.active = false;\n    },\n    \n});"],"file":"project.js"}