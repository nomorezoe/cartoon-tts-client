{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/game/BodyAnim.js","assets/Scripts/game/BottomUI.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/game/CamMove.js","assets/Scripts/game/Eye.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["SwitchWidget","require","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","switchwidget","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","init","isFurwee","color","Color","active","string","isPcView","fw","step","x","opacity","parent","removeChild","w","fontSize","lineHeight","width","anim","Animation","start","playIntro","play","introComplete","musicWidget","Widget","sendButton","musicButton","inputWidget","mobileViews","pcViews","editBox","EditBox","mobileEditBG","mobileSmile","pop","mobileFirst","isFirst","i","length","_i","bottom","left","updateAlignment","scale","setMobileView","popMovileFirst","GAP_ICON","arguments","undefined","textLabel","placeholderLabel","min","GAP_TEXTBG","GAP_BORDER","len","ICON","_i2","popupComingSoon","closeComingSoon","oldw","closeMobileFirst","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","isM","isN","statics","systemEvent","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","z","y","_i3","_i4","_i5","_i6","rotationX","_i7","_i8","fov","_i9","event","keyCode","macro","KEY","a","d","s","o","p","k","l","m","n","u","console","log","position","Game","sceneNodes","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","game","view","getDesignResolutionSize","getCanvasSize","info","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","furweeIntialized","targetY","_x","targetX","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","v3","stopAllActions","runAction","stage","eye","isLeft","Boolean","randX","randY","touchMoveHandler","mouseMoveHandler","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","convertToNodeSpaceAR","tan","posX","posY","mouseLen2","pow","factor","len2","setPosition","Helper","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","getComponent","Canvas","frameSize","getFrameSize","MusicToggle","BodyAnim","UIManager","LayerCamerasMove","audioID","mouthNode","mouthIsReset","historyObjects","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","idleMouthTimeout","bodyAnim","headAnim","initialMsgJSON","introCameras","URL","URL_SUFFIX","LOGOUT_URL","enableTextInput","uiManager","cameraMove","music","isLocalHost","window","location","href","indexOf","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","audioOffset","updateMouth","setFinishCallback","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","reply","index","message","soundloadedHandler","lip_sync_animation","err","res","stopIdleMouth","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","params2","getChildByName","clearMouth","dt","time","getCurrentTime","startIdleMouth","textContent","updateSendButton","children","balloon","instantiate","addChild","blockClickHandler","initialize","introCameraAnim","setIdleMouth","clearTimeout","idle","floor","random","errorClickHandler","captureError","bool","logout","UIBase","callBacks","initialized","setResizeCallback","handleResize","func","removeCallback","splice","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","onDeviceMotion","gamma","beta","screenWidth_2","screenHeight_2","progressBar","ProgressBar","setOrientation","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","bgVolumn","bgSlider","Slider","bgProgress","offTimer","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","TOUCH_END","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","pauseMusic","resumeMusic","playMusic","setMusicVolume","value","_this","checkVolumnToggle","appHidden","isNative","muteAll","muted","setVolume","emit","isHActive","hNode","vNOde","uiCamera","startBlock","debugNode","instance","ws","getComponentsInChildren","closeStartBlock","toggleDebug","acctive","microButton","recordButton","stream","recorder","useWebRecognition","recognition","gumStream","rec","input","audioContext","startRecord","textRecognition","enabled","SpeechRecognition","webkitSpeechRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","interimResults","continuous","finalString","onresult","interString","resultIndex","results","isFinal","transcript","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","createDownloadLink","webkitURL"],"mappings":"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","sourcesContent":["let SwitchWidget = require(\"SwitchWidget\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        switchwidget: SwitchWidget,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = new cc.Color(\"#63697B\");\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 2;\n\n        if(this.switchwidget && !this.switchwidget.isPcView){\n            this.mobileView(this.switchwidget.fw);\n        }\n\n    },\n\n    step() {\n        if (this.isFurwee) {\n            this.node.x -= 20;\n        }\n        else {\n            this.node.x += 20;\n        }\n\n        this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n            this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 22;\n        this.text.string = this.text.string;\n\n        this.pinkBG.width = Math.max(230, w - 200);\n        this.whiteBG.width = Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = 2;\n    },\n\n    pcView(){\n        this.text.fontSize = 12;\n        this.text.lineHeight = 15;\n        this.text.string = this.text.string;\n\n        this.pinkBG.width = 230;\n        this.whiteBG.width = 230;\n        this.text.node.width = 190;\n\n        this.updateTextHeight = 2;\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    }\n\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nlet BodyAnim = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anim: cc.Animation\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    playIntro(){\n        this.anim.play(\"intro_body\");\n    },\n\n    introComplete(){\n        this.anim.play(\"body\");\n    },\n\n    play(){\n        this.anim.play(\"body\");\n    }\n    // update (dt) {},\n});\n","let SwitchWidget = require(\"SwitchWidget\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        switchwidget: SwitchWidget,\n        musicWidget: cc.Widget,\n        sendButton: cc.Node,\n        musicButton: cc.Node,\n\n        inputWidget: cc.Widget,\n\n        mobileViews: [cc.Node],\n        pcViews: [cc.Node],\n\n        editBox: cc.EditBox,\n        mobileEditBG: cc.Node,\n        mobileSmile: cc.Node,\n\n        pop: cc.Node,\n        mobileFirst: cc.Node,\n        isFirst: true\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n\n        if (this.switchwidget && !this.switchwidget.isPcView) {\n            this.mobileView(this.switchwidget.fw);\n\n        }\n    },\n\n    mobileView(w) {\n\n        for (let i = 0; i < this.mobileViews.length; i++) {\n            this.mobileViews[i].active = true;\n        }\n\n        for (let i = 0; i < this.pcViews.length; i++) {\n            this.pcViews[i].active = false;\n        }\n\n\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n        this.musicWidget.updateAlignment();\n\n        this.inputWidget.bottom = 35.5;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n\n        this.sendButton.scale = 0.5;\n\n        this.setMobileView(w);\n\n        if (this.isFirst) {\n            this.isFirst = false;\n            this.popMovileFirst();\n        }\n    },\n\n    setMobileView(w, gapicon = 8) {\n        let GAP_TEXTBG = 30;\n        let GAP_BORDER = 10;\n        let GAP_ICON = gapicon;\n        let ICON = 36;\n\n\n        this.editBox.textLabel.fontSize = 20;\n        this.editBox.placeholderLabel.fontSize = 20;\n\n        this.editBox.node.width = Math.min(420, w - GAP_TEXTBG * 2 - GAP_BORDER * 2 - GAP_ICON - ICON);\n        this.mobileEditBG.width = this.editBox.node.width + GAP_TEXTBG * 2;\n\n        let len = this.editBox.node.width + GAP_TEXTBG * 2 + GAP_ICON + ICON;\n\n        this.mobileEditBG.x = this.editBox.node.x = -len / 2 + this.editBox.node.width / 2 + GAP_TEXTBG;\n\n        this.mobileSmile.x = this.mobileEditBG.x + this.mobileEditBG.width / 2 - 20;\n\n        this.sendButton.x = this.editBox.node.x + this.editBox.node.width / 2 + GAP_TEXTBG + GAP_ICON + ICON / 2;\n    },\n\n    pcView() {\n        for (let i = 0; i < this.mobileViews.length; i++) {\n            this.mobileViews[i].active = false;\n        }\n\n        for (let i = 0; i < this.pcViews.length; i++) {\n            this.pcViews[i].active = true;\n        }\n\n        this.editBox.textLabel.fontSize = 17;\n        this.editBox.placeholderLabel.fontSize = 17;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n\n        this.inputWidget.bottom = 83;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        this.sendButton.scale = 1;\n        this.sendButton.x = 334;\n        this.editBox.node.width = 420;\n        this.editBox.node.x = 0;\n\n        if (this.isFirst) {\n            this.isFirst = false;\n        }\n\n        /*if(cc.sys.isBrowser){\n            this.editBox.textLabel.fontSize = 20;\n            this.editBox.placeholderLabel.fontSize = 20;\n        }*/\n    },\n\n    popupComingSoon() {\n        this.pop.active = true;\n    },\n\n    closeComingSoon() {\n        this.pop.active = false;\n    },\n\n    popMovileFirst() {\n        this.mobileFirst.active = true;\n        let oldw = this.mobileEditBG.width;\n        this.mobileEditBG.width = 360;\n        //this.mobileEditBG.x -= (oldw - this.mobileEditBG.width)/2;\n        this.editBox.node.width = 300;\n        this.editBox.node.x += (oldw - this.mobileEditBG.width) / 2;\n        //this.editBox.node.x = this.mobileEditBG.x;\n\n\n        this.mobileFirst.x = 180;\n\n        this.mobileSmile.x = this.mobileEditBG.x - this.mobileEditBG.width / 2 + 20;\n\n    },\n\n    closeMobileFirst() {\n        if (this.mobileFirst.active) {\n            this.mobileFirst.active = false;\n            this.setMobileView(this.switchwidget.fw);\n        }\n    }\n});\n","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false,\n\n        isM:false,\n        isN:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n         if(this.isM){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x +=1;\n             }\n        }\n\n         if(this.isN){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n            case cc.macro.KEY.m:\n                this.isM = true;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n            case cc.macro.KEY.m:\n                this.isM = false;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = false;\n                break;\n        }\n    }\n});","let Game = require(\"Game\");\n\nlet CamMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cameras: [cc.Camera],\n        sceneNodes: [cc.Node],\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game:Game\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].eulerAngles.x, y: this.sceneNodes[i].eulerAngles.y };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onMouseMove: function (evt) {\n        if(!this.game.furweeIntialized){\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        let targetY = (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY;\n        let targetX = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX ;\n\n        //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n        //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n        //console.log(\"currentX\", currentX, \"currentY\", currentY);\n\n        let timeY = Math.abs(targetY - currentY) / this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX) / this.rotRangeX;\n        //console.log('time', timeX, timeY);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY + this.infos[i].y, 0));\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n            //    console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(rotate3DTo);\n\n        }\n\n    },\n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stage: cc.Node,\n        eye: cc.Node,\n        isLeft: cc.Boolean\n    },\n\n    onLoad() {\n        this.randX = 8;\n        this.randY = 1.5;\n        // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        // this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt) {\n        //console.log(evt);\n    },\n\n    mouseMoveHandler(evt) {\n\n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let len = 0;\n        let tan = 0;\n        let ctan = 0;\n\n        let posX = 0;\n        let posY = 0;\n\n        if (pos.x != 0 && pos.y != 0) {\n\n            let mouseLen2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            if (mouseLen2 > Math.pow(150, 2)) {\n                posX = 0;\n                posY = 0;\n\n            }\n            else {\n                let factor = Math.min(Math.pow(mouseLen2, 0.5) / 40, 1);\n                //factor = Math.pow(factor, 2);\n                if (this.isLeft) {\n                    pos.x -= 40 * factor;\n                }\n                else {\n                    pos.x += 40 * factor;\n                }\n                if (pos.x < 0) {\n                    pos.x = Math.max(pos.x, -8);\n                }\n                else {\n                    pos.x = Math.min(pos.x, 8);\n                }\n                if (pos.y < 0) {\n                    pos.y = Math.max(pos.y, -2.5);\n                }\n                else {\n                    pos.y = Math.min(pos.y, 2.5);\n                }\n                let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n                len = Math.pow(len2, 0.5);\n\n                tan = pos.y / len;\n                ctan = pos.x / len;\n\n                posX = len * ctan;\n                posY = len * tan;\n\n            }\n\n        }\n\n        this.eye.setPosition(posX, posY);\n        //console.log(\"set pos\", posX, posY);\n\n    }\n})","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = this.fitHeight / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let MusicToggle = require(\"MusicToggle\");\nlet BodyAnim = require(\"BodyAnim\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n        mouthNode: cc.Node,\n        mouthIsReset: true,\n        historyObjects: [],\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        idleMouthTimeout: -1,\n        bodyAnim: BodyAnim,\n        headAnim: cc.Animation,\n\n        initialMsgJSON: null,\n\n        introCameras: [cc.Camera],\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n        LOGOUT_URL: \"/logout\",\n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node,\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n\n        if (true){//window.location.href.indexOf(\"furwee\") != -1) {\n            this.URL = \"https://furwee.ai/api\";\n            this.URL_SUFFIX = \"\";\n            this.LOGOUT_URL =  \"https://furwee.ai/logout\";\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n        \n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n        \n        return;\n        \n        */\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.bodyAnim.playIntro();\n        this.headAnim.play();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.mouthIsReset = false;\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.headAnim.play();\n        this.bodyAnim.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.setEnableTextInput(true);\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.bodyAnim.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.stopIdleMouth();\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this.clearMouth();\n            node.active = true;\n        }\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else {\n            if (!this.mouthIsReset) {\n                this.mouthIsReset = true;\n                this.clearMouth();\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n                this.startIdleMouth();\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        this.balloonNode.addChild(balloon);\n\n\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        //this.tryToStartFurweeIntro();\n        this.introCameraAnim();\n    },\n\n    introCameraAnim() {\n        for (let i = 0; i < this.introCameras.length; i++) {\n            this.introCameras[i].getComponent(cc.Animation).play();\n        }\n\n        setTimeout(this.tryToStartFurweeIntro.bind(this), 2000);\n    },\n\n    clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    startIdleMouth() {\n        this.setIdleMouth();\n    },\n\n    setIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n\n        this.clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        setTimeout(this.setIdleMouth.bind(this), 3000 * Math.random() + 3000);\n    },\n\n    stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    },\n\n    logout() {\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST', this.LOGOUT_URL , true);\n        xhr.send();\n    }\n});\n","let UIBase = require(\"UIBase\");\n\nlet HUI = cc.Class({\n    extends: UIBase,\n    \n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n}\n\nHelper.handleResize = function(){\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i]();\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\nexport {Helper};","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            this.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = this.infos[i].x + (evt.gamma / 90) * this.rotRangeX * this.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (this.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = this.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = this.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (this.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (this.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = this.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = this.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = this.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = completedCount / totalCount;\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: null,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId != null) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (!this.audioId) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n        if (appHidden) {\n            this.muteAll(true);\n        }\n        else {\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : this.bgVolumn);\n        }\n\n    }\n});","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n        isPcView: true,\n        fw : -1\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = this.fitHeight / frameSize.height * frameSize.width;\n        this.fw = w;\n        console.log(\"W\",w);\n        if (w < this.minWidth) {\n            this.node.emit(\"mobileView\", w);\n            this.isPcView = false;\n        }\n        else{\n            this.node.emit(\"pcView\", w);\n            this.isPcView = true;\n        }\n    }\n});\n","let Game = require(\"Game\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox\n    },\n    \n});","let SwitchWidget = require(\"SwitchWidget\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        switchwidget: SwitchWidget,\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (this.switchwidget && !this.switchwidget.isPcView) {\n            this.mobileView(this.switchwidget.fw);\n\n        }\n\n        UIManager.instance = this;\n    },\n\n\n    mobileView(){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n    },\n\n    pcView(){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"VUI\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    }\n});","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n        stream: null,\n        recorder: null,\n\n        //\n        useWebRecognition: true,\n        recognition: null,\n\n        //api\n\n        gumStream : null,\n        //stream from getUserMedia() \n        rec : null,\n        //Recorder.js object \n        input : null,\n        audioContext:null,\n       \n    },\n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n        this.textRecognition = \"\";\n\n        this.text.enabled = false;\n\n        window.SpeechRecognition = window.SpeechRecognition\n            || window.webkitSpeechRecognition;\n\n        this.useWebRecognition = SpeechRecognition != undefined;\n\n        UIManager.instance.debugNode.string += \"useWebRecognition:\" +  this.useWebRecognition + \"\\n\";\n        \n        if(this.useWebRecognition){\n            this.startWebRecognition();\n        }\n        else{\n            this.startAPIRecognition();\n        }\n        \n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n\n        if(this.useWebRecognition){\n           this.stopWebRecognition();\n        }\n        else{\n            this.stopAPIRecognition();\n        }\n       \n\n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    startWebRecognition(){\n        this.recognition = new SpeechRecognition();\n        this.recognition.interimResults = true;\n        this.recognition.continuous = true;\n\n        let that = this;\n        let finalString = \"\";\n    \n        this.recognition.onresult = function (event) {\n\n            let interString = \"\";\n            for (let i = event.resultIndex; i < event.results.length; ++i) {\n                // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n                if (event.results[i].isFinal) {\n                    finalString += event.results[i][0].transcript;\n                    that.textRecognition = finalString;\n                   \n                }\n                else{\n                    interString += event.results[i][0].transcript;\n                    that.textRecognition = interString;\n                   \n                }\n            }\n            that.text.string = that.textRecognition;\n\n            if (that.text.enabled) {\n                that.updateUIAfterRecord();\n            }\n        };\n\n        this.recognition.start();\n        //this.recognition.addEventListener('end',  this.recognition.start);\n    },\n\n    stopWebRecognition(){\n        this.recognition.stop();\n    },\n\n    \n    //start api recognition\n    startAPIRecognition(){\n        \n        var AudioContext = window.AudioContext || window.webkitAudioContext;\n        \n        //new audio context to help us record ƒ\n\n        let that = this;\n\n        let constraints  =  {\n            audio: true,\n            video: false\n        } ;\n\n        navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n            that.audioContext = new AudioContext();\n\n            console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n            /* assign to gumStream for later use */\n            that.gumStream = stream;\n            /* use the stream */\n            that.input = that.audioContext.createMediaStreamSource(stream);\n            /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n            that.rec = new Recorder(that.input, {\n                numChannels: 1\n            }) \n            //start the recording process \n            that.rec.record()\n            console.log(\"Recording started\");\n        }).catch(function(err) {\n            \n        });\n    },\n\n    stopAPIRecognition(){\n        this.rec.stop(); //stop microphone access \n        this.gumStream.getAudioTracks()[0].stop();\n        //create the wav blob and pass it on to createDownloadLink \n        this.rec.exportWAV(function(blob) {\n\n\n            let xhr = new XMLHttpRequest();\n            let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200) {\n                       console.log(xhr.responseText);\n                    }\n                }\n            }\n            //let params = JSON.stringify({ \"audio\": blob});\n            xhr.open('POST', requestURL, true);\n\n            var fd=new FormData();\n            fd.append(\"audio\",blob);\n\n            xhr.send(fd);\n          });\n\n       \n    },\n\n    createDownloadLink(blob) {\n        let URL = window.URL || window.webkitURL;\n\n        console.log('createDownloadLink',blob);\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    }\n\n});"],"file":"project.js"}