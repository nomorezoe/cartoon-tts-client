{"version":3,"sources":["assets/Scripts/tool/AssetsManager.js","assets/Scripts/game/Ballon.js","assets/Scripts/ui/challenge/ChallengeItem.js","assets/Scripts/ui/challenge/ChallengePanel.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LanguagePanel.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/Server.js","assets/Scripts/tool/SoundManager.js","assets/Scripts/tool/SpeechTool.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/tool/UserData.js","assets/Scripts/ui/VUI.js"],"names":["AssetsManager","images","getImage","path","callBack","undefined","cc","loader","loadRes","err","content","error","message","cancelGetImage","Helper","require","UIManager","Balloon","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","trim","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","y","label","image","Sprite","initialize","configGroup","configChallenge","desc","replace","target","img","_imageLoaded","spriteFrame","SpriteFrame","layout","groupPrefab","Prefab","itemPrefab","config","json","initilaize","key","groups","groupNode","instantiate","addChild","getChildByName","title","i","challenges","_config","group","itemNode","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","DEBUG","LANG","MusicToggle","LayerCamerasMove","Pet","Server","SoundManager","audioID","historyObjects","pet","balloonPrefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","nextTalks","start","game","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","console","log","socket","id","play","getInitialMessage","responseText","JSON","parse","tryToStartFurweeIntro","remoteUrl","audio_file_link","load","url","isBlockActive","onTTSCompleted","reply","push","length","info","balloonText","split","ballons","balloon","addBallon","_balloon","res","_startPlayTalking","lip_sync_animation","_startTalk","audioEngine","shouldbeMuted","setVolume","audioOffset","audioInfo","updateMouth","setFinishCallback","_completeTalk","startIdle","nextTalk","splice","balloonComps","audioRes","balloons","_this","isReadyToTalk","setTimeout","didReturnHandler","sendHandler","focus","sendText","resetIdle","sys","isMobile","blur","getMessage","split_reply","getEmotion","response","setEmotion","emotion","viseme_id","update","dt","time","getCurrentTime","audio_offset_ms","textContent","updateSendButton","children","blockClickHandler","playWelcome","errorClickHandler","window","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","_impl","_elem","autocomplete","EventType","MOUSE_ENTER","showTop","onDestroy","off","TOUCH_END","hideTop","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","indexOf","UserData","LanguagePanel","toggles","Toggle","toggleIndex","langChoice","setToggleIndex","onToggleLanuge","evt","param","parseInt","setLang","check","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","loadingText","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","randomSpeak","randIndx","floor","random","completedCount","totalCount","progress","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","state","tummy","heartPrefab","_heart","laughSound","isAnimLaughLoaded","isAnimIdleWaitLoaded","_onTummyHandler","_randTalkAnims","_initPetResourceLoading","_playFurweeAnim","_setAnimFinishHandler","playIntro","_stopIdleMouth","startsWith","act","_clearMouth","_setIdleMouth","idleTimer","_this2","idle","_cancelAnimHandler","_animComplete","_setAnimLastFrameHandler","_removeClip","_i","currentClip","name","removeClip","_initLaugh","prefab","_addAnimClips","data","_initIdleWait","_initTalk","concat","bAnim","hAnim","_clips","addClip","_i2","URL","callback","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","open","setRequestHeader","send","params","stringify","history","callbak","xhr2","requestURL2","params2","caches","audio","SpeechTool","ui","useWebRecognition","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","checkWebRecognition","isWorkingChecked","initRecognition","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","debugNode","isWorking","audiostart","audioend","end","onerror","onresult","onaudiostart","onaaudioend","onend","startWebRecognition","finalString","interimResults","continuous","lang","event","interString","autoEnd","resultIndex","results","isFinal","transcript","enabled","updateUIAfterRecord","stopRecord","onaudioend","stopWebRecognition","stop","startAPIRecognition","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","video","then","createMediaStreamSource","Recorder","numChannels","record","stopAPIRecognition","getAudioTracks","exportWAV","blob","fd","FormData","append","emit","microButton","recordButton","languagePanel","challengePanel","startRecord","arguments","toggleLanguagePanel","hideLanguagePanel","toggleChallengePanel","hideChallengePanel","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","acctive","logout","location","href","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary","_showLabels","_isLabelVisible","_updateLabels","setItem"],"mappings":"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","sourcesContent":["let AssetsManager = {};\n\nAssetsManager.images = {};\n\nAssetsManager.getImage = function(path, callBack){\n    if(AssetsManager.images[path] == undefined){\n        cc.loader.loadRes(path, function (err, content) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            \n            AssetsManager.images[path] = content;\n            callBack(content);\n        });\n    }\n    else{\n        callBack(AssetsManager.images[path] );\n    }\n}\n\nAssetsManager.cancelGetImage = function(path, callBack){\n\n}\n\nexport {AssetsManager};\n\n","const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text.trim();\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","const { AssetsManager } = require(\"AssetsManager\"); \n\nlet ChallengePanel = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        label : cc.Label,\n        image: cc.Sprite\n    },\n\n    \n\n    initialize(configGroup, configChallenge){\n        this.label.string = configGroup.desc.replace(\"{n}\", configChallenge.target);\n\n        AssetsManager.getImage(\"challenge/assets/sm/\"+configChallenge.img, this._imageLoaded.bind(this));\n    },\n\n    _imageLoaded(img){\n        this.image.spriteFrame = new cc.SpriteFrame(img);\n    }\n\n})","\n\nlet ChallengePanel = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        layout:cc.Node,\n\n        groupPrefab: cc.Prefab,\n        itemPrefab: cc.Prefab,\n    },\n\n    statics:{\n        config: null\n    },\n\n    onLoad(){\n        if(this.config == null){\n            cc.loader.loadRes('challenge/config', function (err, content) {\n                if (err) {\n                    cc.error(err.message || err);\n                    return;\n                }\n\n                this.config = content.json;\n                this.initilaize();\n            }.bind(this))\n        }\n    },\n\n    initilaize(){\n        this.groups = {};\n        for(let key in  this.config.groups){\n            let config = this.config.groups[key];\n            let groupNode = cc.instantiate(this.groupPrefab);\n            this.layout.addChild(groupNode);\n\n            groupNode.getChildByName(\"title\").getComponent(cc.Label).string = config.title;\n\n            this.groups[key] = {config:config, node: groupNode};\n        }\n\n        for(let i in this.config.challenges){\n            let config = this.config.challenges[i];\n            let group  = this.groups[config.group];\n\n            let layout = group.node.getChildByName(\"layout\");\n            let itemNode = cc.instantiate(this.itemPrefab);\n            layout.addChild(itemNode);\n\n            itemNode.getComponent(\"ChallengeItem\").initialize(group.config, config);\n        }\n     \n    }\n});\n\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nFurwee.DEBUG = true;\nFurwee.LANG = \"en-US\";\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst { Furwee } = require(\"Furwee\");\nlet Pet = require(\"Pet\");\nconst { Server } = require(\"../tool/Server\");\nconst {SoundManager} = require(\"../tool/SoundManager\");\n\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n\n        historyObjects: [],\n\n        pet: Pet,\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        initialMsgJSON: null,\n\n        furweeIntialized: false,\n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node,\n\n\n        nextTalks: []\n\n\n    },\n\n    start() {\n        SoundManager.init();\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee() {\n        this.pet.play();\n\n        Server.getInitialMessage(function(responseText){\n            this.initialMsgJSON = JSON.parse(responseText);\n            if (!this.tryToStartFurweeIntro()) {\n                //preload sound\n                let remoteUrl = this.initialMsgJSON.audio_file_link;\n                cc.loader.load({ url: remoteUrl, type: 'wav' });\n            }\n\n        }.bind(this))\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n\n        this.furweeIntialized = true;\n        //this.pet.playWelcome();\n        this.setEnableTextInput(true);\n        //this.pet.playIntro();\n        this.onTTSCompleted(this.initialMsgJSON, this.initialMsgJSON.reply);\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, balloonText, split) {\n        if (!info) {\n            return;\n        }\n\n       \n\n        let remoteUrl = info.audio_file_link;\n\n        let ballons = [];\n        if(split){\n            for(let i =0; i < split.length; i ++ ){\n                let balloon = this.addBallon(split[i], true).getComponent(\"Ballon\");\n                if(this.audioID != -1) {\n                    balloon.whiteBG.opacity = 128;\n                    balloon.text.node.opacity = 128;\n                }\n                ballons.push(balloon);\n            }\n        }\n        else{\n            let balloon = this.addBallon(balloonText, true).getComponent(\"Ballon\");\n            if(this.audioID != -1) {\n                balloon.whiteBG.opacity = 128;\n                balloon.text.node.opacity = 128;\n            }\n            ballons.push(balloon);\n        }\n        \n                \n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this._startPlayTalking(res, ballons, info.lip_sync_animation);\n        }.bind(this));\n    },\n\n    _startTalk(res, info) {\n        this.audioID = cc.audioEngine.play(res);\n        if (this.audioID && this.music.shouldbeMuted()) {\n            cc.audioEngine.setVolume(this.audioID, 0);\n        }\n        this.audioOffset = 0;\n        this.audioInfo= info;\n        this.updateMouth();\n\n\n        cc.audioEngine.setFinishCallback(this.audioID, this._completeTalk.bind(this));\n    },\n\n    _completeTalk() {\n        this.audioID = -1;\n        this.pet.startIdle();\n\n        if (this.nextTalks.length) {\n            let nextTalk = this.nextTalks.splice(0, 1)[0];\n\n            for(let i =0 ; i < nextTalk.balloonComps.length; i++){\n                nextTalk.balloonComps[i].whiteBG.opacity = 255;\n                nextTalk.balloonComps[i].text.node.opacity = 255;\n            }\n           \n            this._startTalk(nextTalk.audioRes, nextTalk.info);\n        }\n    },\n\n    _startPlayTalking(res, balloons, audioInfo) {\n        if (this.pet.isReadyToTalk()) {\n            if (this.audioID != -1) {\n                this.nextTalks.push({ balloonComps: balloons, audioRes: res, info: audioInfo });\n            }\n            else {\n                this._startTalk(res, audioInfo);\n            }\n        }\n        else {\n            //this.pet.playIntro();\n            setTimeout(() => {\n                this._startPlayTalking(res, balloons, audioInfo);\n            }, 16);\n        }\n\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        SoundManager.play(\"click\");\n        this.pet.resetIdle();\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        Server.getMessage(sendText, this.historyObjects, function(responseText){\n            let json = JSON.parse(responseText);\n            this.setEnableTextInput(true);\n            this.onTTSCompleted(json, json.reply, json.split_reply);\n\n            this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n        }.bind(this));\n        \n        Server.getEmotion(sendText, function(responseText){\n            let response = JSON.parse(responseText);\n            this.pet.setEmotion(response.emotion);\n        }.bind(this))\n\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n        this.pet.updateMouth(id);\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n        return balloon;\n\n        // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        this.pet.playWelcome();\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n        SoundManager.play(\"click\");\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n       \n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","const { Furwee } = require(\"Furwee\");\nconst { UserData } = require(\"UserData\");\nconst {SoundManager} = require(\"SoundManager\");\n\nlet LanguagePanel = cc.Class({\n    extends: cc.Component,\n\n\n    properties:{\n        toggles:[cc.Toggle],\n        toggleIndex: 0\n    },\n\n    statics:{\n        langChoice:[\"en-US\",\"zh-CN\",\"de-DE\",\"pt-PT\",\"it-IT\",\"ko-KR\",\"es-ES\",\"fr-FR\",\"ja\"]\n    },\n\n    onLoad(){\n        let index = LanguagePanel.langChoice.indexOf(Furwee.LANG);\n        this.setToggleIndex(index);\n    },\n\n    onToggleLanuge(evt, param){\n        this.toggleIndex = parseInt(param);\n        UserData.setLang (LanguagePanel.langChoice[this.toggleIndex]);\n\n        SoundManager.play(\"click\");\n    },\n\n\n    setToggleIndex(index){\n        this.toggleIndex = index;\n        this.toggles[this.toggleIndex].check();\n    }\n})","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n        console.log(\"touch\",evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n        loadingText: cc.Label\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n        let randomSpeak = [\"Furwee can text fluently in four languages-English, Spanish, German and Italian!\",\n                        \"Furwee can understand Tagalog, the native language spoken in the Philippines.\"]\n        let randIndx = Math.floor(Math.random() * randomSpeak.length);\n        this.loadingText.string = randomSpeak[randIndx];\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = Math.max(0.05,completedCount / totalCount);\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","const SoundManager= require(\"SoundManager\");\n\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","let UIManager = require(\"UIManager\");\n\nlet Pet = cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        headAnim: cc.Animation,\n        bodyAnim: cc.Animation,\n        mouthNode: cc.Node,\n        idleMouthTimeout: -1,\n        state: null,\n        emotion: \"neutral\",\n        tummy: cc.Node,\n        heartPrefab: cc.Prefab,\n\n        _heart: cc.Node,\n\n        laughSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        isAnimLaughLoaded: false,\n        isAnimIdleWaitLoaded: false\n    },\n\n\n    onLoad() {\n        this.tummy.on(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.on(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n\n        this._randTalkAnims = [\"talking_l_a\"]\n        this._initPetResourceLoading();\n    },\n\n    onDestroy() {\n        this.tummy.off(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.off(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    play() {\n        this._playFurweeAnim(\"happyidle\");\n        this.state = \"intro_idle\";\n    },\n\n    playWelcome() {\n        this._playFurweeAnim(\"intro\");\n        this._setAnimFinishHandler();\n        this.state = \"intro_jump\";\n    },\n\n    playIntro() {\n        /*\n        this._playFurweeAnim(\"happywave\");\n        this._setAnimFinishHandler();\n        this.state = \"wave_1\";\n        */\n    },\n\n    updateMouth(id) {\n        this._stopIdleMouth();\n        if (this.state.startsWith(\"intro\") || this.state.startsWith(\"wave\")) {\n            // skip\n            if(this.state == \"wave_waiting\"){\n                this._playFurweeAnim(\"happywave\");\n                this._setAnimFinishHandler();\n                this.state = \"wave_1\";\n            }\n        }\n        else if (this.state != \"speak\") {\n            this.state = \"speak\";\n            switch (this.emotion) {\n                case \"positive\":\n                    this._playFurweeAnim(\"tallking_2_hands\");\n                    break;\n                case \"negative\":\n                    this._playFurweeAnim(\"sadidle\");\n                    break;\n                default://\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"\n                    //let randArray = [\"talking_l_a\"];\n                    let act = Math.floor(Math.random() * this._randTalkAnims.length);\n                    this._playFurweeAnim( this._randTalkAnims[act]);\n            }\n        }\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this._clearMouth();\n            node.active = true;\n        }\n    },\n\n    startIdle() {\n        this.state = \"idle\";\n        this._stopIdleMouth();\n\n        this._clearMouth();\n        //\n        this._setIdleMouth();\n\n\n        switch (this.emotion) {\n            case \"negative\":\n                this._playFurweeAnim(\"sadidle\");\n                break;\n            case \"positive\":\n                this._playFurweeAnim(\"happyidle\");\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n        }\n    },\n\n    resetIdle(){\n        if(!this.isAnimIdleWaitLoaded){\n            return;\n        }\n        if(this.idleTimer){\n            clearTimeout(this.idleTimer);\n        }\n        this.idleTimer = setTimeout(() => {\n            this._playFurweeAnim(\"listenwaitidle\");\n        }, 30000);\n    },\n\n    _setIdleMouth() {\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n        this.idleMouthTimeout = setTimeout(() => {\n            this._setIdleMouth();\n        }, 2000);\n    },\n\n    _cancelAnimHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n    },\n\n    _setAnimLastFrameHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"lastframe\", this._animComplete.bind(this));\n    },\n\n    _setAnimFinishHandler() {\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\n    },\n\n    _animComplete() {\n        console.log('_animComplete');\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        switch (this.state) {\n            case \"intro_jump\":\n                this._removeClip(\"intro\");\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"wave_waiting\";\n                break;\n            case \"wave_1\":\n                this._removeClip(\"happywave\");\n                this._playFurweeAnim(\"talking_l_a\");\n                this.state = \"speak\";\n                this.resetIdle();\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"idle\";\n                break;\n        }\n       \n    },\n\n    _clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n\n        let node3 = this.mouthNode.getChildByName(\"open_mouth\");\n        node3.active = false;\n    },\n\n\n\n    _stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    _removeClip(anim){\n        if(this.headAnim.currentClip.name == anim + \"_head\"){\n            console.log('_removeClip', this.headAnim.currentClip.name);\n            this.headAnim.removeClip(this.headAnim.currentClip);\n        }\n\n        if(this.bodyAnim.currentClip.name == anim + \"_body\"){\n            console.log('_removeClip', this.bodyAnim.currentClip.name);\n            this.bodyAnim.removeClip(this.bodyAnim.currentClip);\n        }\n    },\n\n    _playFurweeAnim(anim) {\n        console.log(\"playAnim\", anim);\n        this._cancelAnimHandler();\n\n        this.headAnim.play(anim + \"_head\");\n        this.bodyAnim.play(anim + \"_body\");\n\n        if (anim == \"laugh\") {\n            if (!this._heart) {\n                this._heart = cc.instantiate(this.heartPrefab);\n                this._heart.y = this.tummy.y;\n                this.node.addChild(this._heart);\n\n                \n            }\n            else {\n                this._heart.getComponent(cc.Animation).play();\n            }\n\n            if(! UIManager.instance.game.music.shouldbeMuted()){\n                cc.audioEngine.play(this.laughSound);\n\n            }\n        }\n    },\n\n    setEmotion(state) {\n        console.log(\"setemotion\", state);\n        this.emotion = state;\n    },\n\n    isReadyToTalk() {\n        return !this.state.startsWith(\"intro\");\n    },\n\n    _onTummyHandler() {\n        if(!this.isAnimLaughLoaded){\n            return;\n        }\n        if (this.state == \"idle\") {\n            this.state = \"laugh\";\n            this._playFurweeAnim(\"laugh\");\n            this._setAnimFinishHandler();\n        }\n    },\n\n\n    ///pet resources loading\n    _initPetResourceLoading(){\n        this._initLaugh();\n    },\n\n    _initLaugh(){\n        cc.loader.loadRes('pet_resources_laugh', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n\n            this.isAnimLaughLoaded = true;\n            this._initIdleWait();\n        }.bind(this));\n    },\n\n    _initIdleWait(){\n        cc.loader.loadRes('pet_resources_idlewait', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n\n            this.isAnimIdleWaitLoaded = true;\n            this.resetIdle();\n            this._initTalk();\n        }.bind(this));\n    },\n\n    _initTalk(){\n        cc.loader.loadRes('pet_resources_talk', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n            this._randTalkAnims = this._randTalkAnims.concat([\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"]);\n            console.log(this._randTalkAnims);\n        }.bind(this));\n    },\n\n    _addAnimClips(node){\n        let bAnim = node.getChildByName(\"body\").getComponent(cc.Animation);\n        let hAnim = node.getChildByName(\"head\").getComponent(cc.Animation);\n        \n        for(let i = 0; i < bAnim._clips.length; i++){\n            this.bodyAnim.addClip( bAnim._clips[i],  bAnim._clips[i].name);\n        }\n\n        for(let i = 0; i < hAnim._clips.length; i++){\n            this.headAnim.addClip( hAnim._clips[i],  hAnim._clips[i].name);\n        }\n    }\n})","const { Furwee } = require(\"Furwee\"); \nlet Server = {};\n\nServer.URL = \"http://40.121.137.102\";\n\nServer.init = function(){\n\n    if (!Furwee.DEBUG) {\n        Server.URL = \"/api\";\n        Furwee.LOGOUT_URL = \"/logout\";\n        Furwee.HOME_URL = \"/\";\n    }\n    else {\n        Server.URL = \"https://furwee.ai/api\";\n        Furwee.LOGOUT_URL = \"https://furwee.ai/logout\";\n        Furwee.HOME_URL = \"https://furwee.ai/home\";\n    }\n}\nServer.init();\n\nServer.getInitialMessage = function (callback){\n        let xhr = new XMLHttpRequest();\n        let requestURL = Server.URL + \"/initial-message/?lang=\" + Furwee.LANG ;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    callback(xhr.responseText);\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n}\n\nServer.getMessage = function (sendText, historyObjects, callback){\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = Server.URL + \"/messages/\";\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    callback(xhr.responseText);\n\n                    console.log(xhr.responseText);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n}\n\nServer.getEmotion = function (sendText, callbak){\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = Server.URL + \"/emotion/\";\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    callbak(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n}\n\n\nexport{Server};","let SoundManager = {};\n\nSoundManager.caches = {};\nSoundManager.init = function(){\n    cc.loader.loadRes('sound/pop', cc.AudioClip, function (err, audio) {\n        if (err) {\n            cc.error(err.message || err);\n            return;\n        }\n        SoundManager.caches[\"click\"] = audio;\n    });\n}\n\nSoundManager.play = function(key){\n    if( SoundManager.caches[key] != undefined){\n        cc.audioEngine.play( SoundManager.caches[key] );\n    }\n}\nexport {SoundManager}","let UIManager = require(\"UIManager\");\nconst { Server } = require(\"Server\");\nconst { Furwee } = require(\"Furwee\"); \n\nlet SpeechTool = {};\n\nSpeechTool.ui = null;\nSpeechTool.useWebRecognition = false;\nSpeechTool.recognition = null;\nSpeechTool.textRecognition = \"\";\n\n //api\n SpeechTool.stream = null;\n SpeechTool.recorder = null;\n \n SpeechTool.gumStream = null;\n //stream from getUserMedia() \n SpeechTool.rec = null;\n //Recorder.js object \n SpeechTool.input = null;\n SpeechTool.audioContext = null;\n\n SpeechTool.checkWebRecognition = false;\n SpeechTool.isWorkingChecked = false;\n\n SpeechTool.initRecognition = function(uibase){\n    UIManager.uiBase = uibase;\n    SpeechTool.textRecognition = \"\";\n\n    if(!SpeechTool.checkWebRecognition){\n        SpeechTool.checkWebRecognition = true;\n\n        window.SpeechRecognition = window.SpeechRecognition\n        || window.webkitSpeechRecognition;\n    \n        SpeechTool.useWebRecognition = SpeechRecognition != undefined;\n        UIManager.instance.debugNode.string += \"useWebRecognition:\" +  SpeechTool.useWebRecognition + \"\\n\";\n    }\n},\n\nSpeechTool.isWorking = function(){\n    if(!SpeechTool.recognition){\n        return true;\n    }\n\n    if(!SpeechTool.isWorkingChecked){\n        SpeechTool.isWorkingChecked = true;\n\n        UIManager.instance.debugNode.string += \"isWorking \"+ SpeechTool.recognition.audiostart +\"\\n\" +SpeechTool.recognition.audioend+ SpeechTool.recognition.end +\"\\n\";\n\n        if((!SpeechTool.recognition.audiostart)\n            &&(!SpeechTool.recognition.audioend)\n            &&(!SpeechTool.recognition.end)){\n\n                SpeechTool.useWebRecognition = false;\n                UIManager.instance.debugNode.string += \"useWebRecognition false \"+\"\\n\";\n\n                SpeechTool.recognition.onerror = null;\n                SpeechTool.recognition.onresult = null;\n                SpeechTool.recognition.onaudiostart = null;\n                SpeechTool.recognition.onaaudioend = null;\n                SpeechTool.recognition.onend = null;\n\n\n                return false;\n            }\n    }\n\n    return true;\n},\n\n\nSpeechTool.startWebRecognition = function(){\n    let finalString = \"\";\n    // check if work properly\n    if(SpeechTool.recognition){\n        SpeechTool.recognition.onerror = null;\n        SpeechTool.recognition.onresult = null;\n        SpeechTool.recognition.onaudiostart = null;\n        SpeechTool.recognition.onaaudioend = null;\n        SpeechTool.recognition.onend = null;\n    }\n\n    //\n    SpeechTool.recognition = new SpeechRecognition();\n    SpeechTool.recognition.interimResults = true;\n    SpeechTool.recognition.continuous = true;\n    SpeechTool.recognition.lang = Furwee.LANG ;\n\n    UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n   \n    SpeechTool.recognition.onresult = function (event) {\n\n        console.log(event);\n        UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n        let interString = \"\";\n        let autoEnd = false;\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n            // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n            if (event.results[i].isFinal) {\n                finalString += event.results[i][0].transcript;\n                SpeechTool.textRecognition = finalString;\n                autoEnd = true;\n            \n            }\n            else{\n                interString += event.results[i][0].transcript;\n                SpeechTool.textRecognition = finalString + interString;\n            \n            }\n        }\n        //////////\n        UIManager.uiBase.text.string = SpeechTool.textRecognition;\n\n        if (UIManager.uiBase.text.enabled) {\n            UIManager.uiBase.updateUIAfterRecord();\n        }\n        UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n\n        if(autoEnd){\n            UIManager.uiBase.stopRecord(false);\n            if(UIManager.uiBase.text.string.length != 0){\n                UIManager.instance.game.sendHandler()\n            }\n        }\n    };\n\n    SpeechTool.recognition.onerror = function(event) {\n\n        UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n        if(event.error == \"network\"){\n            SpeechTool.useWebRecognition = false;\n        }\n    }\n\n    // testing\n    SpeechTool.recognition.onaudiostart = function(evt){\n        UIManager.instance.debugNode.string += \"onaudiostart \" + evt + \"\\n\";\n        evt.target.audiostart = true;\n    }\n\n    SpeechTool.recognition.onaudioend = function(evt){\n        UIManager.instance.debugNode.string += \"onaudioend \" + evt + \"\\n\";\n        evt.target.audioend = true;\n    }\n\n    SpeechTool.recognition.onend = function(evt){\n        UIManager.instance.debugNode.string += \"onend \" + evt + \"\\n\";\n        evt.target.end = true;\n    }\n\n    /*\n\n    SpeechTool.recognition.onnomatch = function(evt){\n        UIManager.instance.debugNode.string += \"onnomatch \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onsoundstart = function(evt){\n        UIManager.instance.debugNode.string += \"soundstart \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onsoundend = function(evt){\n        UIManager.instance.debugNode.string += \"soundend \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onspeechstart = function(evt){\n        UIManager.instance.debugNode.string += \"speechstart \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onspeechend= function(evt){\n        UIManager.instance.debugNode.string += \"speechend \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onstart= function(evt){\n        UIManager.instance.debugNode.string += \"start \" + evt + \"\\n\";\n        \n    }\n    */\n    //test end\n\n\n    SpeechTool.recognition.start();\n    UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n},\n\nSpeechTool.stopWebRecognition = function(){\n    SpeechTool.recognition.stop();\n},\n\n\n//start api recognition\nSpeechTool.startAPIRecognition= function(){\n    \n    var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n    let constraints  =  {\n        audio: true,\n        video: false\n    } ;\n\n    navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n        SpeechTool.audioContext = new AudioContext();\n\n        console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n        /* assign to gumStream for later use */\n        SpeechTool.gumStream = stream;\n        /* use the stream */\n        SpeechTool.input = SpeechTool.audioContext.createMediaStreamSource(stream);\n        /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n        SpeechTool.rec = new Recorder(SpeechTool.input, {\n            numChannels: 1\n        }) \n        //start the recording process \n        SpeechTool.rec.record()\n        console.log(\"Recording started\");\n    }).catch(function(err) {\n        \n    });\n},\n\nSpeechTool.stopAPIRecognition = function(){\n\n    SpeechTool.rec.stop(); //stop microphone access \n    SpeechTool.gumStream.getAudioTracks()[0].stop();\n    //create the wav blob and pass it on to createDownloadLink \n\n    SpeechTool.rec.exportWAV(function(blob) {\n\n        let xhr = new XMLHttpRequest();\n        let requestURL = Server.URL + \"/audio-to-text/\";\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    if(json.text != null){\n                        /////////////\n                        UIManager.uiBase.text.string = json.text;\n                        UIManager.uiBase.updateUIAfterRecord();\n                    }\n                }\n            }\n        }\n        //let params = JSON.stringify({ \"audio\": blob});\n        xhr.open('POST', requestURL, true);\n\n        //URL = window.URL || window.webkitURL;\n        \n        var fd=new FormData();\n        fd.append(\"audio\",blob);\n        fd.append(\"lang\",Furwee.LANG);\n\n        xhr.send(fd);\n    });\n\n\n}\n\n\nexport{SpeechTool};\n\n\n","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\nconst {SpeechTool} = require(\"SpeechTool\");\nconst {SoundManager} = require(\"SoundManager\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n        languagePanel: cc.Node, \n        challengePanel: cc.Node\n\n    },\n    \n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n    },\n\n    //mobile\n    startRecord() {\n\n        SoundManager.play(\"click\");\n\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        SpeechTool.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(SpeechTool.useWebRecognition && SpeechTool.isWorking()){\n            SpeechTool.startWebRecognition();\n        }\n        else{\n            SpeechTool.startAPIRecognition();\n        }\n    },\n\n    stopRecord(playSound = true) {\n        if(playSound){\n            SoundManager.play(\"click\");\n        }\n       \n\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(SpeechTool.useWebRecognition){\n            SpeechTool.stopWebRecognition();\n        }\n        else{\n            SpeechTool.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    toggleLanguagePanel(){\n        this.languagePanel.active = !this.languagePanel.active;\n        if( this.languagePanel.active){\n            UIManager.instance.languagePanel = this.languagePanel;\n        }\n        SoundManager.play(\"click\");\n    },\n\n    hideLanguagePanel(){\n        this.languagePanel.active = false;\n        UIManager.instance.languagePanel = null;\n        SoundManager.play(\"click\");\n    },\n\n    toggleChallengePanel(){\n        this.challengePanel.active = !this.challengePanel.active;\n        if( this.challengePanel.active){\n            UIManager.instance.challengePanel = this.challengePanel;\n        }\n        SoundManager.play(\"click\");\n    },\n\n    hideChallengePanel(){\n        this.challengePanel.active = false;\n        UIManager.instance.challengePanel = null;\n        SoundManager.play(\"click\");\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\nconst {SoundManager} = require(\"SoundManager\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n\n        languagePanel:null\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 89;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.5556;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.vNOde.getComponent('UIBase').languagePanel){\n            this.vNOde.getComponent('UIBase').languagePanel.active = true;\n            this.vNOde.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.vNOde.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.challengePanel && this.challengePanel != this.vNOde.getComponent('UIBase').challengePanel){\n            this.vNOde.getComponent('UIBase').challengePanel.active = true;\n            this.challengePanel = this.vNOde.getComponent('UIBase').challengePanel;\n        }\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 24;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.hNode.getComponent('UIBase').languagePanel){\n            this.hNode.getComponent('UIBase').languagePanel.active = true;\n            this.hNode.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.hNode.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.challengePanel && this.challengePanel != this.hNode.getComponent('UIBase').challengePanel){\n            this.hNode.getComponent('UIBase').challengePanel.active = true;\n            this.challengePanel = this.hNode.getComponent('UIBase').challengePanel;\n        }\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n       // return;\n       if(!Furwee.DEBUG){\n            return;\n        }\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        window.location.href = Furwee.LOGOUT_URL; \n    },\n\n    home(){\n        window.location.href = Furwee.HOME_URL; \n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n    },\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}\n\ncc.EditBox.prototype._showLabels = function(){\n        this._isLabelVisible = true;\n        this._updateLabels();\n}","const { Furwee } = require(\"Furwee\"); \nlet UserData = {};\n\nUserData.init = function(){\n    if(cc.sys.localStorage.getItem('lang')){\n        Furwee.LANG = cc.sys.localStorage.getItem('lang');\n    }\n}\nUserData.init();\n\nUserData.setLang = function(lang){\n    Furwee.LANG = lang;\n    cc.sys.localStorage.setItem('lang', lang);\n}\n\nexport{UserData};","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}