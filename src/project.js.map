{"version":3,"sources":["assets/Scripts/tool/AutoSwitchWidget.js","assets/Scripts/game/Ballon.js","assets/Scripts/game/BodyAnim.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/game/CamMove.js","assets/Scripts/game/Eye.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/game/Game.js","assets/Scripts/tool/Helper.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/tool/SwitchWidget.js"],"names":["Helper","require","cc","Class","extends","Component","properties","minWidth","minHeight","isPcView","mobileNode","Node","pcNode","onLoad","addCallback","this","onResize","bind","canvas","node","parent","getComponent","Canvas","frameSize","view","getFrameSize","height","width","active","updateAlignment","whiteBG","pinkBG","text","Label","start","update","updateTextHeight","bg","Math","max","init","isFurwee","color","Color","string","step","x","opacity","removeChild","anim","Animation","playIntro","play","introComplete","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","isM","isN","statics","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","i","length","z","_i","_i2","y","_i3","_i4","_i5","_i6","rotationX","_i7","_i8","fov","_i9","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","m","n","u","console","log","position","sceneNodes","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","info","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","v3","stopAllActions","runAction","stage","eye","isLeft","Boolean","randX","randY","touchMoveHandler","mouseMoveHandler","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","convertToNodeSpaceAR","len","tan","posX","posY","mouseLen2","pow","factor","min","len2","setPosition","scale","MusicToggle","BodyAnim","editBox","EditBox","audioID","mouthNode","mouthIsReset","historyObjects","sendButton","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","music","blockerNode","idleMouthTimeout","bodyAnim","headAnim","initialMsgJSON","introCameras","furweeIntialized","URL","isLocalHost","window","location","href","indexOf","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","audioOffset","updateMouth","setFinishCallback","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","onTTSCompleted","reply","index","message","soundloadedHandler","arguments","undefined","lip_sync_animation","err","res","stopIdleMouth","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","json","params","stringify","history","xhr2","requestURL2","params2","getChildByName","clearMouth","dt","time","getCurrentTime","startIdleMouth","textContent","children","balloon","instantiate","addChild","blockClickHandler","initialize","introCameraAnim","setIdleMouth","clearTimeout","idle","floor","random","errorClickHandler","captureError","callBacks","initialized","setResizeCallback","handleResize","func","removeCallback","splice","progressBar","ProgressBar","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","SwitchWidget","onNode","offNode","hintNode","hintText","audioId","bgVolumn","bgSlider","Slider","bgProgress","switchwidget","isMusicOn","sys","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","mobileView","pcView","toggleOver","toggleOut","pauseMusic","resumeMusic","playMusic","value","setMusicVolume","Widget","bottom","emit"],"mappings":"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","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        isPcView: true,\n\n        mobileNode: cc.Node,\n        pcNode: cc.Node\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = 640 / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.isPcView = false;\n            this.mobileNode.active = true;\n            this.pcNode.active = false;\n\n            this.mobileNode.getComponent(\"cc.Widget\").updateAlignment();\n        }\n        else{\n            this.isPcView = true;\n            this.mobileNode.active = false;\n            this.pcNode.active = true;\n\n            this.pcNode.getComponent(\"cc.Widget\").updateAlignment();\n        }\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    // update (dt) {},\n\n    update() {\n        if (this.updateTextHeight) {\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n            this.updateTextHeight = false;\n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = new cc.Color(\"#63697B\");\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = true;\n\n    },\n\n    step() {\n        if (this.isFurwee) {\n            this.node.x -= 20;\n        }\n        else {\n            this.node.x += 20;\n        }\n\n        this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n            this.node.parent.removeChild(this.node);\n        }\n    },\n\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nlet BodyAnim = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anim: cc.Animation\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    playIntro(){\n        this.anim.play(\"intro_body\");\n    },\n\n    introComplete(){\n        this.anim.play(\"body\");\n    },\n\n    play(){\n        this.anim.play(\"body\");\n    }\n    // update (dt) {},\n});\n","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false,\n\n        isM:false,\n        isN:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n         if(this.isM){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x +=1;\n             }\n        }\n\n         if(this.isN){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n            case cc.macro.KEY.m:\n                this.isM = true;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n            case cc.macro.KEY.m:\n                this.isM = false;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = false;\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cameras: [cc.Camera],\n        sceneNodes: [cc.Node],\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].eulerAngles.x, y: this.sceneNodes[i].eulerAngles.y };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onMouseMove: function (evt) {\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        let targetY = (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY;\n        let targetX = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX ;\n\n        //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n        //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n        console.log(\"currentX\", currentX, \"currentY\", currentY);\n\n        let timeY = Math.abs(targetY - currentY) / this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX) / this.rotRangeX;\n        //console.log('time', timeX, timeY);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY + this.infos[i].y, 0));\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n                console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(rotate3DTo);\n\n        }\n\n    },\n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stage: cc.Node,\n        eye: cc.Node,\n        isLeft: cc.Boolean\n    },\n\n    onLoad() {\n        this.randX = 8;\n        this.randY = 1.5;\n        // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        // this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt) {\n        //console.log(evt);\n    },\n\n    mouseMoveHandler(evt) {\n\n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let len = 0;\n        let tan = 0;\n        let ctan = 0;\n\n        let posX = 0;\n        let posY = 0;\n\n        if (pos.x != 0 && pos.y != 0) {\n\n            let mouseLen2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            if (mouseLen2 > Math.pow(150, 2)) {\n                posX = 0;\n                posY = 0;\n\n            }\n            else {\n                let factor = Math.min(Math.pow(mouseLen2, 0.5) / 40, 1);\n                //factor = Math.pow(factor, 2);\n                if (this.isLeft) {\n                    pos.x -= 40 * factor;\n                }\n                else {\n                    pos.x += 40 * factor;\n                }\n                if (pos.x < 0) {\n                    pos.x = Math.max(pos.x, -8);\n                }\n                else {\n                    pos.x = Math.min(pos.x, 8);\n                }\n                if (pos.y < 0) {\n                    pos.y = Math.max(pos.y, -2.5);\n                }\n                else {\n                    pos.y = Math.min(pos.y, 2.5);\n                }\n                let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n                len = Math.pow(len2, 0.5);\n\n                tan = pos.y / len;\n                ctan = pos.x / len;\n\n                posX = len * ctan;\n                posY = len * tan;\n\n            }\n\n        }\n\n        this.eye.setPosition(posX, posY);\n        //console.log(\"set pos\", posX, posY);\n\n    }\n})","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = 640 / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let MusicToggle = require(\"MusicToggle\");\nlet BodyAnim = require(\"BodyAnim\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox: cc.EditBox,\n        audioID: -1,\n        mouthNode: cc.Node,\n        mouthIsReset: true,\n        historyObjects: [],\n        sendButton: cc.Node,\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        music: MusicToggle,\n        blockerNode: cc.Node,\n        idleMouthTimeout: -1,\n        bodyAnim: BodyAnim,\n        headAnim: cc.Animation,\n\n        initialMsgJSON: null,\n\n        introCameras: [cc.Camera],\n        furweeIntialized:false,\n\n        URL: \"http://40.121.137.102\"\n\n    },\n\n    start() {\n        this.blockerNode.active = true;\n    },\n\n    onLoad() {\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n\n        return;\n\n*/\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.bodyAnim.playIntro();\n        this.headAnim.play();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.mouthIsReset = false;\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.headAnim.play();\n        this.bodyAnim.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\";\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.blockerNode.active) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if(this.furweeIntialized){\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.bodyAnim.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.stopIdleMouth();\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n */\n\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        this.editBox.focus();\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\";\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\";\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this.clearMouth();\n            node.active = true;\n        }\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else {\n            if (!this.mouthIsReset) {\n                this.mouthIsReset = true;\n                this.clearMouth();\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n                this.startIdleMouth();\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        this.balloonNode.addChild(balloon);\n\n\n    },\n\n    blockClickHandler() {\n        this.blockerNode.active = false;\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        //this.introCameraAnim();\n    },\n\n    introCameraAnim() {\n        for (let i = 0; i < this.introCameras.length; i++) {\n            this.introCameras[i].getComponent(cc.Animation).play();\n        }\n\n        setTimeout(this.tryToStartFurweeIntro.bind(this), 2000);\n    },\n\n    clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    startIdleMouth() {\n        this.setIdleMouth();\n    },\n\n    setIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n\n        this.clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        setTimeout(this.setIdleMouth.bind(this), 3000 * Math.random() + 3000);\n    },\n\n    stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    errorClickHandler(){\n        if(window.captureError){\n            window.captureError();\n        }\n\n    },\n\n});\n","let Helper = {};\n\nHelper.callBacks = [];\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n}\n\nHelper.handleResize = function(){\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i]();\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\nexport {Helper};","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar:cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad () {\n        cc.director.preloadScene(\"game\", this.onProgress.bind(this), this.onComplete.bind(this));\n    },\n\n    onProgress(completedCount, totalCount){\n        this.progressBar.progress = completedCount/totalCount;\n    },\n\n    onComplete(error){\n        if(!error){\n            cc.director.loadScene(\"game\");\n        }\n\n    }\n\n    \n});\n","let SwitchWidget = require(\"SwitchWidget\");\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: null,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider, \n        bgProgress: cc.ProgressBar,\n        switchwidget: SwitchWidget\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n            /*setTimeout(function(){ \n                cc.sys.__audioSupport.context.resume();\n                cc.game.canvas.dispatchEvent(new Event(\"mousedown\"))\n            }, 3000);*/\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n\n        if(this.switchwidget && !this.switchwidget.isPcView ){\n            this.mobileView();\n        }\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId != null) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (!this.audioId) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n    },\n\n    sliderAdjust(value){\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n    },\n\n    mobileView(){\n        this.node.getComponent(cc.Widget).bottom = 120;\n        this.node.getComponent(cc.Widget).updateAlignment();\n    },\n\n    pcView(){\n        this.node.getComponent(cc.Widget).bottom = 46;\n        this.node.getComponent(cc.Widget).updateAlignment();\n    }\n});","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        isPcView: true\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = 640 / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.node.emit(\"mobileView\");\n            this.isPcView = false;\n        }\n        else{\n            this.node.emit(\"pcView\");\n            this.isPcView = true;\n        }\n    }\n});\n"],"file":"project.js"}