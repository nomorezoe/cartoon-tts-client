{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","MusicToggle","LayerCamerasMove","Pet","audioID","historyObjects","pet","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","URL","URL_SUFFIX","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","start","game","window","location","href","indexOf","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","console","log","socket","id","play","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","addBallon","reply","push","length","message","info","soundloadedHandler","arguments","undefined","audioInfo","lip_sync_animation","err","res","_startPlayTalking","_this","isReadyToTalk","audioEngine","shouldbeMuted","setVolume","audioOffset","updateMouth","setFinishCallback","startIdle","setTimeout","didReturnHandler","sendHandler","focus","sendText","trim","resetIdle","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","response","setEmotion","emotion","params2","viseme_id","update","dt","time","getCurrentTime","audio_offset_ms","textContent","updateSendButton","i","children","balloon","instantiate","addChild","blockClickHandler","initialize","playWelcome","errorClickHandler","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","EventType","MOUSE_ENTER","showTop","onDestroy","off","TOUCH_END","hideTop","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","splice","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","evt","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","state","tummy","heartPrefab","_heart","laughSound","_onTummyHandler","_playFurweeAnim","_setAnimFinishHandler","playIntro","_stopIdleMouth","startsWith","randArray","act","floor","random","getChildByName","_clearMouth","_setIdleMouth","idleTimer","_this2","idle","_cancelAnimHandler","_animComplete","_setAnimLastFrameHandler","_i","emit","microButton","recordButton","startRecord","enabled","initRecognition","useWebRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","ui","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","debugNode","finalString","interimResults","continuous","lang","onresult","event","interString","autoEnd","resultIndex","results","isFinal","transcript","onerror","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","logout","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nlet Pet = require(\"Pet\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n       \n        historyObjects: [],\n\n        pet:Pet,\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        initialMsgJSON: null,\n\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n        \n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n        if (window.location.href.indexOf(\"furwee\") != -1) {\n            this.URL = \"/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL =  \"/logout\";\n            Furwee.HOME_URL = \"/home\";\n        }\n        else {\n            this.URL = \"https://furwee.ai/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL =  \"https://furwee.ai/logout\";\n            Furwee.HOME_URL = \"https://furwee.ai/home\";\n        }\n   \n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee() {\n        this.pet.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n\n        this.furweeIntialized = true;\n        //this.pet.playWelcome();\n        this.setEnableTextInput(true);\n        //this.pet.playIntro();\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n            this.addBallon(this.initialMsgJSON.reply, true);\n            \n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this._startPlayTalking(res, soundloadedHandler);\n        }.bind(this));\n    },\n\n    _startPlayTalking(res, soundloadedHandler){\n\n        if(this.pet.isReadyToTalk()){\n            this.audioID = cc.audioEngine.play(res);\n            if(this.audioID && this.music.shouldbeMuted()){\n                cc.audioEngine.setVolume(this.audioID, 0);\n            }\n            this.audioOffset = 0;\n            this.updateMouth();\n    \n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n    \n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.pet.startIdle();\n            }.bind(this));\n        }\n        else{\n            //this.pet.playIntro();\n            setTimeout(() => {\n                this._startPlayTalking(res, soundloadedHandler);\n            }, 16);\n        }\n        \n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        this.pet.resetIdle();\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                    let response =  JSON.parse(xhr2.responseText);\n                    that.pet.setEmotion(response.emotion);\n                    \n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n        this.pet.updateMouth(id);\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n\n       // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        this.pet.playWelcome();\n    },\n   \n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n       \n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = Math.max(0.05,completedCount / totalCount);\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","let UIManager = require(\"UIManager\");\n\nlet Pet = cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        headAnim: cc.Animation,\n        bodyAnim: cc.Animation,\n        mouthNode: cc.Node,\n        idleMouthTimeout: -1,\n        state: null,\n        emotion: \"neutral\",\n        tummy: cc.Node,\n        heartPrefab: cc.Prefab,\n\n        _heart: cc.Node,\n\n        laughSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n    },\n\n\n    onLoad() {\n        this.tummy.on(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.on(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    onDestroy() {\n        this.tummy.off(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.off(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    play() {\n        this._playFurweeAnim(\"happyidle\");\n        this.state = \"intro_idle\";\n    },\n\n    playWelcome() {\n        this._playFurweeAnim(\"intro\");\n        this._setAnimFinishHandler();\n        this.state = \"intro_jump\";\n    },\n\n    playIntro() {\n        /*\n        this._playFurweeAnim(\"happywave\");\n        this._setAnimFinishHandler();\n        this.state = \"wave_1\";\n        */\n    },\n\n    updateMouth(id) {\n        this._stopIdleMouth();\n        if (this.state.startsWith(\"intro\") || this.state.startsWith(\"wave\")) {\n            // skip\n            if(this.state == \"wave_waiting\"){\n                this._playFurweeAnim(\"happywave\");\n                this._setAnimFinishHandler();\n                this.state = \"wave_1\";\n            }\n        }\n        else if (this.state != \"speak\") {\n            this.state = \"speak\";\n            switch (this.emotion) {\n                case \"positive\":\n                    this._playFurweeAnim(\"tallking_2_hands\");\n                    break;\n                case \"negative\":\n                    this._playFurweeAnim(\"sadidle\");\n                    break;\n                default:\n                    let randArray = [\"talking_l_a\",\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"];\n                    let act = Math.floor(Math.random() * randArray.length);\n                    this._playFurweeAnim(randArray[act]);\n            }\n        }\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this._clearMouth();\n            node.active = true;\n        }\n    },\n\n    startIdle() {\n        this.state = \"idle\";\n        this._stopIdleMouth();\n\n        this._clearMouth();\n        //\n        this._setIdleMouth();\n\n\n        switch (this.emotion) {\n            case \"negative\":\n                this._playFurweeAnim(\"sadidle\");\n                break;\n            case \"positive\":\n                this._playFurweeAnim(\"happyidle\");\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n        }\n    },\n\n    resetIdle(){\n        if(this.idleTimer){\n            clearTimeout(this.idleTimer);\n        }\n        this.idleTimer = setTimeout(() => {\n            this._playFurweeAnim(\"listenwaitidle\");\n        }, 30000);\n    },\n\n    _setIdleMouth() {\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n        this.idleMouthTimeout = setTimeout(() => {\n            this._setIdleMouth();\n        }, 2000);\n    },\n\n    _cancelAnimHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n    },\n\n    _setAnimLastFrameHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"lastframe\", this._animComplete.bind(this));\n    },\n\n    _setAnimFinishHandler() {\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\n    },\n\n    _animComplete() {\n        console.log('_animComplete');\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        switch (this.state) {\n            case \"intro_jump\":\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"wave_waiting\";\n                break;\n            case \"wave_1\":\n                this._playFurweeAnim(\"talking_r_a\");\n                this.state = \"speak\";\n                this.resetIdle();\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"idle\";\n                break;\n        }\n       \n    },\n\n    _clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n\n        let node3 = this.mouthNode.getChildByName(\"open_mouth\");\n        node3.active = false;\n    },\n\n\n\n    _stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n\n    _playFurweeAnim(anim) {\n        console.log(\"playAnim\", anim);\n        this._cancelAnimHandler();\n\n        this.headAnim.play(anim + \"_head\");\n        this.bodyAnim.play(anim + \"_body\");\n\n        if (anim == \"laugh\") {\n            if (!this._heart) {\n                this._heart = cc.instantiate(this.heartPrefab);\n                this._heart.y = this.tummy.y;\n                this.node.addChild(this._heart);\n\n                \n            }\n            else {\n                this._heart.getComponent(cc.Animation).play();\n            }\n\n            if(! UIManager.instance.game.music.shouldbeMuted()){\n                cc.audioEngine.play(this.laughSound);\n\n            }\n        }\n    },\n\n    setEmotion(state) {\n        console.log(\"setemotion\", state);\n        this.emotion = state;\n    },\n\n    isReadyToTalk() {\n        return !this.state.startsWith(\"intro\");\n    },\n\n    _onTummyHandler() {\n        if (this.state == \"idle\") {\n            this.state = \"laugh\";\n            this._playFurweeAnim(\"laugh\");\n            this._setAnimFinishHandler();\n        }\n    }\n})","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n    },\n    \n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        UIBase.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(UIBase.useWebRecognition){\n            UIBase.startWebRecognition();\n        }\n        else{\n            UIBase.startAPIRecognition();\n        }\n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(UIBase.useWebRecognition){\n           UIBase.stopWebRecognition();\n        }\n        else{\n            UIBase.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    statics: {\n        ui:null,\n        useWebRecognition:false,\n        recognition:null,\n        textRecognition:\"\",\n\n         //api\n         stream: null,\n         recorder: null,\n         \n         gumStream : null,\n         //stream from getUserMedia() \n         rec : null,\n         //Recorder.js object \n         input : null,\n         audioContext:null,\n\n        initRecognition(uibase){\n            UIManager.uiBase = uibase;\n\n            window.SpeechRecognition = window.SpeechRecognition\n            || window.webkitSpeechRecognition;\n\n            UIBase.useWebRecognition = SpeechRecognition != undefined;\n            UIManager.instance.debugNode.string += \"useWebRecognition:\" +  UIBase.useWebRecognition + \"\\n\";\n\n            UIBase.textRecognition = \"\";\n        },\n\n\n        startWebRecognition(){\n            let finalString = \"\";\n            UIBase.recognition = new SpeechRecognition();\n            UIBase.recognition.interimResults = true;\n            UIBase.recognition.continuous = true;\n            UIBase.recognition.lang = \"en-US\";\n        \n            UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n           \n            UIBase.recognition.onresult = function (event) {\n\n                console.log(event);\n                UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n                let interString = \"\";\n                let autoEnd = false;\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\n                    // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n                    if (event.results[i].isFinal) {\n                        finalString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString;\n                        autoEnd = true;\n                    \n                    }\n                    else{\n                        interString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString + interString;\n                    \n                    }\n                }\n                //////////\n                UIManager.uiBase.text.string = UIBase.textRecognition;\n\n                if (UIManager.uiBase.text.enabled) {\n                    UIManager.uiBase.updateUIAfterRecord();\n                }\n                UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n\n                if(autoEnd){\n                    UIManager.uiBase.stopRecord();\n                    if(UIManager.uiBase.text.string.length != 0){\n                        UIManager.instance.game.sendHandler()\n                    }\n                }\n            };\n\n            UIBase.recognition.onerror = function(event) {\n\n                UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n                if(event.error == \"network\"){\n                     UIBase.useWebRecognition = false;\n                }\n            }\n\n            UIBase.recognition.start();\n            UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n        },\n\n        stopWebRecognition(){\n            UIBase.recognition.stop();\n        },\n\n        \n        //start api recognition\n        startAPIRecognition(){\n            \n            var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n            let constraints  =  {\n                audio: true,\n                video: false\n            } ;\n\n            navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n                UIBase.audioContext = new AudioContext();\n\n                console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n                /* assign to gumStream for later use */\n                UIBase.gumStream = stream;\n                /* use the stream */\n                UIBase.input = UIBase.audioContext.createMediaStreamSource(stream);\n                /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n                UIBase.rec = new Recorder(UIBase.input, {\n                    numChannels: 1\n                }) \n                //start the recording process \n                UIBase.rec.record()\n                console.log(\"Recording started\");\n            }).catch(function(err) {\n                \n            });\n        },\n\n        stopAPIRecognition(){\n\n            UIBase.rec.stop(); //stop microphone access \n            UIBase.gumStream.getAudioTracks()[0].stop();\n            //create the wav blob and pass it on to createDownloadLink \n\n            UIBase.rec.exportWAV(function(blob) {\n\n                let xhr = new XMLHttpRequest();\n                let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200) {\n                            let json = JSON.parse(xhr.responseText);\n                            if(json.text != null){\n                                /////////////\n                                UIManager.uiBase.text.string = json.text;\n                                UIManager.uiBase.updateUIAfterRecord();\n                            }\n                        }\n                    }\n                }\n                //let params = JSON.stringify({ \"audio\": blob});\n                xhr.open('POST', requestURL, true);\n\n                //URL = window.URL || window.webkitURL;\n                \n                var fd=new FormData();\n                fd.append(\"audio\",blob);\n\n                xhr.send(fd);\n            });\n\n        \n        }\n\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n        return;\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        window.location.href = Furwee.LOGOUT_URL; \n    },\n\n    home(){\n        window.location.href = Furwee.HOME_URL; \n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n\n        \n    }\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}