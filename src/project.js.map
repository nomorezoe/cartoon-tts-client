{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/game/BodyAnim.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/game/CamMove.js","assets/Scripts/game/Eye.js","assets/Scripts/game/Game.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js"],"names":["cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","start","update","this","updateTextHeight","node","height","bg","Math","max","init","isFurwee","color","Color","active","string","step","x","opacity","parent","removeChild","anim","Animation","playIntro","play","introComplete","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","isM","isN","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","i","length","z","_i","_i2","y","_i3","_i4","_i5","_i6","rotationX","_i7","_i8","fov","_i9","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","m","n","u","console","log","position","sceneNodes","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","view","getDesignResolutionSize","getCanvasSize","width","info","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","v3","stopAllActions","runAction","stage","eye","isLeft","Boolean","randX","randY","touchMoveHandler","mouseMoveHandler","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","convertToNodeSpaceAR","len","tan","posX","posY","mouseLen2","pow","factor","min","len2","setPosition","MusicToggle","require","BodyAnim","editBox","EditBox","audioID","mouthNode","mouthIsReset","historyObjects","sendButton","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","music","blockerNode","idleMouthTimeout","bodyAnim","headAnim","initialMsgJSON","introCameras","furweeIntialized","URL","isLocalHost","window","location","href","indexOf","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","audioOffset","updateMouth","setFinishCallback","bind","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","onTTSCompleted","reply","index","message","soundloadedHandler","arguments","undefined","lip_sync_animation","err","res","stopIdleMouth","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","json","params","stringify","history","xhr2","requestURL2","params2","getChildByName","clearMouth","dt","time","getCurrentTime","startIdleMouth","textContent","children","getComponent","balloon","instantiate","addChild","blockClickHandler","initialize","introCameraAnim","setIdleMouth","clearTimeout","idle","floor","random","progressBar","ProgressBar","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","isMusicOn","sys","localStorage","getItem","toggleOn","toggleOff","toggleOver","toggleOut","pauseMusic","resumeMusic","playMusic"],"mappings":"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","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    // update (dt) {},\n\n    update() {\n        if (this.updateTextHeight) {\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n            this.updateTextHeight = false;\n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = new cc.Color(\"#63697B\");\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = true;\n\n    },\n\n    step() {\n        if (this.isFurwee) {\n            this.node.x -= 20;\n        }\n        else {\n            this.node.x += 20;\n        }\n\n        this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n            this.node.parent.removeChild(this.node);\n        }\n    },\n\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nlet BodyAnim = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anim: cc.Animation\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    playIntro(){\n        this.anim.play(\"intro_body\");\n    },\n\n    introComplete(){\n        this.anim.play(\"body\");\n    },\n\n    play(){\n        this.anim.play(\"body\");\n    }\n    // update (dt) {},\n});\n","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false,\n\n        isM:false,\n        isN:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n         if(this.isM){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x +=1;\n             }\n        }\n\n         if(this.isN){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n            case cc.macro.KEY.m:\n                this.isM = true;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n            case cc.macro.KEY.m:\n                this.isM = false;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = false;\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cameras: [cc.Camera],\n        sceneNodes: [cc.Node],\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].eulerAngles.x, y: this.sceneNodes[i].eulerAngles.y };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onMouseMove: function (evt) {\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        let targetY = (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY;\n        let targetX = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX ;\n\n        //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n        //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n        console.log(\"currentX\", currentX, \"currentY\", currentY);\n\n        let timeY = Math.abs(targetY - currentY) / this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX) / this.rotRangeX;\n        //console.log('time', timeX, timeY);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY + this.infos[i].y, 0));\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n                console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(rotate3DTo);\n\n        }\n\n    },\n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stage: cc.Node,\n        eye: cc.Node,\n        isLeft: cc.Boolean\n    },\n\n    onLoad() {\n        this.randX = 8;\n        this.randY = 1.5;\n        // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        // this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt) {\n        //console.log(evt);\n    },\n\n    mouseMoveHandler(evt) {\n\n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let len = 0;\n        let tan = 0;\n        let ctan = 0;\n\n        let posX = 0;\n        let posY = 0;\n\n        if (pos.x != 0 && pos.y != 0) {\n\n            let mouseLen2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            if (mouseLen2 > Math.pow(150, 2)) {\n                posX = 0;\n                posY = 0;\n\n            }\n            else {\n                let factor = Math.min(Math.pow(mouseLen2, 0.5) / 40, 1);\n                //factor = Math.pow(factor, 2);\n                if (this.isLeft) {\n                    pos.x -= 40 * factor;\n                }\n                else {\n                    pos.x += 40 * factor;\n                }\n                if (pos.x < 0) {\n                    pos.x = Math.max(pos.x, -8);\n                }\n                else {\n                    pos.x = Math.min(pos.x, 8);\n                }\n                if (pos.y < 0) {\n                    pos.y = Math.max(pos.y, -2.5);\n                }\n                else {\n                    pos.y = Math.min(pos.y, 2.5);\n                }\n                let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n                len = Math.pow(len2, 0.5);\n\n                tan = pos.y / len;\n                ctan = pos.x / len;\n\n                posX = len * ctan;\n                posY = len * tan;\n\n            }\n\n        }\n\n        this.eye.setPosition(posX, posY);\n        //console.log(\"set pos\", posX, posY);\n\n    }\n})","let MusicToggle = require(\"MusicToggle\");\nlet BodyAnim = require(\"BodyAnim\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox: cc.EditBox,\n        audioID: -1,\n        mouthNode: cc.Node,\n        mouthIsReset: true,\n        historyObjects: [],\n        sendButton: cc.Node,\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        music: MusicToggle,\n        blockerNode: cc.Node,\n        idleMouthTimeout: -1,\n        bodyAnim: BodyAnim,\n        headAnim: cc.Animation,\n\n        initialMsgJSON: null,\n\n        introCameras: [cc.Camera],\n        furweeIntialized:false,\n\n        URL: \"http://40.121.137.102\"\n\n    },\n\n    start() {\n        this.blockerNode.active = true;\n    },\n\n    onLoad() {\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n\n        return;\n\n*/\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.bodyAnim.playIntro();\n        this.headAnim.play();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.mouthIsReset = false;\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.headAnim.play();\n        this.bodyAnim.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\";\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.blockerNode.active) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if(this.furweeIntialized){\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.bodyAnim.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.stopIdleMouth();\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n */\n\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        this.editBox.focus();\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\";\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\";\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this.clearMouth();\n            node.active = true;\n        }\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else {\n            if (!this.mouthIsReset) {\n                this.mouthIsReset = true;\n                this.clearMouth();\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n                this.startIdleMouth();\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        this.balloonNode.addChild(balloon);\n\n\n    },\n\n    blockClickHandler() {\n        this.blockerNode.active = false;\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        //this.introCameraAnim();\n    },\n\n    introCameraAnim() {\n        for (let i = 0; i < this.introCameras.length; i++) {\n            this.introCameras[i].getComponent(cc.Animation).play();\n        }\n\n        setTimeout(this.tryToStartFurweeIntro.bind(this), 2000);\n    },\n\n    clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    startIdleMouth() {\n        this.setIdleMouth();\n    },\n\n    setIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n\n        this.clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        setTimeout(this.setIdleMouth.bind(this), 3000 * Math.random() + 3000);\n    },\n\n    stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar:cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad () {\n        cc.director.preloadScene(\"game\", this.onProgress.bind(this), this.onComplete.bind(this));\n    },\n\n    onProgress(completedCount, totalCount){\n        this.progressBar.progress = completedCount/totalCount;\n    },\n\n    onComplete(error){\n        if(!error){\n            cc.director.loadScene(\"game\");\n        }\n\n    }\n\n    \n});\n","let MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: null,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n            /*setTimeout(function(){ \n                cc.sys.__audioSupport.context.resume();\n                cc.game.canvas.dispatchEvent(new Event(\"mousedown\"))\n            }, 3000);*/\n        }\n        else {\n            this.toggleOff();\n        }\n\n\n\n        // this.node.on(\"mouseOver\")\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        if (this.audioId != null) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        if (!this.audioId) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n    }\n\n});"],"file":"project.js"}