{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LanguagePanel.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/Server.js","assets/Scripts/tool/SpeechTool.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","DEBUG","LANG","MusicToggle","LayerCamerasMove","Pet","Server","audioID","historyObjects","pet","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","nextTalks","start","game","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","console","log","socket","id","play","getInitialMessage","responseText","JSON","parse","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","isBlockActive","onTTSCompleted","reply","push","length","message","info","balloonText","balloon","addBallon","err","res","_startPlayTalking","lip_sync_animation","_startTalk","audioEngine","shouldbeMuted","setVolume","audioOffset","audioInfo","updateMouth","setFinishCallback","_completeTalk","startIdle","nextTalk","splice","balloonComp","audioRes","_this","isReadyToTalk","setTimeout","didReturnHandler","sendHandler","focus","sendText","trim","resetIdle","sys","isMobile","blur","getMessage","json","getEmotion","response","setEmotion","emotion","viseme_id","update","dt","time","getCurrentTime","audio_offset_ms","textContent","updateSendButton","i","children","instantiate","addChild","blockClickHandler","initialize","playWelcome","errorClickHandler","window","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","_impl","_elem","autocomplete","EventType","MOUSE_ENTER","showTop","onDestroy","off","TOUCH_END","hideTop","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","indexOf","toggles","Toggle","toggleIndex","onToggleLanuge","evt","param","parseInt","setToggleIndex","check","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","loadingText","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","randomSpeak","randIndx","floor","random","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","state","tummy","heartPrefab","_heart","laughSound","isAnimLaughLoaded","isAnimIdleWaitLoaded","_onTummyHandler","_randTalkAnims","_initPetResourceLoading","_playFurweeAnim","_setAnimFinishHandler","playIntro","_stopIdleMouth","startsWith","act","getChildByName","_clearMouth","_setIdleMouth","idleTimer","_this2","idle","_cancelAnimHandler","_animComplete","_setAnimLastFrameHandler","_removeClip","_i","currentClip","name","removeClip","_initLaugh","loadRes","prefab","_addAnimClips","data","_initIdleWait","_initTalk","concat","bAnim","hAnim","_clips","addClip","_i2","URL","URL_SUFFIX","callback","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","open","setRequestHeader","send","params","stringify","history","callbak","xhr2","requestURL2","params2","SpeechTool","ui","useWebRecognition","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","checkWebRecognition","isWorkingChecked","initRecognition","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","undefined","debugNode","isWorking","audiostart","audioend","end","onerror","onresult","onaudiostart","onaaudioend","onend","startWebRecognition","finalString","interimResults","continuous","lang","event","interString","autoEnd","resultIndex","results","isFinal","transcript","enabled","updateUIAfterRecord","stopRecord","target","onaudioend","stopWebRecognition","stop","startAPIRecognition","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","stopAPIRecognition","getAudioTracks","exportWAV","blob","fd","FormData","append","emit","microButton","recordButton","languagePanel","startRecord","toggleLanguagePanel","hideLanguagePanel","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","acctive","logout","location","href","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary","_showLabels","_isLabelVisible","_updateLabels"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nFurwee.DEBUG = true;\nFurwee.LANG = \"en\";\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst { Furwee } = require(\"Furwee\");\nlet Pet = require(\"Pet\");\nconst { Server } = require(\"../tool/Server\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n\n        historyObjects: [],\n\n        pet: Pet,\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        initialMsgJSON: null,\n\n        furweeIntialized: false,\n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node,\n\n\n        nextTalks: []\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee() {\n        this.pet.play();\n\n        Server.getInitialMessage(function(responseText){\n            this.initialMsgJSON = JSON.parse(responseText);\n            if (!this.tryToStartFurweeIntro()) {\n                //preload sound\n                let remoteUrl = this.initialMsgJSON.audio_file_link;\n                cc.loader.load({ url: remoteUrl, type: 'wav' });\n            }\n\n        }.bind(this))\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n\n        this.furweeIntialized = true;\n        //this.pet.playWelcome();\n        this.setEnableTextInput(true);\n        //this.pet.playIntro();\n        this.onTTSCompleted(this.initialMsgJSON, this.initialMsgJSON.reply);\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, balloonText) {\n        if (!info) {\n            return;\n        }\n\n       \n\n        let remoteUrl = info.audio_file_link;\n\n        let balloon = this.addBallon(balloonText, true).getComponent(\"Ballon\");\n        if(this.audioID != -1) {\n            balloon.whiteBG.opacity = 128;\n            balloon.text.node.opacity = 128;\n        }\n                \n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this._startPlayTalking(res, balloon, info.lip_sync_animation);\n        }.bind(this));\n    },\n\n    _startTalk(res, info) {\n        this.audioID = cc.audioEngine.play(res);\n        if (this.audioID && this.music.shouldbeMuted()) {\n            cc.audioEngine.setVolume(this.audioID, 0);\n        }\n        this.audioOffset = 0;\n        this.audioInfo= info;\n        this.updateMouth();\n\n\n        cc.audioEngine.setFinishCallback(this.audioID, this._completeTalk.bind(this));\n    },\n\n    _completeTalk() {\n        this.audioID = -1;\n        this.pet.startIdle();\n\n        if (this.nextTalks.length) {\n            let nextTalk = this.nextTalks.splice(0, 1)[0];\n            nextTalk.balloonComp.whiteBG.opacity = 255;\n            nextTalk.balloonComp.text.node.opacity = 255;\n            this._startTalk(nextTalk.audioRes, nextTalk.info);\n        }\n    },\n\n    _startPlayTalking(res, balloon, audioInfo) {\n        if (this.pet.isReadyToTalk()) {\n            if (this.audioID != -1) {\n                this.nextTalks.push({ balloonComp: balloon, audioRes: res, info: audioInfo });\n            }\n            else {\n                this._startTalk(res, audioInfo);\n            }\n        }\n        else {\n            //this.pet.playIntro();\n            setTimeout(() => {\n                this._startPlayTalking(res, balloon, audioInfo);\n            }, 16);\n        }\n\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        this.pet.resetIdle();\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        Server.getMessage(sendText, this.historyObjects, function(responseText){\n            let json = JSON.parse(responseText);\n            this.setEnableTextInput(true);\n            this.onTTSCompleted(json, json.reply);\n\n            this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n        }.bind(this));\n        \n        Server.getEmotion(sendText, function(responseText){\n            let response = JSON.parse(responseText);\n            this.pet.setEmotion(response.emotion);\n        }.bind(this))\n\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n        this.pet.updateMouth(id);\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n        return balloon;\n\n        // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        this.pet.playWelcome();\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n       \n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","const { Furwee } = require(\"Furwee\");\n\nlet languagePanel = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        toggles:[cc.Toggle],\n        toggleIndex: 0\n    },\n\n    onToggleLanuge(evt, param){\n        console.log(param);\n        this.toggleIndex = parseInt(param);\n\n        const langChoice = [\"en\",\"zh\",\"de\",\"pt\",\"it\",\"ko\",\"es\",\"fr\",\"ja\"]\n        Furwee.LANG = langChoice[this.toggleIndex];\n        console.log(\" Furwee.LANG \",  Furwee.LANG );\n    },\n\n\n    setToggleIndex(index){\n        this.toggleIndex = index;\n        this.toggles[this.toggleIndex].check();\n\n        \n    }\n})","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n        console.log(\"touch\",evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n        loadingText: cc.Label\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n        let randomSpeak = [\"Furwee can text fluently in four languages-English, Spanish, German and Italian!\",\n                        \"Furwee can understand Tagalog, the native language spoken in the Philippines.\"]\n        let randIndx = Math.floor(Math.random() * randomSpeak.length);\n        this.loadingText.string = randomSpeak[randIndx];\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = Math.max(0.05,completedCount / totalCount);\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","let UIManager = require(\"UIManager\");\n\nlet Pet = cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        headAnim: cc.Animation,\n        bodyAnim: cc.Animation,\n        mouthNode: cc.Node,\n        idleMouthTimeout: -1,\n        state: null,\n        emotion: \"neutral\",\n        tummy: cc.Node,\n        heartPrefab: cc.Prefab,\n\n        _heart: cc.Node,\n\n        laughSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        isAnimLaughLoaded: false,\n        isAnimIdleWaitLoaded: false\n    },\n\n\n    onLoad() {\n        this.tummy.on(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.on(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n\n        this._randTalkAnims = [\"talking_l_a\"]\n        this._initPetResourceLoading();\n    },\n\n    onDestroy() {\n        this.tummy.off(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.off(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    play() {\n        this._playFurweeAnim(\"happyidle\");\n        this.state = \"intro_idle\";\n    },\n\n    playWelcome() {\n        this._playFurweeAnim(\"intro\");\n        this._setAnimFinishHandler();\n        this.state = \"intro_jump\";\n    },\n\n    playIntro() {\n        /*\n        this._playFurweeAnim(\"happywave\");\n        this._setAnimFinishHandler();\n        this.state = \"wave_1\";\n        */\n    },\n\n    updateMouth(id) {\n        this._stopIdleMouth();\n        if (this.state.startsWith(\"intro\") || this.state.startsWith(\"wave\")) {\n            // skip\n            if(this.state == \"wave_waiting\"){\n                this._playFurweeAnim(\"happywave\");\n                this._setAnimFinishHandler();\n                this.state = \"wave_1\";\n            }\n        }\n        else if (this.state != \"speak\") {\n            this.state = \"speak\";\n            switch (this.emotion) {\n                case \"positive\":\n                    this._playFurweeAnim(\"tallking_2_hands\");\n                    break;\n                case \"negative\":\n                    this._playFurweeAnim(\"sadidle\");\n                    break;\n                default://\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"\n                    //let randArray = [\"talking_l_a\"];\n                    let act = Math.floor(Math.random() * this._randTalkAnims.length);\n                    this._playFurweeAnim( this._randTalkAnims[act]);\n            }\n        }\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this._clearMouth();\n            node.active = true;\n        }\n    },\n\n    startIdle() {\n        this.state = \"idle\";\n        this._stopIdleMouth();\n\n        this._clearMouth();\n        //\n        this._setIdleMouth();\n\n\n        switch (this.emotion) {\n            case \"negative\":\n                this._playFurweeAnim(\"sadidle\");\n                break;\n            case \"positive\":\n                this._playFurweeAnim(\"happyidle\");\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n        }\n    },\n\n    resetIdle(){\n        if(!this.isAnimIdleWaitLoaded){\n            return;\n        }\n        if(this.idleTimer){\n            clearTimeout(this.idleTimer);\n        }\n        this.idleTimer = setTimeout(() => {\n            this._playFurweeAnim(\"listenwaitidle\");\n        }, 30000);\n    },\n\n    _setIdleMouth() {\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n        this.idleMouthTimeout = setTimeout(() => {\n            this._setIdleMouth();\n        }, 2000);\n    },\n\n    _cancelAnimHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n    },\n\n    _setAnimLastFrameHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"lastframe\", this._animComplete.bind(this));\n    },\n\n    _setAnimFinishHandler() {\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\n    },\n\n    _animComplete() {\n        console.log('_animComplete');\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        switch (this.state) {\n            case \"intro_jump\":\n                this._removeClip(\"intro\");\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"wave_waiting\";\n                break;\n            case \"wave_1\":\n                this._removeClip(\"happywave\");\n                this._playFurweeAnim(\"talking_l_a\");\n                this.state = \"speak\";\n                this.resetIdle();\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"idle\";\n                break;\n        }\n       \n    },\n\n    _clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n\n        let node3 = this.mouthNode.getChildByName(\"open_mouth\");\n        node3.active = false;\n    },\n\n\n\n    _stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    _removeClip(anim){\n        if(this.headAnim.currentClip.name == anim + \"_head\"){\n            console.log('_removeClip', this.headAnim.currentClip.name);\n            this.headAnim.removeClip(this.headAnim.currentClip);\n        }\n\n        if(this.bodyAnim.currentClip.name == anim + \"_body\"){\n            console.log('_removeClip', this.bodyAnim.currentClip.name);\n            this.bodyAnim.removeClip(this.bodyAnim.currentClip);\n        }\n    },\n\n    _playFurweeAnim(anim) {\n        console.log(\"playAnim\", anim);\n        this._cancelAnimHandler();\n\n        this.headAnim.play(anim + \"_head\");\n        this.bodyAnim.play(anim + \"_body\");\n\n        if (anim == \"laugh\") {\n            if (!this._heart) {\n                this._heart = cc.instantiate(this.heartPrefab);\n                this._heart.y = this.tummy.y;\n                this.node.addChild(this._heart);\n\n                \n            }\n            else {\n                this._heart.getComponent(cc.Animation).play();\n            }\n\n            if(! UIManager.instance.game.music.shouldbeMuted()){\n                cc.audioEngine.play(this.laughSound);\n\n            }\n        }\n    },\n\n    setEmotion(state) {\n        console.log(\"setemotion\", state);\n        this.emotion = state;\n    },\n\n    isReadyToTalk() {\n        return !this.state.startsWith(\"intro\");\n    },\n\n    _onTummyHandler() {\n        if(!this.isAnimLaughLoaded){\n            return;\n        }\n        if (this.state == \"idle\") {\n            this.state = \"laugh\";\n            this._playFurweeAnim(\"laugh\");\n            this._setAnimFinishHandler();\n        }\n    },\n\n\n    ///pet resources loading\n    _initPetResourceLoading(){\n        this._initLaugh();\n    },\n\n    _initLaugh(){\n        cc.loader.loadRes('pet_resources_laugh', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n\n            this.isAnimLaughLoaded = true;\n            this._initIdleWait();\n        }.bind(this));\n    },\n\n    _initIdleWait(){\n        cc.loader.loadRes('pet_resources_idlewait', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n\n            this.isAnimIdleWaitLoaded = true;\n            this.resetIdle();\n            this._initTalk();\n        }.bind(this));\n    },\n\n    _initTalk(){\n        cc.loader.loadRes('pet_resources_talk', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n            this._randTalkAnims = this._randTalkAnims.concat([\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"]);\n            console.log(this._randTalkAnims);\n        }.bind(this));\n    },\n\n    _addAnimClips(node){\n        let bAnim = node.getChildByName(\"body\").getComponent(cc.Animation);\n        let hAnim = node.getChildByName(\"head\").getComponent(cc.Animation);\n        \n        for(let i = 0; i < bAnim._clips.length; i++){\n            this.bodyAnim.addClip( bAnim._clips[i],  bAnim._clips[i].name);\n        }\n\n        for(let i = 0; i < hAnim._clips.length; i++){\n            this.headAnim.addClip( hAnim._clips[i],  hAnim._clips[i].name);\n        }\n    }\n})","const { Furwee } = require(\"Furwee\"); \nlet Server = {};\n\nServer.URL = \"http://40.121.137.102\";\nServer.URL_SUFFIX = \"\";\n\nServer.init = function(){\n\n    if (!Furwee.DEBUG) {\n        Server.URL = \"/api\";\n        Server.URL_SUFFIX = \"\";\n        Furwee.LOGOUT_URL = \"/logout\";\n        Furwee.HOME_URL = \"/\";\n    }\n    else {\n        Server.URL = \"https://furwee.ai/api\";\n        Server.URL_SUFFIX = \"\";\n        Furwee.LOGOUT_URL = \"https://furwee.ai/logout\";\n        Furwee.HOME_URL = \"https://furwee.ai/home\";\n    }\n}\nServer.init();\n\nServer.getInitialMessage = function (callback){\n        let xhr = new XMLHttpRequest();\n        let requestURL = Server.URL + \"/initial-message/\" + Server.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    callback(xhr.responseText);\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n}\n\nServer.getMessage = function (sendText, historyObjects, callback){\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = Server.URL + \"/messages/\" + Server.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    callback(xhr.responseText);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n}\n\nServer.getEmotion = function (sendText, callbak){\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = Server.URL + \"/emotion/\" + Server.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    callbak(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n}\n\n\nexport{Server};","let UIManager = require(\"UIManager\");\nconst { Furwee } = require(\"Furwee\");\n\nlet SpeechTool = {};\n\nSpeechTool.ui = null;\nSpeechTool.useWebRecognition = false;\nSpeechTool.recognition = null;\nSpeechTool.textRecognition = \"\";\n\n //api\n SpeechTool.stream = null;\n SpeechTool.recorder = null;\n \n SpeechTool.gumStream = null;\n //stream from getUserMedia() \n SpeechTool.rec = null;\n //Recorder.js object \n SpeechTool.input = null;\n SpeechTool.audioContext = null;\n\n SpeechTool.checkWebRecognition = false;\n SpeechTool.isWorkingChecked = false;\n\n SpeechTool.initRecognition = function(uibase){\n    UIManager.uiBase = uibase;\n    SpeechTool.textRecognition = \"\";\n\n    if(!SpeechTool.checkWebRecognition){\n        SpeechTool.checkWebRecognition = true;\n\n        window.SpeechRecognition = window.SpeechRecognition\n        || window.webkitSpeechRecognition;\n    \n        SpeechTool.useWebRecognition = SpeechRecognition != undefined;\n        UIManager.instance.debugNode.string += \"useWebRecognition:\" +  SpeechTool.useWebRecognition + \"\\n\";\n    }\n    \n},\n\nSpeechTool.isWorking = function(){\n    if(!SpeechTool.recognition){\n        return true;\n    }\n\n    if(!SpeechTool.isWorkingChecked){\n        SpeechTool.isWorkingChecked = true;\n\n        UIManager.instance.debugNode.string += \"isWorking \"+ SpeechTool.recognition.audiostart +\"\\n\" +SpeechTool.recognition.audioend+ SpeechTool.recognition.end +\"\\n\";\n\n        if((!SpeechTool.recognition.audiostart)\n            &&(!SpeechTool.recognition.audioend)\n            &&(!SpeechTool.recognition.end)){\n\n                SpeechTool.useWebRecognition = false;\n                UIManager.instance.debugNode.string += \"useWebRecognition false \"+\"\\n\";\n\n                SpeechTool.recognition.onerror = null;\n                SpeechTool.recognition.onresult = null;\n                SpeechTool.recognition.onaudiostart = null;\n                SpeechTool.recognition.onaaudioend = null;\n                SpeechTool.recognition.onend = null;\n\n\n                return false;\n            }\n    }\n\n    return true;\n},\n\n\nSpeechTool.startWebRecognition = function(){\n    let finalString = \"\";\n    // check if work properly\n    if(SpeechTool.recognition){\n        SpeechTool.recognition.onerror = null;\n        SpeechTool.recognition.onresult = null;\n        SpeechTool.recognition.onaudiostart = null;\n        SpeechTool.recognition.onaaudioend = null;\n        SpeechTool.recognition.onend = null;\n    }\n\n    //\n    SpeechTool.recognition = new SpeechRecognition();\n    SpeechTool.recognition.interimResults = true;\n    SpeechTool.recognition.continuous = true;\n    SpeechTool.recognition.lang = Furwee.LANG ;\n\n    UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n   \n    SpeechTool.recognition.onresult = function (event) {\n\n        console.log(event);\n        UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n        let interString = \"\";\n        let autoEnd = false;\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n            // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n            if (event.results[i].isFinal) {\n                finalString += event.results[i][0].transcript;\n                SpeechTool.textRecognition = finalString;\n                autoEnd = true;\n            \n            }\n            else{\n                interString += event.results[i][0].transcript;\n                SpeechTool.textRecognition = finalString + interString;\n            \n            }\n        }\n        //////////\n        UIManager.uiBase.text.string = SpeechTool.textRecognition;\n\n        if (UIManager.uiBase.text.enabled) {\n            UIManager.uiBase.updateUIAfterRecord();\n        }\n        UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n\n        if(autoEnd){\n            UIManager.uiBase.stopRecord();\n            if(UIManager.uiBase.text.string.length != 0){\n                UIManager.instance.game.sendHandler()\n            }\n        }\n    };\n\n    SpeechTool.recognition.onerror = function(event) {\n\n        UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n        if(event.error == \"network\"){\n            SpeechTool.useWebRecognition = false;\n        }\n    }\n\n    // testing\n    SpeechTool.recognition.onaudiostart = function(evt){\n        UIManager.instance.debugNode.string += \"onaudiostart \" + evt + \"\\n\";\n        evt.target.audiostart = true;\n    }\n\n    SpeechTool.recognition.onaudioend = function(evt){\n        UIManager.instance.debugNode.string += \"onaudioend \" + evt + \"\\n\";\n        evt.target.audioend = true;\n    }\n\n    SpeechTool.recognition.onend = function(evt){\n        UIManager.instance.debugNode.string += \"onend \" + evt + \"\\n\";\n        evt.target.end = true;\n    }\n\n    /*\n\n    SpeechTool.recognition.onnomatch = function(evt){\n        UIManager.instance.debugNode.string += \"onnomatch \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onsoundstart = function(evt){\n        UIManager.instance.debugNode.string += \"soundstart \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onsoundend = function(evt){\n        UIManager.instance.debugNode.string += \"soundend \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onspeechstart = function(evt){\n        UIManager.instance.debugNode.string += \"speechstart \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onspeechend= function(evt){\n        UIManager.instance.debugNode.string += \"speechend \" + evt + \"\\n\";\n        \n    }\n\n    SpeechTool.recognition.onstart= function(evt){\n        UIManager.instance.debugNode.string += \"start \" + evt + \"\\n\";\n        \n    }\n    */\n    //test end\n\n\n    SpeechTool.recognition.start();\n    UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n},\n\nSpeechTool.stopWebRecognition = function(){\n    SpeechTool.recognition.stop();\n},\n\n\n//start api recognition\nSpeechTool.startAPIRecognition= function(){\n    \n    var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n    let constraints  =  {\n        audio: true,\n        video: false\n    } ;\n\n    navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n        SpeechTool.audioContext = new AudioContext();\n\n        console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n        /* assign to gumStream for later use */\n        SpeechTool.gumStream = stream;\n        /* use the stream */\n        SpeechTool.input = SpeechTool.audioContext.createMediaStreamSource(stream);\n        /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n        SpeechTool.rec = new Recorder(SpeechTool.input, {\n            numChannels: 1\n        }) \n        //start the recording process \n        SpeechTool.rec.record()\n        console.log(\"Recording started\");\n    }).catch(function(err) {\n        \n    });\n},\n\nSpeechTool.stopAPIRecognition = function(){\n\n    SpeechTool.rec.stop(); //stop microphone access \n    SpeechTool.gumStream.getAudioTracks()[0].stop();\n    //create the wav blob and pass it on to createDownloadLink \n\n    SpeechTool.rec.exportWAV(function(blob) {\n\n        let xhr = new XMLHttpRequest();\n        let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    if(json.text != null){\n                        /////////////\n                        UIManager.uiBase.text.string = json.text;\n                        UIManager.uiBase.updateUIAfterRecord();\n                    }\n                }\n            }\n        }\n        //let params = JSON.stringify({ \"audio\": blob});\n        xhr.open('POST', requestURL, true);\n\n        //URL = window.URL || window.webkitURL;\n        \n        var fd=new FormData();\n        fd.append(\"audio\",blob);\n\n        xhr.send(fd);\n    });\n\n\n}\n\n\nexport{SpeechTool};\n\n\n","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\nconst {SpeechTool} = require(\"SpeechTool\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n        languagePanel: cc.Node\n\n    },\n    \n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n    },\n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        SpeechTool.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(SpeechTool.useWebRecognition && SpeechTool.isWorking()){\n            SpeechTool.startWebRecognition();\n        }\n        else{\n            SpeechTool.startAPIRecognition();\n        }\n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(SpeechTool.useWebRecognition){\n            SpeechTool.stopWebRecognition();\n        }\n        else{\n            SpeechTool.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    toggleLanguagePanel(){\n        this.languagePanel.active = !this.languagePanel.active;\n        if( this.languagePanel.active){\n            UIManager.instance.languagePanel = this.languagePanel;\n            console.log(\"toggle\",  UIManager.instance.languagePanel);\n        }\n        \n    },\n\n    hideLanguagePanel(){\n        this.languagePanel.active = false;\n        UIManager.instance.languagePanel = null;\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n\n        languagePanel:null\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 89;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.5556;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.vNOde.getComponent('UIBase').languagePanel){\n            this.vNOde.getComponent('UIBase').languagePanel.active = true;\n            this.vNOde.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.vNOde.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 24;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.hNode.getComponent('UIBase').languagePanel){\n            this.hNode.getComponent('UIBase').languagePanel.active = true;\n            this.hNode.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.hNode.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n       // return;\n       if(!Furwee.DEBUG){\n            return;\n        }\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        window.location.href = Furwee.LOGOUT_URL; \n    },\n\n    home(){\n        window.location.href = Furwee.HOME_URL; \n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n\n        \n    }\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}\n\ncc.EditBox.prototype._showLabels = function(){\n        this._isLabelVisible = true;\n        this._updateLabels();\n}","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}