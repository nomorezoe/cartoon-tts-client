{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/game/BodyAnim.js","assets/Scripts/game/BottomUI.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/game/CamMove.js","assets/Scripts/game/Eye.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","anim","Animation","start","playIntro","play","introComplete","musicWidget","Widget","sendButton","musicButton","inputWidget","mobileViews","pcViews","editBox","EditBox","mobileEditBG","mobileSmile","pop","mobileFirst","isFirst","i","length","_i","bottom","left","updateAlignment","scale","setMobileView","popMovileFirst","GAP_ICON","arguments","undefined","textLabel","placeholderLabel","min","GAP_TEXTBG","GAP_BORDER","len","ICON","_i2","popupComingSoon","closeComingSoon","oldw","closeMobileFirst","switchwidget","fw","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","isM","isN","systemEvent","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","z","_i3","_i4","_i5","_i6","rotationX","_i7","_i8","fov","_i9","event","keyCode","macro","KEY","a","d","s","o","p","k","l","m","n","u","console","log","position","Game","sceneNodes","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","game","view","getDesignResolutionSize","getCanvasSize","info","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","furweeIntialized","targetY","_x","targetX","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","v3","stopAllActions","runAction","stage","eye","isLeft","Boolean","randX","randY","touchMoveHandler","mouseMoveHandler","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","convertToNodeSpaceAR","tan","posX","posY","mouseLen2","pow","factor","len2","setPosition","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","Furwee","LOGOUT_URL","HOME_URL","MusicToggle","BodyAnim","LayerCamerasMove","audioID","mouthNode","mouthIsReset","historyObjects","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","idleMouthTimeout","bodyAnim","headAnim","initialMsgJSON","introCameras","URL","URL_SUFFIX","enableTextInput","uiManager","cameraMove","music","isLocalHost","window","location","href","indexOf","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","audioOffset","updateMouth","setFinishCallback","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","reply","message","soundloadedHandler","lip_sync_animation","err","res","shouldbeMuted","setVolume","stopIdleMouth","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","params2","getChildByName","clearMouth","dt","time","getCurrentTime","startIdleMouth","textContent","updateSendButton","children","balloon","instantiate","addChild","blockClickHandler","initialize","introCameraAnim","setIdleMouth","clearTimeout","idle","floor","random","errorClickHandler","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","MOUSE_ENTER","showTop","TOUCH_END","hideTop","adjustMushroom","addWidth","moveTo","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","splice","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","onDeviceMotion","gamma","beta","screenWidth_2","screenHeight_2","progressBar","ProgressBar","setOrientation","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","_this","checkVolumnToggle","isNative","muteAll","onMicChange","muted","emit","microButton","recordButton","startRecord","enabled","initRecognition","useWebRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","ui","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","debugNode","finalString","interimResults","continuous","lang","onresult","interString","resultIndex","results","isFinal","transcript","onerror","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","isHActive","hNode","vNOde","uiCamera","startBlock","ws","getComponentsInChildren","closeStartBlock","toggleDebug","logout","home","education","v","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nlet BodyAnim = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anim: cc.Animation\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    playIntro(){\n        this.anim.play(\"intro_body\");\n    },\n\n    introComplete(){\n        this.anim.play(\"body\");\n    },\n\n    play(){\n        this.anim.play(\"body\");\n    }\n    // update (dt) {},\n});\n","const {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        musicWidget: cc.Widget,\n        sendButton: cc.Node,\n        musicButton: cc.Node,\n\n        inputWidget: cc.Widget,\n\n        mobileViews: [cc.Node],\n        pcViews: [cc.Node],\n\n        editBox: cc.EditBox,\n        mobileEditBG: cc.Node,\n        mobileSmile: cc.Node,\n\n        pop: cc.Node,\n        mobileFirst: cc.Node,\n        isFirst: true\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n    },\n\n    mobileView(w) {\n\n        for (let i = 0; i < this.mobileViews.length; i++) {\n            this.mobileViews[i].active = true;\n        }\n\n        for (let i = 0; i < this.pcViews.length; i++) {\n            this.pcViews[i].active = false;\n        }\n\n\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n        this.musicWidget.updateAlignment();\n\n        this.inputWidget.bottom = 35.5;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n\n        this.sendButton.scale = 0.5;\n\n        this.setMobileView(w);\n\n        if (this.isFirst) {\n            this.isFirst = false;\n            this.popMovileFirst();\n        }\n    },\n\n    setMobileView(w, gapicon = 8) {\n        let GAP_TEXTBG = 30;\n        let GAP_BORDER = 10;\n        let GAP_ICON = gapicon;\n        let ICON = 36;\n\n\n        this.editBox.textLabel.fontSize = 20;\n        this.editBox.placeholderLabel.fontSize = 20;\n\n        this.editBox.node.width = Math.min(420, w - GAP_TEXTBG * 2 - GAP_BORDER * 2 - GAP_ICON - ICON);\n        this.mobileEditBG.width = this.editBox.node.width + GAP_TEXTBG * 2;\n\n        let len = this.editBox.node.width + GAP_TEXTBG * 2 + GAP_ICON + ICON;\n\n        this.mobileEditBG.x = this.editBox.node.x = -len / 2 + this.editBox.node.width / 2 + GAP_TEXTBG;\n\n        this.mobileSmile.x = this.mobileEditBG.x + this.mobileEditBG.width / 2 - 20;\n\n        this.sendButton.x = this.editBox.node.x + this.editBox.node.width / 2 + GAP_TEXTBG + GAP_ICON + ICON / 2;\n    },\n\n    pcView() {\n        for (let i = 0; i < this.mobileViews.length; i++) {\n            this.mobileViews[i].active = false;\n        }\n\n        for (let i = 0; i < this.pcViews.length; i++) {\n            this.pcViews[i].active = true;\n        }\n\n        this.editBox.textLabel.fontSize = 17;\n        this.editBox.placeholderLabel.fontSize = 17;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n\n        this.inputWidget.bottom = 83;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        this.sendButton.scale = 1;\n        this.sendButton.x = 334;\n        this.editBox.node.width = 420;\n        this.editBox.node.x = 0;\n\n        if (this.isFirst) {\n            this.isFirst = false;\n        }\n\n        /*if(cc.sys.isBrowser){\n            this.editBox.textLabel.fontSize = 20;\n            this.editBox.placeholderLabel.fontSize = 20;\n        }*/\n    },\n\n    popupComingSoon() {\n        this.pop.active = true;\n    },\n\n    closeComingSoon() {\n        this.pop.active = false;\n    },\n\n    popMovileFirst() {\n        this.mobileFirst.active = true;\n        let oldw = this.mobileEditBG.width;\n        this.mobileEditBG.width = 360;\n        //this.mobileEditBG.x -= (oldw - this.mobileEditBG.width)/2;\n        this.editBox.node.width = 300;\n        this.editBox.node.x += (oldw - this.mobileEditBG.width) / 2;\n        //this.editBox.node.x = this.mobileEditBG.x;\n\n\n        this.mobileFirst.x = 180;\n\n        this.mobileSmile.x = this.mobileEditBG.x - this.mobileEditBG.width / 2 + 20;\n\n    },\n\n    closeMobileFirst() {\n        if (this.mobileFirst.active) {\n            this.mobileFirst.active = false;\n            this.setMobileView(this.switchwidget.fw);\n        }\n    }\n});\n","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false,\n\n        isM:false,\n        isN:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n         if(this.isM){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x +=1;\n             }\n        }\n\n         if(this.isN){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n            case cc.macro.KEY.m:\n                this.isM = true;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n            case cc.macro.KEY.m:\n                this.isM = false;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = false;\n                break;\n        }\n    }\n});","let Game = require(\"Game\");\n\nlet CamMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cameras: [cc.Camera],\n        sceneNodes: [cc.Node],\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game:Game\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].eulerAngles.x, y: this.sceneNodes[i].eulerAngles.y };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onMouseMove: function (evt) {\n        if(!this.game.furweeIntialized){\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        let targetY = (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY;\n        let targetX = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX ;\n\n        //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n        //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n        //console.log(\"currentX\", currentX, \"currentY\", currentY);\n\n        let timeY = Math.abs(targetY - currentY) / this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX) / this.rotRangeX;\n        //console.log('time', timeX, timeY);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY + this.infos[i].y, 0));\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n            //    console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(rotate3DTo);\n\n        }\n\n    },\n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stage: cc.Node,\n        eye: cc.Node,\n        isLeft: cc.Boolean\n    },\n\n    onLoad() {\n        this.randX = 8;\n        this.randY = 1.5;\n        // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        // this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt) {\n        //console.log(evt);\n    },\n\n    mouseMoveHandler(evt) {\n\n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let len = 0;\n        let tan = 0;\n        let ctan = 0;\n\n        let posX = 0;\n        let posY = 0;\n\n        if (pos.x != 0 && pos.y != 0) {\n\n            let mouseLen2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            if (mouseLen2 > Math.pow(150, 2)) {\n                posX = 0;\n                posY = 0;\n\n            }\n            else {\n                let factor = Math.min(Math.pow(mouseLen2, 0.5) / 40, 1);\n                //factor = Math.pow(factor, 2);\n                if (this.isLeft) {\n                    pos.x -= 40 * factor;\n                }\n                else {\n                    pos.x += 40 * factor;\n                }\n                if (pos.x < 0) {\n                    pos.x = Math.max(pos.x, -8);\n                }\n                else {\n                    pos.x = Math.min(pos.x, 8);\n                }\n                if (pos.y < 0) {\n                    pos.y = Math.max(pos.y, -2.5);\n                }\n                else {\n                    pos.y = Math.min(pos.y, 2.5);\n                }\n                let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n                len = Math.pow(len2, 0.5);\n\n                tan = pos.y / len;\n                ctan = pos.x / len;\n\n                posX = len * ctan;\n                posY = len * tan;\n\n            }\n\n        }\n\n        this.eye.setPosition(posX, posY);\n        //console.log(\"set pos\", posX, posY);\n\n    }\n})","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet BodyAnim = require(\"BodyAnim\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n        mouthNode: cc.Node,\n        mouthIsReset: true,\n        historyObjects: [],\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        idleMouthTimeout: -1,\n        bodyAnim: BodyAnim,\n        headAnim: cc.Animation,\n\n        initialMsgJSON: null,\n\n        introCameras: [cc.Camera],\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n        \n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n\n        if (true){//window.location.href.indexOf(\"furwee\") != -1) {\n            this.URL = \"https://furwee.ai/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL =  \"https://furwee.ai/logout\";\n            Furwee.HOME_URL = \"https://furwee.ai/home\";\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n        \n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n        \n        return;\n        \n        */\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.bodyAnim.playIntro();\n        this.headAnim.play();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.mouthIsReset = false;\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.headAnim.play();\n        this.bodyAnim.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.setEnableTextInput(true);\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.bodyAnim.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            if(this.audioID && this.music.shouldbeMuted()){\n                cc.audioEngine.setVolume(this.audioID, 0);\n            }\n            this.audioOffset = 0;\n            this.stopIdleMouth();\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this.clearMouth();\n            node.active = true;\n        }\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else {\n            if (!this.mouthIsReset) {\n                this.mouthIsReset = true;\n                this.clearMouth();\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n                this.startIdleMouth();\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n\n       // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        //this.tryToStartFurweeIntro();\n        this.introCameraAnim();\n    },\n\n    introCameraAnim() {\n        for (let i = 0; i < this.introCameras.length; i++) {\n            this.introCameras[i].getComponent(cc.Animation).play();\n        }\n\n        setTimeout(this.tryToStartFurweeIntro.bind(this), 2000);\n    },\n\n    clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    startIdleMouth() {\n        this.setIdleMouth();\n    },\n\n    setIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n\n        this.clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        setTimeout(this.setIdleMouth.bind(this), 3000 * Math.random() + 3000);\n    },\n\n    stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = completedCount / totalCount;\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n    },\n    \n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        UIBase.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(UIBase.useWebRecognition){\n            UIBase.startWebRecognition();\n        }\n        else{\n            UIBase.startAPIRecognition();\n        }\n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(UIBase.useWebRecognition){\n           UIBase.stopWebRecognition();\n        }\n        else{\n            UIBase.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    statics: {\n        ui:null,\n        useWebRecognition:false,\n        recognition:null,\n        textRecognition:\"\",\n\n         //api\n         stream: null,\n         recorder: null,\n         \n         gumStream : null,\n         //stream from getUserMedia() \n         rec : null,\n         //Recorder.js object \n         input : null,\n         audioContext:null,\n\n        initRecognition(uibase){\n            UIManager.uiBase = uibase;\n\n            window.SpeechRecognition = window.SpeechRecognition\n            || window.webkitSpeechRecognition;\n\n            UIBase.useWebRecognition = SpeechRecognition != undefined;\n            UIManager.instance.debugNode.string += \"useWebRecognition:\" +  UIBase.useWebRecognition + \"\\n\";\n\n            UIBase.textRecognition = \"\";\n        },\n\n\n        startWebRecognition(){\n            let finalString = \"\";\n            UIBase.recognition = new SpeechRecognition();\n            UIBase.recognition.interimResults = true;\n            UIBase.recognition.continuous = true;\n            UIBase.recognition.lang = \"en-US\";\n        \n            UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n            UIBase.recognition.onresult = function (event) {\n\n                console.log(event);\n                UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n                let interString = \"\";\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\n                    // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n                    if (event.results[i].isFinal) {\n                        finalString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString;\n                    \n                    }\n                    else{\n                        interString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString + interString;\n                    \n                    }\n                }\n                //////////\n                UIManager.uiBase.text.string = UIBase.textRecognition;\n\n                if (UIManager.uiBase.text.enabled) {\n                    UIManager.uiBase.updateUIAfterRecord();\n                }\n                UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n            };\n\n            UIBase.recognition.onerror = function(event) {\n\n                UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n            }\n\n            UIBase.recognition.start();\n            UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n        },\n\n        stopWebRecognition(){\n            UIBase.recognition.stop();\n        },\n\n        \n        //start api recognition\n        startAPIRecognition(){\n            \n            var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n            let constraints  =  {\n                audio: true,\n                video: false\n            } ;\n\n            navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n                UIBase.audioContext = new AudioContext();\n\n                console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n                /* assign to gumStream for later use */\n                UIBase.gumStream = stream;\n                /* use the stream */\n                UIBase.input = UIBase.audioContext.createMediaStreamSource(stream);\n                /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n                UIBase.rec = new Recorder(UIBase.input, {\n                    numChannels: 1\n                }) \n                //start the recording process \n                UIBase.rec.record()\n                console.log(\"Recording started\");\n            }).catch(function(err) {\n                \n            });\n        },\n\n        stopAPIRecognition(){\n\n            UIBase.rec.stop(); //stop microphone access \n            UIBase.gumStream.getAudioTracks()[0].stop();\n            //create the wav blob and pass it on to createDownloadLink \n\n            UIBase.rec.exportWAV(function(blob) {\n\n                let xhr = new XMLHttpRequest();\n                let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200) {\n                            let json = JSON.parse(xhr.responseText);\n                            if(json.text != null){\n                                /////////////\n                                UIManager.uiBase.text.string = json.text;\n                                UIManager.uiBase.updateUIAfterRecord();\n                            }\n                        }\n                    }\n                }\n                //let params = JSON.stringify({ \"audio\": blob});\n                xhr.open('POST', requestURL, true);\n\n                //URL = window.URL || window.webkitURL;\n                \n                var fd=new FormData();\n                fd.append(\"audio\",blob);\n\n                xhr.send(fd);\n            });\n\n        \n        }\n\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n        return;\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST',  Furwee.LOGOUT_URL , true);\n        xhr.send();\n    },\n\n    home(){\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST',  Furwee.HOME_URL , true);\n        xhr.send();\n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n\n        \n    }\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}