{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LanguagePanel.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","DEBUG","LANG","MusicToggle","LayerCamerasMove","Pet","audioID","historyObjects","pet","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","URL","URL_SUFFIX","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","nextTalks","start","game","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","console","log","socket","id","play","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","reply","push","length","message","info","balloonText","balloon","addBallon","err","res","_startPlayTalking","lip_sync_animation","_startTalk","audioEngine","shouldbeMuted","setVolume","audioOffset","audioInfo","updateMouth","setFinishCallback","_completeTalk","startIdle","nextTalk","splice","balloonComp","audioRes","_this","isReadyToTalk","setTimeout","didReturnHandler","sendHandler","focus","sendText","trim","resetIdle","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","response","setEmotion","emotion","params2","viseme_id","update","dt","time","getCurrentTime","audio_offset_ms","textContent","updateSendButton","i","children","instantiate","addChild","blockClickHandler","initialize","playWelcome","errorClickHandler","window","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","_impl","_elem","autocomplete","EventType","MOUSE_ENTER","showTop","onDestroy","off","TOUCH_END","hideTop","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","indexOf","toggles","Toggle","toggleIndex","onToggleLanuge","evt","param","parseInt","setToggleIndex","check","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","loadingText","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","randomSpeak","randIndx","floor","random","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","state","tummy","heartPrefab","_heart","laughSound","isAnimLaughLoaded","isAnimIdleWaitLoaded","_onTummyHandler","_randTalkAnims","_initPetResourceLoading","_playFurweeAnim","_setAnimFinishHandler","playIntro","_stopIdleMouth","startsWith","act","getChildByName","_clearMouth","_setIdleMouth","idleTimer","_this2","idle","_cancelAnimHandler","_animComplete","_setAnimLastFrameHandler","_i","_initLaugh","loadRes","prefab","_addAnimClips","data","_initIdleWait","_initTalk","concat","bAnim","hAnim","_clips","addClip","name","_i2","emit","microButton","recordButton","languagePanel","startRecord","enabled","initRecognition","useWebRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","toggleLanguagePanel","hideLanguagePanel","ui","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","undefined","debugNode","finalString","interimResults","continuous","lang","onresult","event","interString","autoEnd","resultIndex","results","isFinal","transcript","onerror","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","logout","location","href","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary","_showLabels","_isLabelVisible","_updateLabels"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nFurwee.DEBUG = true;\nFurwee.LANG = \"en\";\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst { Furwee } = require(\"Furwee\");\nlet Pet = require(\"Pet\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n\n        historyObjects: [],\n\n        pet: Pet,\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        initialMsgJSON: null,\n\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n\n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node,\n\n\n        nextTalks: []\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n\n\n        if (!Furwee.DEBUG) {\n            this.URL = \"/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL = \"/logout\";\n            Furwee.HOME_URL = \"/\";\n        }\n        else {\n            this.URL = \"https://furwee.ai/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL = \"https://furwee.ai/logout\";\n            Furwee.HOME_URL = \"https://furwee.ai/home\";\n        }\n\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee() {\n        this.pet.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n\n        this.furweeIntialized = true;\n        //this.pet.playWelcome();\n        this.setEnableTextInput(true);\n        //this.pet.playIntro();\n        this.onTTSCompleted(this.initialMsgJSON, this.initialMsgJSON.reply);\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, balloonText) {\n        if (!info) {\n            return;\n        }\n\n       \n\n        let remoteUrl = info.audio_file_link;\n\n        let balloon = this.addBallon(balloonText, true).getComponent(\"Ballon\");\n        if(this.audioID != -1) {\n            balloon.whiteBG.opacity = 128;\n            balloon.text.node.opacity = 128;\n        }\n                \n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this._startPlayTalking(res, balloon, info.lip_sync_animation);\n        }.bind(this));\n    },\n\n    _startTalk(res, info) {\n        this.audioID = cc.audioEngine.play(res);\n        if (this.audioID && this.music.shouldbeMuted()) {\n            cc.audioEngine.setVolume(this.audioID, 0);\n        }\n        this.audioOffset = 0;\n        this.audioInfo= info;\n        this.updateMouth();\n\n\n        cc.audioEngine.setFinishCallback(this.audioID, this._completeTalk.bind(this));\n    },\n\n    _completeTalk() {\n        this.audioID = -1;\n        this.pet.startIdle();\n\n        if (this.nextTalks.length) {\n            let nextTalk = this.nextTalks.splice(0, 1)[0];\n            nextTalk.balloonComp.whiteBG.opacity = 255;\n            nextTalk.balloonComp.text.node.opacity = 255;\n            this._startTalk(nextTalk.audioRes, nextTalk.info);\n        }\n    },\n\n    _startPlayTalking(res, balloon, audioInfo) {\n        if (this.pet.isReadyToTalk()) {\n            if (this.audioID != -1) {\n                this.nextTalks.push({ balloonComp: balloon, audioRes: res, info: audioInfo });\n            }\n            else {\n                this._startTalk(res, audioInfo);\n            }\n        }\n        else {\n            //this.pet.playIntro();\n            setTimeout(() => {\n                this._startPlayTalking(res, balloon, audioInfo);\n            }, 16);\n        }\n\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        this.pet.resetIdle();\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json, json.reply);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                    let response = JSON.parse(xhr2.responseText);\n                    that.pet.setEmotion(response.emotion);\n\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n        this.pet.updateMouth(id);\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n        return balloon;\n\n        // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        this.pet.playWelcome();\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n       \n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","const { Furwee } = require(\"Furwee\");\n\nlet languagePanel = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        toggles:[cc.Toggle],\n        toggleIndex: 0\n    },\n\n    onToggleLanuge(evt, param){\n        console.log(param);\n        this.toggleIndex = parseInt(param);\n\n        const langChoice = [\"en\",\"zh\",\"de\",\"pt\",\"it\",\"ko\",\"es\",\"fr\",\"ja\"]\n        Furwee.LANG = langChoice[this.toggleIndex];\n        console.log(\" Furwee.LANG \",  Furwee.LANG );\n    },\n\n\n    setToggleIndex(index){\n        this.toggleIndex = index;\n        this.toggles[this.toggleIndex].check();\n\n        \n    }\n})","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n        console.log(\"touch\",evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n        loadingText: cc.Label\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n        let randomSpeak = [\"Furwee can text fluently in four languages-English, Spanish, German and Italian!\",\n                        \"Furwee can understand Tagalog, the native language spoken in the Philippines.\"]\n        let randIndx = Math.floor(Math.random() * randomSpeak.length);\n        this.loadingText.string = randomSpeak[randIndx];\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = Math.max(0.05,completedCount / totalCount);\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","let UIManager = require(\"UIManager\");\n\nlet Pet = cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        headAnim: cc.Animation,\n        bodyAnim: cc.Animation,\n        mouthNode: cc.Node,\n        idleMouthTimeout: -1,\n        state: null,\n        emotion: \"neutral\",\n        tummy: cc.Node,\n        heartPrefab: cc.Prefab,\n\n        _heart: cc.Node,\n\n        laughSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        isAnimLaughLoaded: false,\n        isAnimIdleWaitLoaded: false\n    },\n\n\n    onLoad() {\n        this.tummy.on(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.on(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n\n        this._randTalkAnims = [\"talking_l_a\"]\n        this._initPetResourceLoading();\n    },\n\n    onDestroy() {\n        this.tummy.off(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.off(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    play() {\n        this._playFurweeAnim(\"happyidle\");\n        this.state = \"intro_idle\";\n    },\n\n    playWelcome() {\n        this._playFurweeAnim(\"intro\");\n        this._setAnimFinishHandler();\n        this.state = \"intro_jump\";\n    },\n\n    playIntro() {\n        /*\n        this._playFurweeAnim(\"happywave\");\n        this._setAnimFinishHandler();\n        this.state = \"wave_1\";\n        */\n    },\n\n    updateMouth(id) {\n        this._stopIdleMouth();\n        if (this.state.startsWith(\"intro\") || this.state.startsWith(\"wave\")) {\n            // skip\n            if(this.state == \"wave_waiting\"){\n                this._playFurweeAnim(\"happywave\");\n                this._setAnimFinishHandler();\n                this.state = \"wave_1\";\n            }\n        }\n        else if (this.state != \"speak\") {\n            this.state = \"speak\";\n            switch (this.emotion) {\n                case \"positive\":\n                    this._playFurweeAnim(\"tallking_2_hands\");\n                    break;\n                case \"negative\":\n                    this._playFurweeAnim(\"sadidle\");\n                    break;\n                default://\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"\n                    //let randArray = [\"talking_l_a\"];\n                    let act = Math.floor(Math.random() * this._randTalkAnims.length);\n                    this._playFurweeAnim( this._randTalkAnims[act]);\n            }\n        }\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this._clearMouth();\n            node.active = true;\n        }\n    },\n\n    startIdle() {\n        this.state = \"idle\";\n        this._stopIdleMouth();\n\n        this._clearMouth();\n        //\n        this._setIdleMouth();\n\n\n        switch (this.emotion) {\n            case \"negative\":\n                this._playFurweeAnim(\"sadidle\");\n                break;\n            case \"positive\":\n                this._playFurweeAnim(\"happyidle\");\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n        }\n    },\n\n    resetIdle(){\n        if(!this.isAnimIdleWaitLoaded){\n            return;\n        }\n        if(this.idleTimer){\n            clearTimeout(this.idleTimer);\n        }\n        this.idleTimer = setTimeout(() => {\n            this._playFurweeAnim(\"listenwaitidle\");\n        }, 30000);\n    },\n\n    _setIdleMouth() {\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n        this.idleMouthTimeout = setTimeout(() => {\n            this._setIdleMouth();\n        }, 2000);\n    },\n\n    _cancelAnimHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n    },\n\n    _setAnimLastFrameHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"lastframe\", this._animComplete.bind(this));\n    },\n\n    _setAnimFinishHandler() {\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\n    },\n\n    _animComplete() {\n        console.log('_animComplete');\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        switch (this.state) {\n            case \"intro_jump\":\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"wave_waiting\";\n                break;\n            case \"wave_1\":\n                this._playFurweeAnim(\"talking_l_a\");\n                this.state = \"speak\";\n                this.resetIdle();\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"idle\";\n                break;\n        }\n       \n    },\n\n    _clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n\n        let node3 = this.mouthNode.getChildByName(\"open_mouth\");\n        node3.active = false;\n    },\n\n\n\n    _stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n\n    _playFurweeAnim(anim) {\n        console.log(\"playAnim\", anim);\n        this._cancelAnimHandler();\n\n        this.headAnim.play(anim + \"_head\");\n        this.bodyAnim.play(anim + \"_body\");\n\n        if (anim == \"laugh\") {\n            if (!this._heart) {\n                this._heart = cc.instantiate(this.heartPrefab);\n                this._heart.y = this.tummy.y;\n                this.node.addChild(this._heart);\n\n                \n            }\n            else {\n                this._heart.getComponent(cc.Animation).play();\n            }\n\n            if(! UIManager.instance.game.music.shouldbeMuted()){\n                cc.audioEngine.play(this.laughSound);\n\n            }\n        }\n    },\n\n    setEmotion(state) {\n        console.log(\"setemotion\", state);\n        this.emotion = state;\n    },\n\n    isReadyToTalk() {\n        return !this.state.startsWith(\"intro\");\n    },\n\n    _onTummyHandler() {\n        if(!this.isAnimLaughLoaded){\n            return;\n        }\n        if (this.state == \"idle\") {\n            this.state = \"laugh\";\n            this._playFurweeAnim(\"laugh\");\n            this._setAnimFinishHandler();\n        }\n    },\n\n\n    ///pet resources loading\n    _initPetResourceLoading(){\n        this._initLaugh();\n    },\n\n    _initLaugh(){\n        cc.loader.loadRes('pet_resources_laugh', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n\n            this.isAnimLaughLoaded = true;\n            this._initIdleWait();\n        }.bind(this));\n    },\n\n    _initIdleWait(){\n        cc.loader.loadRes('pet_resources_idlewait', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n\n            this.isAnimIdleWaitLoaded = true;\n            this.resetIdle();\n            this._initTalk();\n        }.bind(this));\n    },\n\n    _initTalk(){\n        cc.loader.loadRes('pet_resources_talk', function (err, prefab) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            this._addAnimClips(prefab.data);\n            this._randTalkAnims = this._randTalkAnims.concat([\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"]);\n            console.log(this._randTalkAnims);\n        }.bind(this));\n    },\n\n    _addAnimClips(node){\n        let bAnim = node.getChildByName(\"body\").getComponent(cc.Animation);\n        let hAnim = node.getChildByName(\"head\").getComponent(cc.Animation);\n        \n        for(let i = 0; i < bAnim._clips.length; i++){\n            this.bodyAnim.addClip( bAnim._clips[i],  bAnim._clips[i].name);\n        }\n\n        for(let i = 0; i < hAnim._clips.length; i++){\n            this.headAnim.addClip( hAnim._clips[i],  hAnim._clips[i].name);\n        }\n    }\n})","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\nconst { Furwee } = require(\"Furwee\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n        languagePanel: cc.Node\n\n    },\n    \n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n    },\n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        UIBase.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(UIBase.useWebRecognition){\n            UIBase.startWebRecognition();\n        }\n        else{\n            UIBase.startAPIRecognition();\n        }\n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(UIBase.useWebRecognition){\n           UIBase.stopWebRecognition();\n        }\n        else{\n            UIBase.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    toggleLanguagePanel(){\n        this.languagePanel.active = !this.languagePanel.active;\n        if( this.languagePanel.active){\n            UIManager.instance.languagePanel = this.languagePanel;\n            console.log(\"toggle\",  UIManager.instance.languagePanel);\n        }\n        \n    },\n\n    hideLanguagePanel(){\n        this.languagePanel.active = false;\n        UIManager.instance.languagePanel = null;\n    },\n\n    statics: {\n        ui:null,\n        useWebRecognition:false,\n        recognition:null,\n        textRecognition:\"\",\n\n         //api\n         stream: null,\n         recorder: null,\n         \n         gumStream : null,\n         //stream from getUserMedia() \n         rec : null,\n         //Recorder.js object \n         input : null,\n         audioContext:null,\n\n        initRecognition(uibase){\n            UIManager.uiBase = uibase;\n\n            window.SpeechRecognition = window.SpeechRecognition\n            || window.webkitSpeechRecognition;\n\n            UIBase.useWebRecognition = SpeechRecognition != undefined;\n            UIManager.instance.debugNode.string += \"useWebRecognition:\" +  UIBase.useWebRecognition + \"\\n\";\n\n            UIBase.textRecognition = \"\";\n        },\n\n\n        startWebRecognition(){\n            let finalString = \"\";\n            UIBase.recognition = new SpeechRecognition();\n            UIBase.recognition.interimResults = true;\n            UIBase.recognition.continuous = true;\n            UIBase.recognition.lang = Furwee.LANG ;\n        \n            UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n           \n            UIBase.recognition.onresult = function (event) {\n\n                console.log(event);\n                UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n                let interString = \"\";\n                let autoEnd = false;\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\n                    // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n                    if (event.results[i].isFinal) {\n                        finalString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString;\n                        autoEnd = true;\n                    \n                    }\n                    else{\n                        interString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString + interString;\n                    \n                    }\n                }\n                //////////\n                UIManager.uiBase.text.string = UIBase.textRecognition;\n\n                if (UIManager.uiBase.text.enabled) {\n                    UIManager.uiBase.updateUIAfterRecord();\n                }\n                UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n\n                if(autoEnd){\n                    UIManager.uiBase.stopRecord();\n                    if(UIManager.uiBase.text.string.length != 0){\n                        UIManager.instance.game.sendHandler()\n                    }\n                }\n            };\n\n            UIBase.recognition.onerror = function(event) {\n\n                UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n                if(event.error == \"network\"){\n                     UIBase.useWebRecognition = false;\n                }\n            }\n\n            UIBase.recognition.start();\n            UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n        },\n\n        stopWebRecognition(){\n            UIBase.recognition.stop();\n        },\n\n        \n        //start api recognition\n        startAPIRecognition(){\n            \n            var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n            let constraints  =  {\n                audio: true,\n                video: false\n            } ;\n\n            navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n                UIBase.audioContext = new AudioContext();\n\n                console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n                /* assign to gumStream for later use */\n                UIBase.gumStream = stream;\n                /* use the stream */\n                UIBase.input = UIBase.audioContext.createMediaStreamSource(stream);\n                /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n                UIBase.rec = new Recorder(UIBase.input, {\n                    numChannels: 1\n                }) \n                //start the recording process \n                UIBase.rec.record()\n                console.log(\"Recording started\");\n            }).catch(function(err) {\n                \n            });\n        },\n\n        stopAPIRecognition(){\n\n            UIBase.rec.stop(); //stop microphone access \n            UIBase.gumStream.getAudioTracks()[0].stop();\n            //create the wav blob and pass it on to createDownloadLink \n\n            UIBase.rec.exportWAV(function(blob) {\n\n                let xhr = new XMLHttpRequest();\n                let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200) {\n                            let json = JSON.parse(xhr.responseText);\n                            if(json.text != null){\n                                /////////////\n                                UIManager.uiBase.text.string = json.text;\n                                UIManager.uiBase.updateUIAfterRecord();\n                            }\n                        }\n                    }\n                }\n                //let params = JSON.stringify({ \"audio\": blob});\n                xhr.open('POST', requestURL, true);\n\n                //URL = window.URL || window.webkitURL;\n                \n                var fd=new FormData();\n                fd.append(\"audio\",blob);\n\n                xhr.send(fd);\n            });\n\n        \n        },\n\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n\n        languagePanel:null\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 89;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.5556;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.vNOde.getComponent('UIBase').languagePanel){\n            this.vNOde.getComponent('UIBase').languagePanel.active = true;\n            this.vNOde.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.vNOde.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 24;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.hNode.getComponent('UIBase').languagePanel){\n            this.hNode.getComponent('UIBase').languagePanel.active = true;\n            this.hNode.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.hNode.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n        return;\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        window.location.href = Furwee.LOGOUT_URL; \n    },\n\n    home(){\n        window.location.href = Furwee.HOME_URL; \n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n\n        \n    }\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}\n\ncc.EditBox.prototype._showLabels = function(){\n        this._isLabelVisible = true;\n        this._updateLabels();\n}","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}