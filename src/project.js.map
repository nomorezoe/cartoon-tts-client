{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","MusicToggle","LayerCamerasMove","Pet","audioID","historyObjects","pet","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","URL","URL_SUFFIX","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","start","game","isLocalHost","window","location","href","indexOf","console","log","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","play","audioOffset","updateMouth","playIntro","setFinishCallback","startIdleMouth","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","reply","push","length","message","info","soundloadedHandler","arguments","undefined","lip_sync_animation","err","res","shouldbeMuted","setVolume","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","response","setEmotion","emotion","params2","update","dt","time","getCurrentTime","textContent","updateSendButton","i","children","balloon","instantiate","addChild","blockClickHandler","initialize","errorClickHandler","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","EventType","MOUSE_ENTER","showTop","TOUCH_END","hideTop","onDestroy","off","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","splice","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","evt","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","_this","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","animRec","isIdle","onload","_setIdleAnimWhenFinishHandler","_animComplete","_stopIdleMouth","getChildByName","_clearMouth","idle","floor","random","_i","state","emit","microButton","recordButton","startRecord","enabled","initRecognition","useWebRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","ui","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","debugNode","finalString","interimResults","continuous","lang","onresult","event","interString","resultIndex","results","isFinal","transcript","onerror","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","logout","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nlet Pet = require(\"Pet\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n       \n        historyObjects: [],\n\n        pet:Pet,\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        initialMsgJSON: null,\n\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n        \n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n\n        if (true){//window.location.href.indexOf(\"furwee\") != -1) {\n            this.URL = \"https://furwee.ai/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL =  \"https://furwee.ai/logout\";\n            Furwee.HOME_URL = \"https://furwee.ai/home\";\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n        \n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n        \n        return;\n        \n        */\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.pet.playIntro();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.pet.startIdleMouth();\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.pet.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.setEnableTextInput(true);\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.pet.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            if(this.audioID && this.music.shouldbeMuted()){\n                cc.audioEngine.setVolume(this.audioID, 0);\n            }\n            this.audioOffset = 0;\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.pet.startIdleMouth();\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                    let response =  JSON.parse(xhr2.responseText);\n                    that.pet.setEmotion(response.emotion);\n                    \n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n        this.pet.updateMouth(id);\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n\n       // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n    },\n   \n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = completedCount / totalCount;\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","\n\nlet Pet = cc.Class({\n    extends: cc.Component,\n\n\n    properties:{\n        headAnim: cc.Animation,\n        bodyAnim: cc.Animation,\n        mouthNode: cc.Node,\n        idleMouthTimeout: -1,\n        animRec:null,\n        isIdle: true,\n        emotion:\"neutral\"\n    },\n\n\n    onload(){\n\n    },\n\n    play(){\n        this.headAnim.play(\"intro_head\");\n        this.bodyAnim.play(\"intro_body\");\n        this.animRec = \"intro\";\n    },\n\n\n    playIntro(){\n        this.animRec = \"happywave\";\n        this.bodyAnim.play(\"happywave_body\");\n        this.headAnim.play(\"happywave_head\");\n        this._setIdleAnimWhenFinishHandler();\n    },\n\n    _animComplete(){\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n\n        console.log('_animComplete');\n\n        this.bodyAnim.play(\"normalidle_body\");\n        this.headAnim.play(\"normalidle_head\");\n        this.animRec = \"idle\";\n    },\n\n    updateMouth(id){\n        this._stopIdleMouth();\n\n        if( this.isIdle){\n            this.isIdle = false;\n            this.animRec = \"speak\";\n            this.bodyAnim.play(\"talking_l_a_body\");\n            this.headAnim.play(\"talking_l_a_head\");\n            console.log(\"play taling\");\n\n           this._setIdleAnimWhenFinishHandler();\n        }\n        \n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this._clearMouth();\n            node.active = true;\n        }\n    },\n\n    startIdleMouth() {\n        console.log(\"startIdleMouth\");\n        this.isIdle = true;\n        this._stopIdleMouth();\n\n        this._clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        this.idleMouthTimeout = setTimeout(this.startIdleMouth.bind(this), 3000 * Math.random() + 3000);\n\n        if(Math.random()>0.5){\n            switch(this.emotion){\n                case \"negative\":\n                    this.bodyAnim.play(\"sadidle_body\");\n                    this.headAnim.play(\"sadidle_head\");\n                    this._setIdleAnimWhenFinishHandler();\n                    break;\n                case \"positive\":\n                    this.bodyAnim.play(\"happyidle_body\");\n                    this.headAnim.play(\"happyidle_head\");\n                    this._setIdleAnimWhenFinishHandler();\n                    break;\n                default:\n                    this.bodyAnim.play(\"normalidle_body\");\n                    this.headAnim.play(\"normalidle_head\");\n            }\n        }\n        else{\n            this.bodyAnim.play(\"normalidle_body\");\n            this.headAnim.play(\"normalidle_head\");\n        }\n       \n    },\n\n    _setIdleAnimWhenFinishHandler(){\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\n    },\n\n    _clearMouth(){\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    \n\n    _stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    setEmotion(state){\n        this.emotion = state;\n    }\n\n})","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n    },\n    \n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        UIBase.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(UIBase.useWebRecognition){\n            UIBase.startWebRecognition();\n        }\n        else{\n            UIBase.startAPIRecognition();\n        }\n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(UIBase.useWebRecognition){\n           UIBase.stopWebRecognition();\n        }\n        else{\n            UIBase.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    statics: {\n        ui:null,\n        useWebRecognition:false,\n        recognition:null,\n        textRecognition:\"\",\n\n         //api\n         stream: null,\n         recorder: null,\n         \n         gumStream : null,\n         //stream from getUserMedia() \n         rec : null,\n         //Recorder.js object \n         input : null,\n         audioContext:null,\n\n        initRecognition(uibase){\n            UIManager.uiBase = uibase;\n\n            window.SpeechRecognition = window.SpeechRecognition\n            || window.webkitSpeechRecognition;\n\n            UIBase.useWebRecognition = SpeechRecognition != undefined;\n            UIManager.instance.debugNode.string += \"useWebRecognition:\" +  UIBase.useWebRecognition + \"\\n\";\n\n            UIBase.textRecognition = \"\";\n        },\n\n\n        startWebRecognition(){\n            let finalString = \"\";\n            UIBase.recognition = new SpeechRecognition();\n            UIBase.recognition.interimResults = true;\n            UIBase.recognition.continuous = true;\n            UIBase.recognition.lang = \"en-US\";\n        \n            UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n            UIBase.recognition.onresult = function (event) {\n\n                console.log(event);\n                UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n                let interString = \"\";\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\n                    // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n                    if (event.results[i].isFinal) {\n                        finalString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString;\n                    \n                    }\n                    else{\n                        interString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString + interString;\n                    \n                    }\n                }\n                //////////\n                UIManager.uiBase.text.string = UIBase.textRecognition;\n\n                if (UIManager.uiBase.text.enabled) {\n                    UIManager.uiBase.updateUIAfterRecord();\n                }\n                UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n            };\n\n            UIBase.recognition.onerror = function(event) {\n\n                UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n            }\n\n            UIBase.recognition.start();\n            UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n        },\n\n        stopWebRecognition(){\n            UIBase.recognition.stop();\n        },\n\n        \n        //start api recognition\n        startAPIRecognition(){\n            \n            var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n            let constraints  =  {\n                audio: true,\n                video: false\n            } ;\n\n            navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n                UIBase.audioContext = new AudioContext();\n\n                console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n                /* assign to gumStream for later use */\n                UIBase.gumStream = stream;\n                /* use the stream */\n                UIBase.input = UIBase.audioContext.createMediaStreamSource(stream);\n                /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n                UIBase.rec = new Recorder(UIBase.input, {\n                    numChannels: 1\n                }) \n                //start the recording process \n                UIBase.rec.record()\n                console.log(\"Recording started\");\n            }).catch(function(err) {\n                \n            });\n        },\n\n        stopAPIRecognition(){\n\n            UIBase.rec.stop(); //stop microphone access \n            UIBase.gumStream.getAudioTracks()[0].stop();\n            //create the wav blob and pass it on to createDownloadLink \n\n            UIBase.rec.exportWAV(function(blob) {\n\n                let xhr = new XMLHttpRequest();\n                let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200) {\n                            let json = JSON.parse(xhr.responseText);\n                            if(json.text != null){\n                                /////////////\n                                UIManager.uiBase.text.string = json.text;\n                                UIManager.uiBase.updateUIAfterRecord();\n                            }\n                        }\n                    }\n                }\n                //let params = JSON.stringify({ \"audio\": blob});\n                xhr.open('POST', requestURL, true);\n\n                //URL = window.URL || window.webkitURL;\n                \n                var fd=new FormData();\n                fd.append(\"audio\",blob);\n\n                xhr.send(fd);\n            });\n\n        \n        }\n\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n        return;\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST',  Furwee.LOGOUT_URL , true);\n        xhr.send();\n    },\n\n    home(){\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST',  Furwee.HOME_URL , true);\n        xhr.send();\n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n\n        \n    }\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}