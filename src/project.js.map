{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LanguagePanel.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","DEBUG","MusicToggle","LayerCamerasMove","Pet","audioID","historyObjects","pet","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","URL","URL_SUFFIX","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","nextTalks","start","game","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","console","log","socket","id","play","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","reply","push","length","message","info","balloonText","balloon","addBallon","err","res","_startPlayTalking","lip_sync_animation","_startTalk","audioEngine","shouldbeMuted","setVolume","audioOffset","audioInfo","updateMouth","setFinishCallback","_completeTalk","startIdle","nextTalk","splice","balloonComp","audioRes","_this","isReadyToTalk","setTimeout","didReturnHandler","sendHandler","focus","sendText","trim","resetIdle","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","response","setEmotion","emotion","params2","viseme_id","update","dt","time","getCurrentTime","audio_offset_ms","textContent","updateSendButton","i","children","instantiate","addChild","blockClickHandler","initialize","playWelcome","errorClickHandler","window","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","_impl","_elem","autocomplete","EventType","MOUSE_ENTER","showTop","onDestroy","off","TOUCH_END","hideTop","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","indexOf","toggles","Toggle","toggleIndex","onToggleLanuge","evt","param","parseInt","setToggleIndex","check","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","loadingText","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","randomSpeak","randIndx","floor","random","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","state","tummy","heartPrefab","_heart","laughSound","_onTummyHandler","_playFurweeAnim","_setAnimFinishHandler","playIntro","_stopIdleMouth","startsWith","randArray","act","getChildByName","_clearMouth","_setIdleMouth","idleTimer","_this2","idle","_cancelAnimHandler","_animComplete","_setAnimLastFrameHandler","_i","emit","microButton","recordButton","languagePanel","startRecord","enabled","initRecognition","useWebRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","toggleLanguagePanel","hideLanguagePanel","ui","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","undefined","debugNode","finalString","interimResults","continuous","lang","onresult","event","interString","autoEnd","resultIndex","results","isFinal","transcript","onerror","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","logout","location","href","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary","_showLabels","_isLabelVisible","_updateLabels"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\nlet UIManager = require(\"UIManager\");\n\nlet Balloon = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n        stepCount:0\n    },\n\n    statics:{\n        COLOR_1 : new cc.Color(131,88, 52),\n        COLOR_2 : new cc.Color(255, 255, 255),\n        index:0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        this.index = Balloon.index;\n        Balloon.index ++;\n        // this.node.on(\"mouseOver\")\n    },\n\n    // update (dt) {},\n\n    lateUpdate() {\n        if (this.updateTextHeight >0) {\n            this.updateTextHeight --;\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n\n            if(this.updateTextHeight == 4){\n                this.updateTextHeight = 0;\n                 //scroll\n                let content = this.node.parent;\n                \n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\n                scroll.scrollToBottom(0);\n                this.node.opacity = 255;\n\n                UIManager.instance.onScroll(null);\n                }\n           \n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = Balloon.COLOR_1;\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = 6;\n\n        if(!Helper.isPcView){\n            this.mobileView(Helper.width);\n        }\n\n    },\n\n    step() {\n        this.stepCount ++;\n        /*if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n       // this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n           // this.node.parent.removeChild(this.node);\n        }\n    },\n\n    mobileView(w){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 24;\n        this.text.string = this.text.string;\n\n        this.node.x = 0;\n\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n    },\n\n    pcView(){\n        this.text.fontSize = 20;\n        this.text.lineHeight = 28;\n        this.text.string = this.text.string;\n\n       /* if (this.isFurwee) {\n            this.node.x = -this.stepCount * 20;\n        }\n        else {\n            this.node.x = this.stepCount * 20;\n        }*/\n\n        this.pinkBG.width = 427;//230;\n        this.whiteBG.width = 427;//230;\n        this.text.node.width = 343;\n\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\n\n       /* if(cc.sys.isBrowser){\n            this.text.fontSize = 20;\n            this.text.lineHeight = 22;\n        }*/\n    },\n\n\n    updateOpacity(){\n        let content = this.node.parent;\n        let y = this.node.y = content.y;\n        if( y > 0 && y< 500){\n            this.node.active = true;\n        }\n    }\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let Furwee = {};\n\nFurwee.LOGOUT_URL = null;\nFurwee.HOME_URL = null;\n\nFurwee.DEBUG = true;\n\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\nlet UIManager = require(\"UIManager\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nconst { Furwee } = require(\"Furwee\");\nlet Pet = require(\"Pet\");\n\nlet Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audioID: -1,\n\n        historyObjects: [],\n\n        pet: Pet,\n\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        initialMsgJSON: null,\n\n        furweeIntialized: false,\n\n        URL: \"http://40.121.137.102\",\n        URL_SUFFIX: \"\",\n\n\n        enableTextInput: false,\n\n        uiManager: UIManager,\n        cameraMove: LayerCamerasMove,\n        music: MusicToggle,\n        //ui related\n        editBox: cc.EditBox,\n        sendButton: cc.Node,\n\n\n        nextTalks: []\n\n\n    },\n\n    start() {\n    },\n\n    onLoad() {\n\n\n        this.uiManager.game = this;\n        this.cameraMove.game = this;\n        this.music.game = this;\n\n\n\n        if (!Furwee.DEBUG) {\n            this.URL = \"/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL = \"/logout\";\n            Furwee.HOME_URL = \"/\";\n        }\n        else {\n            this.URL = \"https://furwee.ai/api\";\n            this.URL_SUFFIX = \"\";\n            Furwee.LOGOUT_URL = \"https://furwee.ai/logout\";\n            Furwee.HOME_URL = \"https://furwee.ai/home\";\n        }\n\n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee() {\n        this.pet.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.uiManager.isBlockActive()) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if (this.furweeIntialized) {\n            return false;\n        }\n\n        this.furweeIntialized = true;\n        //this.pet.playWelcome();\n        this.setEnableTextInput(true);\n        //this.pet.playIntro();\n        this.onTTSCompleted(this.initialMsgJSON, this.initialMsgJSON.reply);\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, balloonText) {\n        if (!info) {\n            return;\n        }\n\n       \n\n        let remoteUrl = info.audio_file_link;\n\n        let balloon = this.addBallon(balloonText, true).getComponent(\"Ballon\");\n        if(this.audioID != -1) {\n            balloon.whiteBG.opacity = 128;\n            balloon.text.node.opacity = 128;\n        }\n                \n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this._startPlayTalking(res, balloon, info.lip_sync_animation);\n        }.bind(this));\n    },\n\n    _startTalk(res, info) {\n        this.audioID = cc.audioEngine.play(res);\n        if (this.audioID && this.music.shouldbeMuted()) {\n            cc.audioEngine.setVolume(this.audioID, 0);\n        }\n        this.audioOffset = 0;\n        this.audioInfo= info;\n        this.updateMouth();\n\n\n        cc.audioEngine.setFinishCallback(this.audioID, this._completeTalk.bind(this));\n    },\n\n    _completeTalk() {\n        this.audioID = -1;\n        this.pet.startIdle();\n\n        if (this.nextTalks.length) {\n            let nextTalk = this.nextTalks.splice(0, 1)[0];\n            nextTalk.balloonComp.whiteBG.opacity = 255;\n            nextTalk.balloonComp.text.node.opacity = 255;\n            this._startTalk(nextTalk.audioRes, nextTalk.info);\n        }\n    },\n\n    _startPlayTalking(res, balloon, audioInfo) {\n        if (this.pet.isReadyToTalk()) {\n            if (this.audioID != -1) {\n                this.nextTalks.push({ balloonComp: balloon, audioRes: res, info: audioInfo });\n            }\n            else {\n                this._startTalk(res, audioInfo);\n            }\n        }\n        else {\n            //this.pet.playIntro();\n            setTimeout(() => {\n                this._startPlayTalking(res, balloon, audioInfo);\n            }, 16);\n        }\n\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if (!this.enableTextInput) {\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        this.pet.resetIdle();\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n    */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        if (!cc.sys.isMobile) {\n            this.editBox.focus();\n        } else {\n            this.editBox.blur();\n        }\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json, json.reply);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                    let response = JSON.parse(xhr2.responseText);\n                    that.pet.setEmotion(response.emotion);\n\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n        this.pet.updateMouth(id);\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0;\n        this.uiManager.updateSendButton(this.sendButton.active);\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        balloon.opacity = 0;\n        this.balloonNode.addChild(balloon);\n        return balloon;\n\n        // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\n    },\n\n    blockClickHandler() {\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        this.pet.playWelcome();\n    },\n\n    errorClickHandler() {\n        if (window.captureError) {\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool) {\n        this.enableTextInput = bool;\n    }\n});\n","let UIBase = require(\"UIBase\");\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\nlet HUI = cc.Class({\n    extends: UIBase,\n    properties: {\n        mushroom:cc.Node,\n\n        showTopButton: cc.Node,\n        topUI: cc.Node,\n        _isShowTop: false,\n\n\n    \n    },\n\n    statics: {\n        MAX_WIDTH: 2200\n    },\n\n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n       \n    },\n\n    onDestroy(){\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n\n    adjustMushroom(w){\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\n        this.mushroom.x = Math.max(837, 837 + addWidth);\n\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\n\n    },\n\n    hideTop(){\n        if(!this._isShowTop){\n            return;\n        }\n        this._isShowTop = false;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    },\n\n    showTop(){\n        if(this._isShowTop){\n            return;\n        }\n        this._isShowTop = true;\n        this.topUI.stopAllActions();\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\n    }\n});","let Helper = {};\n\nHelper.callBacks = [];\nHelper.FIT_HEIGHT = 1080;\nHelper.H_MIN_WIDTH = 900;\nHelper.MAX_WIDTH = 2200;\n\nHelper.width = 1920;\nHelper.isPcView = true;\n\n\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n    Helper.handleResize();\n}\n\nHelper.handleResize = function(){\n\n    var frameSize = cc.view.getFrameSize();\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\n        \n   \n\n    let isPcView = true;\n    if (w < Helper.H_MIN_WIDTH) {\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = false;\n    }\n    else{\n        w = Math.min(Helper.MAX_WIDTH, w);\n\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\n        isPcView = true;\n    }\n\n    Helper.width = w;\n    Helper.isPcView = isPcView;\n\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i](w, isPcView);\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\n\nexport {Helper};","\nlet languagePanel = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        toggles:[cc.Toggle],\n        toggleIndex: 0\n    },\n\n    onToggleLanuge(evt, param){\n        console.log(param);\n        this.toggleIndex = parseInt(param);\n    },\n\n\n    setToggleIndex(index){\n        this.toggleIndex = index;\n        this.toggles[this.toggleIndex].check();\n    }\n})","let LayerCamerasMove = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        sceneNodes: [cc.Node],\n\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n\n        game: null\n    },\n\n    statics:{\n        infos:null\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n\n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n\n        LayerCamerasMove.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\n            LayerCamerasMove.infos.push(info);\n        }\n\n        if (!cc.sys.isMobile) {\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        }\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    initialize: function () {\n        console.log(window.DeviceMotionEvent);\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n\n            \n            window.DeviceMotionEvent.requestPermission();\n        }\n\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n        console.log(\"touch\",evt);\n    },\n\n    onDeviceMotion: function (evt) {\n    },\n\n    onDeviceorientation: function (evt) {\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\n\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n            // let currentX = this.sceneNodes[i].x;\n\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\n\n            //targetY + \n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\n\n\n            //this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].x = targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n        }\n    },\n\n\n    onMouseMove: function (evt) {\n        if (!this.game.furweeIntialized) {\n            return;\n        }\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let screenWidth_2 = this.screenWidth / 2;\n            let screenHeight_2 = this.screenHeight / 2;\n\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\n\n\n\n\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n            // console.log(\"target\", targetX, targetY);\n            //let currentX = this.sceneNodes[i].x;\n            //let currentY = this.sceneNodes[i].y;\n\n            //console.log('time', timeX, timeY);\n\n            //targetY + \n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\n\n            // this.sceneNodes[i].stopAllActions();\n            // this.sceneNodes[i].runAction(moveTo);\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\n\n            if (i == 1) {\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\n            }\n            else {\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\n            }\n\n\n        }\n\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar: cc.ProgressBar,\n        loadingText: cc.Label\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        if (cc.sys.isMobile) {\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n        }\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\n\n        let randomSpeak = [\"Furwee can text fluently in four languages-English, Spanish, German and Italian!\",\n                        \"Furwee can understand Tagalog, the native language spoken in the Philippines.\"]\n        let randIndx = Math.floor(Math.random() * randomSpeak.length);\n        this.loadingText.string = randomSpeak[randIndx];\n    },\n\n    onProgress(completedCount, totalCount) {\n        this.progressBar.progress = Math.max(0.05,completedCount / totalCount);\n    },\n\n    onComplete(error) {\n        if (!error) {\n            cc.director.loadScene(\"game_v1\");\n        }\n\n    }\n\n\n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: -1,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider,\n        bgProgress: cc.ProgressBar,\n        offTimer: -1,\n\n\n        appHidden :false,\n        micActive : false,\n\n        game: null\n\n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\n\n\n\n        /// visibility\n        this.hidden = \"\";\n        var visibilityChangeParam = \"\";\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n            this.hidden = \"hidden\";\n            visibilityChangeParam = \"visibilitychange\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            this.hidden = \"msHidden\";\n            visibilityChangeParam = \"msvisibilitychange\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            this.hidden = \"webkitHidden\";\n            visibilityChangeParam = \"webkitvisibilitychange\";\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\n        }\n\n\n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        clearTimeout(this.offTimer);\n\n        this.offTimer = -1;\n\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId >=0) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (this.audioId <0) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n\n        if (this.bgVolumn == 0) {\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\n        }\n    },\n\n    sliderAdjust(value) {\n        clearTimeout(this.offTimer);\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n\n    },\n\n    volumnCancelled() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n\n            this.offTimer = setTimeout(() => {\n                this.checkVolumnToggle();\n            }, 1000);\n        }\n    },\n\n    checkVolumnToggle() {\n        clearTimeout(this.offTimer);\n        if (this.bgVolumn == 0) {\n            this.toggleOff();\n        }\n    },\n\n\n    onVisibilityChange: function () {\n        let appHidden = document[this.hidden];\n\n        if (cc.sys.isNative) return;\n\n       \n\n        if (appHidden) {\n            this.appHidden = true;\n            this.muteAll(true);\n        }\n        else {\n            this.appHidden = false;\n            this.muteAll(false);\n        }\n    },\n\n    onMicChange: function(active){\n        this.micActive = active;\n\n        if(active){\n            this.muteAll(true);\n        }\n        else{\n            this.muteAll(false);\n        }\n    },\n\n    muteAll: function (muted) {\n\n        muted = muted || this.micActive || this.appHidden;\n\n        if (this.game.audioID >= 0) {\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\n        }\n\n        if (this.audioId >=0) {\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\n        }\n    },\n\n    shouldbeMuted: function(){\n        return this.micActive || this.appHidden;\n    }\n\n\n});","let UIManager = require(\"UIManager\");\n\nlet Pet = cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        headAnim: cc.Animation,\n        bodyAnim: cc.Animation,\n        mouthNode: cc.Node,\n        idleMouthTimeout: -1,\n        state: null,\n        emotion: \"neutral\",\n        tummy: cc.Node,\n        heartPrefab: cc.Prefab,\n\n        _heart: cc.Node,\n\n        laughSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n    },\n\n\n    onLoad() {\n        this.tummy.on(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.on(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    onDestroy() {\n        this.tummy.off(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\n        this.tummy.off(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\n    },\n\n    play() {\n        this._playFurweeAnim(\"happyidle\");\n        this.state = \"intro_idle\";\n    },\n\n    playWelcome() {\n        this._playFurweeAnim(\"intro\");\n        this._setAnimFinishHandler();\n        this.state = \"intro_jump\";\n    },\n\n    playIntro() {\n        /*\n        this._playFurweeAnim(\"happywave\");\n        this._setAnimFinishHandler();\n        this.state = \"wave_1\";\n        */\n    },\n\n    updateMouth(id) {\n        this._stopIdleMouth();\n        if (this.state.startsWith(\"intro\") || this.state.startsWith(\"wave\")) {\n            // skip\n            if(this.state == \"wave_waiting\"){\n                this._playFurweeAnim(\"happywave\");\n                this._setAnimFinishHandler();\n                this.state = \"wave_1\";\n            }\n        }\n        else if (this.state != \"speak\") {\n            this.state = \"speak\";\n            switch (this.emotion) {\n                case \"positive\":\n                    this._playFurweeAnim(\"tallking_2_hands\");\n                    break;\n                case \"negative\":\n                    this._playFurweeAnim(\"sadidle\");\n                    break;\n                default:\n                    let randArray = [\"talking_l_a\",\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"];\n                    let act = Math.floor(Math.random() * randArray.length);\n                    this._playFurweeAnim(randArray[act]);\n            }\n        }\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this._clearMouth();\n            node.active = true;\n        }\n    },\n\n    startIdle() {\n        this.state = \"idle\";\n        this._stopIdleMouth();\n\n        this._clearMouth();\n        //\n        this._setIdleMouth();\n\n\n        switch (this.emotion) {\n            case \"negative\":\n                this._playFurweeAnim(\"sadidle\");\n                break;\n            case \"positive\":\n                this._playFurweeAnim(\"happyidle\");\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n        }\n    },\n\n    resetIdle(){\n        if(this.idleTimer){\n            clearTimeout(this.idleTimer);\n        }\n        this.idleTimer = setTimeout(() => {\n            this._playFurweeAnim(\"listenwaitidle\");\n        }, 30000);\n    },\n\n    _setIdleMouth() {\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n        this.idleMouthTimeout = setTimeout(() => {\n            this._setIdleMouth();\n        }, 2000);\n    },\n\n    _cancelAnimHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n    },\n\n    _setAnimLastFrameHandler(){\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"lastframe\", this._animComplete.bind(this));\n    },\n\n    _setAnimFinishHandler() {\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\n    },\n\n    _animComplete() {\n        console.log('_animComplete');\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\n        switch (this.state) {\n            case \"intro_jump\":\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"wave_waiting\";\n                break;\n            case \"wave_1\":\n                this._playFurweeAnim(\"talking_r_a\");\n                this.state = \"speak\";\n                this.resetIdle();\n                break;\n            default:\n                this._playFurweeAnim(\"normalidle\");\n                this.state = \"idle\";\n                break;\n        }\n       \n    },\n\n    _clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n\n        let node3 = this.mouthNode.getChildByName(\"open_mouth\");\n        node3.active = false;\n    },\n\n\n\n    _stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n\n    _playFurweeAnim(anim) {\n        console.log(\"playAnim\", anim);\n        this._cancelAnimHandler();\n\n        this.headAnim.play(anim + \"_head\");\n        this.bodyAnim.play(anim + \"_body\");\n\n        if (anim == \"laugh\") {\n            if (!this._heart) {\n                this._heart = cc.instantiate(this.heartPrefab);\n                this._heart.y = this.tummy.y;\n                this.node.addChild(this._heart);\n\n                \n            }\n            else {\n                this._heart.getComponent(cc.Animation).play();\n            }\n\n            if(! UIManager.instance.game.music.shouldbeMuted()){\n                cc.audioEngine.play(this.laughSound);\n\n            }\n        }\n    },\n\n    setEmotion(state) {\n        console.log(\"setemotion\", state);\n        this.emotion = state;\n    },\n\n    isReadyToTalk() {\n        return !this.state.startsWith(\"intro\");\n    },\n\n    _onTummyHandler() {\n        if (this.state == \"idle\") {\n            this.state = \"laugh\";\n            this._playFurweeAnim(\"laugh\");\n            this._setAnimFinishHandler();\n        }\n    }\n})","const {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n        this.onResize(Helper.width, Helper.isPcView);\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function (w, isPcView) {\n        if (!this.node) return;\n\n        if(!isPcView){\n            this.node.emit(\"mobileView\", w);\n        }\n        else{ \n            this.node.emit(\"pcView\", w);\n        }\n    }\n});\n","let UIManager = require(\"UIManager\");\n\nlet UIBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sendButton:cc.Node,\n        text: cc.EditBox,\n        ///recorder\n\n        microButton: cc.Node,\n        recordButton: cc.Node,\n\n        languagePanel: cc.Node\n\n    },\n    \n    onLoad(){\n        this.text._impl._elem.autocomplete = \"off\";\n    },\n\n    //mobile\n    startRecord() {\n        this.microButton.active = false;\n        this.recordButton.active = true;\n\n        this.text.enabled = false;\n\n        UIBase.initRecognition(this);\n\n        UIManager.instance.game.music.onMicChange(true);\n        \n        if(UIBase.useWebRecognition){\n            UIBase.startWebRecognition();\n        }\n        else{\n            UIBase.startAPIRecognition();\n        }\n    },\n\n    stopRecord() {\n        this.microButton.active = true;\n        this.recordButton.active = false;\n\n        UIManager.instance.game.music.onMicChange(false);\n\n        if(UIBase.useWebRecognition){\n           UIBase.stopWebRecognition();\n        }\n        else{\n            UIBase.stopAPIRecognition();\n        }\n       \n        this.text.enabled = true;\n        this.updateUIAfterRecord();\n    },\n\n    updateUIAfterRecord() {\n        this.sendButton.active = (this.text.string.length != 0);\n        this.updateSendButton(this.sendButton.active);\n    },\n\n    updateSendButton(active) {\n        this.microButton.active = !active;\n    },\n\n    toggleLanguagePanel(){\n        this.languagePanel.active = !this.languagePanel.active;\n        if( this.languagePanel.active){\n            UIManager.instance.languagePanel = this.languagePanel;\n            console.log(\"toggle\",  UIManager.instance.languagePanel);\n        }\n        \n    },\n\n    hideLanguagePanel(){\n        this.languagePanel.active = false;\n        UIManager.instance.languagePanel = null;\n    },\n\n    statics: {\n        ui:null,\n        useWebRecognition:false,\n        recognition:null,\n        textRecognition:\"\",\n\n         //api\n         stream: null,\n         recorder: null,\n         \n         gumStream : null,\n         //stream from getUserMedia() \n         rec : null,\n         //Recorder.js object \n         input : null,\n         audioContext:null,\n\n        initRecognition(uibase){\n            UIManager.uiBase = uibase;\n\n            window.SpeechRecognition = window.SpeechRecognition\n            || window.webkitSpeechRecognition;\n\n            UIBase.useWebRecognition = SpeechRecognition != undefined;\n            UIManager.instance.debugNode.string += \"useWebRecognition:\" +  UIBase.useWebRecognition + \"\\n\";\n\n            UIBase.textRecognition = \"\";\n        },\n\n\n        startWebRecognition(){\n            let finalString = \"\";\n            UIBase.recognition = new SpeechRecognition();\n            UIBase.recognition.interimResults = true;\n            UIBase.recognition.continuous = true;\n            UIBase.recognition.lang = \"en-US\";\n        \n            UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\n           \n            UIBase.recognition.onresult = function (event) {\n\n                console.log(event);\n                UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\n                let interString = \"\";\n                let autoEnd = false;\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\n                    // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\n                    if (event.results[i].isFinal) {\n                        finalString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString;\n                        autoEnd = true;\n                    \n                    }\n                    else{\n                        interString += event.results[i][0].transcript;\n                        UIBase.textRecognition = finalString + interString;\n                    \n                    }\n                }\n                //////////\n                UIManager.uiBase.text.string = UIBase.textRecognition;\n\n                if (UIManager.uiBase.text.enabled) {\n                    UIManager.uiBase.updateUIAfterRecord();\n                }\n                UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\n\n                if(autoEnd){\n                    UIManager.uiBase.stopRecord();\n                    if(UIManager.uiBase.text.string.length != 0){\n                        UIManager.instance.game.sendHandler()\n                    }\n                }\n            };\n\n            UIBase.recognition.onerror = function(event) {\n\n                UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\n                if(event.error == \"network\"){\n                     UIBase.useWebRecognition = false;\n                }\n            }\n\n            UIBase.recognition.start();\n            UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\n        },\n\n        stopWebRecognition(){\n            UIBase.recognition.stop();\n        },\n\n        \n        //start api recognition\n        startAPIRecognition(){\n            \n            var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n            let constraints  =  {\n                audio: true,\n                video: false\n            } ;\n\n            navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n\n                UIBase.audioContext = new AudioContext();\n\n                console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \n                /* assign to gumStream for later use */\n                UIBase.gumStream = stream;\n                /* use the stream */\n                UIBase.input = UIBase.audioContext.createMediaStreamSource(stream);\n                /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n                UIBase.rec = new Recorder(UIBase.input, {\n                    numChannels: 1\n                }) \n                //start the recording process \n                UIBase.rec.record()\n                console.log(\"Recording started\");\n            }).catch(function(err) {\n                \n            });\n        },\n\n        stopAPIRecognition(){\n\n            UIBase.rec.stop(); //stop microphone access \n            UIBase.gumStream.getAudioTracks()[0].stop();\n            //create the wav blob and pass it on to createDownloadLink \n\n            UIBase.rec.exportWAV(function(blob) {\n\n                let xhr = new XMLHttpRequest();\n                let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200) {\n                            let json = JSON.parse(xhr.responseText);\n                            if(json.text != null){\n                                /////////////\n                                UIManager.uiBase.text.string = json.text;\n                                UIManager.uiBase.updateUIAfterRecord();\n                            }\n                        }\n                    }\n                }\n                //let params = JSON.stringify({ \"audio\": blob});\n                xhr.open('POST', requestURL, true);\n\n                //URL = window.URL || window.webkitURL;\n                \n                var fd=new FormData();\n                fd.append(\"audio\",blob);\n\n                xhr.send(fd);\n            });\n\n        \n        },\n\n    }\n});\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\nconst {Furwee} = require(\"Furwee\");\nconst {Helper} = require(\"Helper\");\n\nlet UIManager = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        isHActive: true,\n\n        hNode: cc.Node,\n        vNOde: cc.Node,\n        uiCamera: cc.Camera,\n\n        musicWidget: cc.Widget,\n        musicButton: cc.Node,\n\n        startBlock: cc.Node,\n\n        game: null,\n        cameraMove: LayerCamerasMove,\n        debugNode: cc.Label,\n\n        languagePanel:null\n    },\n\n    statics:{\n        instance :null,\n        uiBase: null\n    },\n\n    onLoad: function(){\n        this.startBlock.active = true;\n\n\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n\n        if (!Helper.isPcView) {\n            this.mobileView(Helper.width);\n\n        }\n        else{\n            this.pcView(Helper.width);\n        }\n\n        //update View\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \n\n       setTimeout(() => {\n        Helper.handleResize();\n       }, 1);\n        UIManager.instance = this;\n    },\n\n\n    mobileView(w){\n       \n        this.isHActive = false;\n        this.hNode.active = false;\n        this.vNOde.active = true;\n\n        this.vNOde.width = w;\n        this.musicWidget.bottom = 89;\n        this.musicWidget.left = -5;\n\n        this.musicButton.scale = 0.5556;\n        this.musicButton.x = 20;\n       \n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n       \n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.vNOde.getComponent('UIBase').languagePanel){\n            this.vNOde.getComponent('UIBase').languagePanel.active = true;\n            this.vNOde.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.vNOde.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.game.microButton){\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\n        }\n    },\n\n    pcView(w){\n       \n        this.isHActive = true;\n        this.hNode.active = true;\n        this.vNOde.active = false;\n        this.hNode.width = w;\n\n        this.musicWidget.bottom = 24;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n        let ws = this.node.getComponentsInChildren(cc.Widget);\n        for(let i in ws){\n            ws[i].updateAlignment();\n        }\n\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\n\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\n\n        if(this.languagePanel && this.languagePanel !=this.hNode.getComponent('UIBase').languagePanel){\n            this.hNode.getComponent('UIBase').languagePanel.active = true;\n            this.hNode.getComponent('UIBase').languagePanel.getComponent('LanguagePanel').setToggleIndex(this.languagePanel.getComponent('LanguagePanel').toggleIndex);\n            this.languagePanel = this.hNode.getComponent('UIBase').languagePanel;\n        }\n\n        if(this.game.microButton){\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\n        }\n\n        if(this.game.recordButton){\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\n        }\n\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\n\n        if( UIManager.uiBase){\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\n        }\n\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\n       \n    },\n\n    closeStartBlock() {\n        this.startBlock.active = false;\n        this.cameraMove.initialize();\n        this.game.blockClickHandler();\n    },\n\n    isBlockActive(){\n       return this.startBlock.active ;\n    },\n\n    updateSendButton(active){\n        if(!this.isHActive){\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\n        }\n        else{\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\n        }\n    },\n\n    toggleDebug: function () {\n        return;\n        this.debugNode.node.active = !this.debugNode.node.acctive;\n    },\n\n    logout() {\n        window.location.href = Furwee.LOGOUT_URL; \n    },\n\n    home(){\n        window.location.href = Furwee.HOME_URL; \n    },\n\n    education(){\n      \n    },\n\n    onScroll(evt){\n       \n        let content = this.game.balloonNode;\n        for(let i = 0; i < content.children.length; i++){\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\n            \n            let top = v.y + content.children[i].height/2;\n            let bot = v.y - content.children[i].height/2;\n          //  console.log(top, bot);\n            if(bot >1080 || top < 540){\n                content.children[i].children[0].active = false;\n               // console.log(\"hide\", i);\n            }\n            else{\n                content.children[i].children[0].active = true;\n\n                bot = Math.max(650, bot);\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\n\n                \n            }\n        }\n\n        \n    }\n});\n\ncc.ScrollView.prototype._calculateBoundary = function() {\n    if (this.content) {\n        //refresh content size\n        let layout = this.content.getComponent(cc.Layout);\n        if(layout && layout.enabledInHierarchy) {\n            layout.updateLayout();\n        }\n        let viewSize = this._view.getContentSize();\n\n        let anchorX = viewSize.width * this._view.anchorX;\n        let anchorY = viewSize.height * this._view.anchorY;\n\n        this._leftBoundary = -anchorX;\n        this._bottomBoundary = -anchorY;\n\n        this._rightBoundary = this._leftBoundary + viewSize.width;\n        this._topBoundary = this._bottomBoundary + viewSize.height;\n\n        //this._moveContentToTopLeft(viewSize);\n    }\n}\n\ncc.EditBox.prototype._showLabels = function(){\n        this._isLabelVisible = true;\n        this._updateLabels();\n}","let UIBase = require(\"UIBase\");\nlet UIManager = require(\"UIManager\");\n\nlet VUI = cc.Class({\n    extends: UIBase,\n\n    properties: {\n      \n       \n    },\n\n    \n\n});"],"file":"project.js"}