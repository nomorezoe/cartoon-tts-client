{"version":3,"sources":["assets/Scripts/game/Ballon.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/tool/Furwee.js","assets/Scripts/game/Game.js","assets/Scripts/ui/HUI.js","assets/Scripts/tool/Helper.js","assets/Scripts/ui/LayerCamerasMove.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/game/Pet.js","assets/Scripts/tool/SwitchWidget.js","assets/Scripts/ui/UIBase.js","assets/Scripts/ui/UIManager.js","assets/Scripts/ui/VUI.js"],"names":["Helper","require","UIManager","Balloon","cc","Class","extends","Component","properties","whiteBG","Node","pinkBG","text","Label","stepCount","statics","COLOR_1","Color","COLOR_2","index","onLoad","this","node","on","mobileView","bind","pcView","lateUpdate","updateTextHeight","height","bg","Math","max","parent","getComponent","ScrollView","scrollToBottom","opacity","instance","onScroll","init","isFurwee","color","active","string","isPcView","width","step","w","fontSize","lineHeight","x","updateOpacity","content","y","minWidth","minHeight","fitHeight","addCallback","onResize","canvas","Canvas","scale","Furwee","LOGOUT_URL","HOME_URL","MusicToggle","LayerCamerasMove","Pet","audioID","historyObjects","pet","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","initialMsgJSON","furweeIntialized","URL","URL_SUFFIX","enableTextInput","uiManager","cameraMove","music","editBox","EditBox","sendButton","start","game","isLocalHost","window","location","href","indexOf","console","log","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","socket","id","play","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","isBlockActive","onTTSCompleted","addBallon","reply","push","length","message","info","soundloadedHandler","arguments","undefined","audioInfo","lip_sync_animation","err","res","_startPlayTalking","_this","isReadyToTalk","audioEngine","shouldbeMuted","setVolume","audioOffset","updateMouth","setFinishCallback","startIdle","playIntro","setTimeout","didReturnHandler","sendHandler","focus","sendText","trim","resetIdle","sys","isMobile","blur","json","params","stringify","history","xhr2","requestURL2","response","setEmotion","emotion","params2","viseme_id","update","dt","time","getCurrentTime","audio_offset_ms","textContent","updateSendButton","i","children","balloon","instantiate","addChild","blockClickHandler","initialize","errorClickHandler","captureError","bool","UIBase","HUI","mushroom","showTopButton","topUI","_isShowTop","MAX_WIDTH","EventType","MOUSE_ENTER","showTop","onDestroy","off","TOUCH_END","hideTop","adjustMushroom","addWidth","min","infos","stopAllActions","runAction","moveTo","v2","callBacks","FIT_HEIGHT","H_MIN_WIDTH","initialized","view","setResizeCallback","handleResize","frameSize","getFrameSize","designResolution","Size","setDesignResolutionSize","ResolutionPolicy","ContainerStrategy","PROPORTION_TO_FRAME","ContentStrategy","SHOW_ALL","func","removeCallback","splice","sceneNodes","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","z","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","DeviceMotionEvent","requestPermission","addEventListener","onDeviceorientation","evt","onDeviceMotion","targetX","gamma","targetY","beta","screenWidth_2","screenHeight_2","_x","_y","progressBar","ProgressBar","setOrientation","macro","ORIENTATION_PORTRAIT","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","anim","Animation","bgVolumn","bgSlider","Slider","bgProgress","offTimer","appHidden","micActive","isMusicOn","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","TOUCH_CANCEL","volumnCancelled","_N$handle","hidden","visibilityChangeParam","document","msHidden","webkitHidden","onVisibilityChange","toggleOver","toggleOut","clearTimeout","pauseMusic","playMusic","resumeMusic","setMusicVolume","value","checkVolumnToggle","isNative","muteAll","onMicChange","muted","headAnim","bodyAnim","mouthNode","idleMouthTimeout","state","tummy","heartPrefab","_heart","_onTummyHandler","_playFurweeAnim","playWelcome","_setAnimLastFrameHandler","_stopIdleMouth","startsWith","randArray","act","floor","random","getChildByName","_clearMouth","_setIdleMouth","idleTimer","_this2","idle","_cancelAnimHandler","_animComplete","_setAnimFinishHandler","_i","emit","microButton","recordButton","startRecord","enabled","initRecognition","useWebRecognition","startWebRecognition","startAPIRecognition","stopRecord","stopWebRecognition","stopAPIRecognition","updateUIAfterRecord","ui","recognition","textRecognition","stream","recorder","gumStream","rec","input","audioContext","uibase","uiBase","SpeechRecognition","webkitSpeechRecognition","debugNode","finalString","interimResults","continuous","lang","onresult","event","interString","autoEnd","resultIndex","results","isFinal","transcript","onerror","stop","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","video","then","createMediaStreamSource","Recorder","numChannels","record","getAudioTracks","exportWAV","blob","fd","FormData","append","isHActive","hNode","vNOde","uiCamera","Camera","musicWidget","Widget","musicButton","startBlock","bottom","left","ws","getComponentsInChildren","updateAlignment","closeStartBlock","toggleDebug","logout","home","education","v","convertToWorldSpaceAR","top","bot","prototype","_calculateBoundary","layout","Layout","enabledInHierarchy","updateLayout","viewSize","_view","getContentSize","anchorX","anchorY","_leftBoundary","_bottomBoundary","_rightBoundary","_topBoundary"],"mappings":"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","sourcesContent":["const {Helper} = require(\"Helper\");\r\nlet UIManager = require(\"UIManager\");\r\n\r\nlet Balloon = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        whiteBG: cc.Node,\r\n        pinkBG: cc.Node,\r\n        text: cc.Label,\r\n        stepCount:0\r\n    },\r\n\r\n    statics:{\r\n        COLOR_1 : new cc.Color(131,88, 52),\r\n        COLOR_2 : new cc.Color(255, 255, 255),\r\n        index:0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    onLoad() {\r\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\r\n        this.node.on(\"pcView\", this.pcView.bind(this));\r\n        this.index = Balloon.index;\r\n        Balloon.index ++;\r\n        // this.node.on(\"mouseOver\")\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    lateUpdate() {\r\n        if (this.updateTextHeight >0) {\r\n            this.updateTextHeight --;\r\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\r\n\r\n            if(this.updateTextHeight == 4){\r\n                this.updateTextHeight = 0;\r\n                 //scroll\r\n                let content = this.node.parent;\r\n                \r\n                let scroll = content.parent.parent.getComponent(cc.ScrollView);\r\n                scroll.scrollToBottom(0);\r\n                this.node.opacity = 255;\r\n\r\n                UIManager.instance.onScroll(null);\r\n                }\r\n           \r\n        }\r\n    },\r\n\r\n    init(text, isFurwee) {\r\n\r\n        if (isFurwee) {\r\n            this.text.node.color = Balloon.COLOR_1;\r\n            this.pinkBG.active = false;\r\n            this.whiteBG.active = true;\r\n\r\n            this.bg = this.whiteBG;\r\n        }\r\n        else {\r\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\r\n            this.whiteBG.active = false;\r\n            this.pinkBG.active = true;\r\n\r\n            this.bg = this.pinkBG;\r\n        }\r\n        this.isFurwee = isFurwee;\r\n        this.text.string = text;\r\n        this.updateTextHeight = 6;\r\n\r\n        if(!Helper.isPcView){\r\n            this.mobileView(Helper.width);\r\n        }\r\n\r\n    },\r\n\r\n    step() {\r\n        this.stepCount ++;\r\n        /*if (this.isFurwee) {\r\n            this.node.x = -this.stepCount * 20;\r\n        }\r\n        else {\r\n            this.node.x = this.stepCount * 20;\r\n        }*/\r\n\r\n       // this.node.opacity -= 50;\r\n\r\n        if(this.node.opacity <=0){\r\n           // this.node.parent.removeChild(this.node);\r\n        }\r\n    },\r\n\r\n    mobileView(w){\r\n        this.text.fontSize = 20;\r\n        this.text.lineHeight = 24;\r\n        this.text.string = this.text.string;\r\n\r\n        this.node.x = 0;\r\n\r\n        this.pinkBG.width = 357;//Math.max(230, w - 200);\r\n        this.whiteBG.width = 357;//Math.max(230, w - 200);\r\n        this.text.node.width = Math.max(190, this.pinkBG.width - 40);\r\n\r\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\r\n    },\r\n\r\n    pcView(){\r\n        this.text.fontSize = 20;\r\n        this.text.lineHeight = 28;\r\n        this.text.string = this.text.string;\r\n\r\n       /* if (this.isFurwee) {\r\n            this.node.x = -this.stepCount * 20;\r\n        }\r\n        else {\r\n            this.node.x = this.stepCount * 20;\r\n        }*/\r\n\r\n        this.pinkBG.width = 427;//230;\r\n        this.whiteBG.width = 427;//230;\r\n        this.text.node.width = 343;\r\n\r\n        this.updateTextHeight = Math.max(this.updateTextHeight, 2);\r\n\r\n       /* if(cc.sys.isBrowser){\r\n            this.text.fontSize = 20;\r\n            this.text.lineHeight = 22;\r\n        }*/\r\n    },\r\n\r\n\r\n    updateOpacity(){\r\n        let content = this.node.parent;\r\n        let y = this.node.y = content.y;\r\n        if( y > 0 && y< 500){\r\n            this.node.active = true;\r\n        }\r\n    }\r\n\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nconst {Helper} = require(\"Helper\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        minWidth: -1, \r\n        minHeight: -1,\r\n        fitHeight: 640,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    onLoad() {\r\n        Helper.addCallback(this.onResize.bind(this));\r\n\r\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\r\n\r\n        this.onResize(Helper.width, Helper.isPcView);\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    onResize: function (w, isPcView) {\r\n        if (!this.node) return;\r\n        if (w < this.minWidth) {\r\n            this.node.scale = w / this.minWidth;\r\n        }\r\n    }\r\n});\r\n","let Furwee = {};\r\n\r\nFurwee.LOGOUT_URL = null;\r\nFurwee.HOME_URL = null;\r\n\r\nexport{Furwee};","let MusicToggle = require(\"MusicToggle\");\r\nlet UIManager = require(\"UIManager\");\r\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\r\nconst {Furwee} = require(\"Furwee\");\r\nlet Pet = require(\"Pet\");\r\n\r\nlet Game = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        audioID: -1,\r\n       \r\n        historyObjects: [],\r\n\r\n        pet:Pet,\r\n\r\n\r\n        balloonPrefab: cc.Prefab,\r\n        balloonNode: cc.Node,\r\n\r\n        introSound: {\r\n            type: cc.AudioClip,\r\n            default: null\r\n        },\r\n\r\n        initialMsgJSON: null,\r\n\r\n        furweeIntialized: false,\r\n\r\n        URL: \"http://40.121.137.102\",\r\n        URL_SUFFIX: \"\",\r\n        \r\n\r\n        enableTextInput: false,\r\n\r\n        uiManager: UIManager,\r\n        cameraMove: LayerCamerasMove,\r\n        music: MusicToggle,\r\n        //ui related\r\n        editBox: cc.EditBox,\r\n        sendButton: cc.Node\r\n\r\n\r\n    },\r\n\r\n    start() {\r\n    },\r\n\r\n    onLoad() {\r\n\r\n\r\n        this.uiManager.game = this;\r\n        this.cameraMove.game = this;\r\n        this.music.game = this;\r\n\r\n        let isLocalHost = false;\r\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\r\n            isLocalHost = true;\r\n        }\r\n\r\n        if (true){//window.location.href.indexOf(\"furwee\") != -1) {\r\n            this.URL = \"https://furwee.ai/api\";\r\n            this.URL_SUFFIX = \"\";\r\n            Furwee.LOGOUT_URL =  \"https://furwee.ai/logout\";\r\n            Furwee.HOME_URL = \"https://furwee.ai/home\";\r\n        }\r\n        console.log(\"isLocalHost\", isLocalHost);\r\n\r\n        /*\r\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\r\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\r\n        \r\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\r\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\r\n        \r\n        return;\r\n        \r\n        */\r\n        this.setEnableTextInput(false);\r\n        this.onTextLenChange(this.editBox.string);\r\n        this.startFurwee();\r\n    },\r\n\r\n    handleConnect() {\r\n        console.log('connected', this.socket.id);\r\n    },\r\n\r\n    startFurwee() {\r\n        this.pet.play();\r\n\r\n        let that = this;\r\n        let xhr = new XMLHttpRequest();\r\n        let requestURL = this.URL + \"/initial-message/\" + this.URL_SUFFIX;\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                if (xhr.status == 200) {\r\n\r\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\r\n                    if (!that.tryToStartFurweeIntro()) {\r\n                        //preload sound\r\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\r\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        xhr.open('GET', requestURL, true);\r\n        xhr.setRequestHeader('Content-type', 'application/json');\r\n        xhr.send(\"\");\r\n    },\r\n\r\n    tryToStartFurweeIntro() {\r\n        if (this.uiManager.isBlockActive()) {\r\n            return false;\r\n        }\r\n        if (!this.initialMsgJSON) {\r\n            return false;\r\n        }\r\n\r\n        if (this.furweeIntialized) {\r\n            return false;\r\n        }\r\n\r\n        this.furweeIntialized = true;\r\n        //this.pet.playWelcome();\r\n        this.setEnableTextInput(true);\r\n        //this.pet.playIntro();\r\n        this.onTTSCompleted(this.initialMsgJSON, function () {\r\n            this.addBallon(this.initialMsgJSON.reply, true);\r\n            \r\n        }.bind(this));\r\n\r\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\r\n        return true;\r\n    },\r\n\r\n\r\n    onTTSCompleted(info, soundloadedHandler = null) {\r\n        if (!info) {\r\n            return;\r\n        }\r\n\r\n        this.audioInfo = info.lip_sync_animation;\r\n\r\n        let remoteUrl = info.audio_file_link;\r\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\r\n            // Use texture to create sprite frame\r\n            this._startPlayTalking(res, soundloadedHandler);\r\n        }.bind(this));\r\n    },\r\n\r\n    _startPlayTalking(res, soundloadedHandler){\r\n\r\n        if(this.pet.isReadyToTalk()){\r\n            this.audioID = cc.audioEngine.play(res);\r\n            if(this.audioID && this.music.shouldbeMuted()){\r\n                cc.audioEngine.setVolume(this.audioID, 0);\r\n            }\r\n            this.audioOffset = 0;\r\n            this.updateMouth();\r\n    \r\n            if (soundloadedHandler) {\r\n                soundloadedHandler();\r\n            }\r\n    \r\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\r\n                this.audioID = -1;\r\n                this.pet.startIdle();\r\n            }.bind(this));\r\n        }\r\n        else{\r\n            this.pet.playIntro();\r\n            setTimeout(() => {\r\n                this._startPlayTalking(res, soundloadedHandler);\r\n            }, 16);\r\n        }\r\n        \r\n    },\r\n\r\n    didReturnHandler() {\r\n        this.sendHandler();\r\n        setTimeout(function () {\r\n            this.editBox.focus();\r\n        }.bind(this), 0);\r\n    },\r\n\r\n\r\n    sendHandler() {\r\n        if (!this.enableTextInput) {\r\n            return;\r\n        }\r\n        let sendText = this.editBox.string;\r\n        if (sendText.trim().length == 0) {\r\n            return;\r\n        }\r\n\r\n        this.pet.resetIdle();\r\n\r\n        /* this.socket.emit(\"tts\", sendText);\r\n         return;\r\n    */\r\n\r\n        this.setEnableTextInput(false);\r\n        this.addBallon(sendText, false);\r\n        this.editBox.string = \"\";\r\n        if (!cc.sys.isMobile) {\r\n            this.editBox.focus();\r\n        } else {\r\n            this.editBox.blur();\r\n        }\r\n\r\n        this.onTextLenChange(this.editBox.string);\r\n\r\n        let that = this;\r\n        let xhr = new XMLHttpRequest();\r\n\r\n        let requestURL = this.URL + \"/messages/\" + this.URL_SUFFIX;\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                if (xhr.status == 200) {\r\n                    let json = JSON.parse(xhr.responseText);\r\n                    that.setEnableTextInput(true);\r\n                    that.onTTSCompleted(json);\r\n\r\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\r\n\r\n                    that.addBallon(json.reply, true);\r\n                }\r\n            }\r\n        }\r\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\r\n        xhr.open('POST', requestURL, true);\r\n        xhr.setRequestHeader('Content-type', 'application/json');\r\n        xhr.send(params);\r\n\r\n\r\n        let xhr2 = new XMLHttpRequest();\r\n        let requestURL2 = this.URL + \"/emotion/\" + this.URL_SUFFIX;\r\n        xhr2.onreadystatechange = function () {\r\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\r\n                if (xhr2.status == 200) {\r\n                    console.log(xhr2.responseText);\r\n                    let response =  JSON.parse(xhr2.responseText);\r\n                    that.pet.setEmotion(response.emotion);\r\n                    \r\n                }\r\n            }\r\n        }\r\n        let params2 = JSON.stringify({ \"message\": sendText });\r\n        xhr2.open('POST', requestURL2, true);\r\n        xhr2.setRequestHeader('Content-type', 'application/json');\r\n        xhr2.send(params2);\r\n    },\r\n\r\n    updateMouth() {\r\n        //audio_offset_ms: 1162.5, viseme_id: 11}\r\n        let id = this.audioInfo[this.audioOffset].viseme_id;\r\n        this.pet.updateMouth(id);\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.audioID != -1) {\r\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\r\n\r\n            while (this.audioInfo.length > this.audioOffset\r\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\r\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\r\n                this.updateMouth();\r\n                this.audioOffset += 1;\r\n\r\n            }\r\n        }\r\n    },\r\n\r\n    onTextLenChange(textContent) {\r\n        this.sendButton.active = textContent.length != 0;\r\n        this.uiManager.updateSendButton(this.sendButton.active);\r\n    },\r\n\r\n    addBallon(message, isFurwee) {\r\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\r\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\r\n        }\r\n\r\n        let balloon = cc.instantiate(this.balloonPrefab);\r\n        balloon.getComponent('Ballon').init(message, isFurwee);\r\n        balloon.opacity = 0;\r\n        this.balloonNode.addChild(balloon);\r\n\r\n       // this.balloonNode.parent.parent.getComponent(cc.ScrollView).stopAutoScroll();\r\n    },\r\n\r\n    blockClickHandler() {\r\n        this.music.initialize();\r\n        this.tryToStartFurweeIntro();\r\n    },\r\n   \r\n    errorClickHandler() {\r\n        if (window.captureError) {\r\n            window.captureError();\r\n        }\r\n\r\n    },\r\n\r\n    setEnableTextInput(bool) {\r\n        this.enableTextInput = bool;\r\n    }\r\n});\r\n","let UIBase = require(\"UIBase\");\r\nlet LayerCamerasMove = require(\"LayerCamerasMove\");\r\nlet HUI = cc.Class({\r\n    extends: UIBase,\r\n    properties: {\r\n        mushroom:cc.Node,\r\n\r\n        showTopButton: cc.Node,\r\n        topUI: cc.Node,\r\n        _isShowTop: false,\r\n\r\n\r\n    \r\n    },\r\n\r\n    statics: {\r\n        MAX_WIDTH: 2200\r\n    },\r\n\r\n    onLoad(){\r\n        this.showTopButton.on(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\r\n       \r\n    },\r\n\r\n    onDestroy(){\r\n        this.showTopButton.off(cc.Node.EventType.MOUSE_ENTER , this.showTop.bind(this));\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\r\n    },\r\n\r\n\r\n    adjustMushroom(w){\r\n        let addWidth = (Math.min(HUI.MAX_WIDTH, w) -1920 )/2;\r\n        this.mushroom.x = Math.max(837, 837 + addWidth);\r\n\r\n        LayerCamerasMove.infos[2].x =   this.mushroom.x ;\r\n\r\n    },\r\n\r\n    hideTop(){\r\n        if(!this._isShowTop){\r\n            return;\r\n        }\r\n        this._isShowTop = false;\r\n        this.topUI.stopAllActions();\r\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,140)));\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\r\n    },\r\n\r\n    showTop(){\r\n        if(this._isShowTop){\r\n            return;\r\n        }\r\n        this._isShowTop = true;\r\n        this.topUI.stopAllActions();\r\n        this.topUI.runAction(cc.moveTo(0.3, cc.v2(0,0)));\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.hideTop.bind(this));\r\n    }\r\n});","let Helper = {};\r\n\r\nHelper.callBacks = [];\r\nHelper.FIT_HEIGHT = 1080;\r\nHelper.H_MIN_WIDTH = 900;\r\nHelper.MAX_WIDTH = 2200;\r\n\r\nHelper.width = 1920;\r\nHelper.isPcView = true;\r\n\r\n\r\nHelper.initialized = false;\r\nHelper.initialize = function(){\r\n    if(Helper.initialized ){\r\n        return;\r\n    }\r\n    Helper.initialized  = true;\r\n    cc.view.setResizeCallback(Helper.handleResize);\r\n    Helper.handleResize();\r\n}\r\n\r\nHelper.handleResize = function(){\r\n\r\n    var frameSize = cc.view.getFrameSize();\r\n    let w = Helper.FIT_HEIGHT / frameSize.height * frameSize.width;\r\n        \r\n   \r\n\r\n    let isPcView = true;\r\n    if (w < Helper.H_MIN_WIDTH) {\r\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\r\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\r\n        isPcView = false;\r\n    }\r\n    else{\r\n        w = Math.min(Helper.MAX_WIDTH, w);\r\n\r\n        cc.Canvas.instance.designResolution = new cc.Size(w, Helper.FIT_HEIGHT );\r\n        cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);\r\n        isPcView = true;\r\n    }\r\n\r\n    Helper.width = w;\r\n    Helper.isPcView = isPcView;\r\n\r\n    for(let i =0 ; i < Helper.callBacks .length; i++){\r\n        Helper.callBacks[i](w, isPcView);\r\n    }\r\n}\r\n\r\nHelper.addCallback = function(func){\r\n    Helper.initialize();\r\n    Helper.callBacks.push(func);\r\n}\r\n\r\nHelper.removeCallback = function(func){\r\n    let index = Helper.callBacks.indexOf(func);\r\n    if(index != -1){\r\n        Helper.splice(index,1);\r\n    }\r\n}\r\n\r\n\r\nexport {Helper};","let LayerCamerasMove = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        sceneNodes: [cc.Node],\r\n\r\n        vx: 0,\r\n        vy: 0,\r\n        ax: 0.5,\r\n        maxV: 1,\r\n\r\n        rotRangeX: 10,\r\n        rotRangeY: 10,\r\n\r\n        screenWidth: 0,\r\n        screenHeight: 0,\r\n        designResolutionHeight: 0,\r\n        designResolutionHeight_2: 0,\r\n\r\n        game: null\r\n    },\r\n\r\n    statics:{\r\n        infos:null\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\r\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\r\n\r\n\r\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\r\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\r\n\r\n        LayerCamerasMove.infos = [];\r\n        for (let i = 0; i < this.sceneNodes.length; i++) {\r\n            let info = { x: this.sceneNodes[i].x, y: this.sceneNodes[i].y, z: this.sceneNodes[i].z, height: this.sceneNodes[i].height };\r\n            LayerCamerasMove.infos.push(info);\r\n        }\r\n\r\n        if (!cc.sys.isMobile) {\r\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n            this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        }\r\n\r\n    },\r\n\r\n    onDestroy: function () {\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n    },\r\n\r\n    initialize: function () {\r\n        console.log(window.DeviceMotionEvent);\r\n        if (window.DeviceMotionEvent && typeof window.DeviceMotionEvent.requestPermission === \"function\") {\r\n\r\n            \r\n            window.DeviceMotionEvent.requestPermission();\r\n        }\r\n\r\n        // window.addEventListener(\"devicemotion\", this.onDeviceMotion.bind(this));\r\n        window.addEventListener(\"deviceorientation\", this.onDeviceorientation.bind(this));\r\n    },\r\n\r\n    onTouchMove: function (evt) {\r\n        // this.onMouseMove(evt);\r\n    },\r\n\r\n    onDeviceMotion: function (evt) {\r\n    },\r\n\r\n    onDeviceorientation: function (evt) {\r\n\r\n        for (let i = 0; i < this.sceneNodes.length; i++) {\r\n\r\n            let screenHeight_2 = this.screenHeight / 2;\r\n\r\n            let targetX = LayerCamerasMove.infos[i].x + (evt.gamma / 90) * this.rotRangeX * LayerCamerasMove.infos[i].z / 10;\r\n\r\n            let targetY = (evt.beta / 90) * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\r\n\r\n            // let currentX = this.sceneNodes[i].x;\r\n\r\n            //let timeX = Math.abs(targetX - currentX) / this.rotRangeX * 2;\r\n            //this.debugNode.string += ('\\n'+'time' + i +\" : \"+ timeX);\r\n\r\n            //targetY + \r\n            // let moveTo = cc.moveTo(1, targetX, this.infos[i].y);\r\n\r\n\r\n            //this.sceneNodes[i].stopAllActions();\r\n            this.sceneNodes[i].x = targetX;\r\n\r\n            if (i == 1) {\r\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\r\n            }\r\n            else {\r\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    onMouseMove: function (evt) {\r\n        if (!this.game.furweeIntialized) {\r\n            return;\r\n        }\r\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\r\n\r\n        for (let i = 0; i < this.sceneNodes.length; i++) {\r\n\r\n            let screenWidth_2 = this.screenWidth / 2;\r\n            let screenHeight_2 = this.screenHeight / 2;\r\n\r\n            let targetX = (screenWidth_2 - evt._x) / screenWidth_2 * this.rotRangeX * (LayerCamerasMove.infos[i].z / 10);\r\n            let targetY = (evt._y - 370) / screenHeight_2 * this.rotRangeY * (LayerCamerasMove.infos[i].z / 10);\r\n\r\n\r\n\r\n\r\n            //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\r\n            //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\r\n\r\n            // console.log(\"target\", targetX, targetY);\r\n            //let currentX = this.sceneNodes[i].x;\r\n            //let currentY = this.sceneNodes[i].y;\r\n\r\n            //console.log('time', timeX, timeY);\r\n\r\n            //targetY + \r\n            //et moveTo = cc.moveTo(timeX, cc.v3(targetX + this.infos[i].x, this.infos[i].y, this.infos[i].z));\r\n\r\n            // this.sceneNodes[i].stopAllActions();\r\n            // this.sceneNodes[i].runAction(moveTo);\r\n            this.sceneNodes[i].x = LayerCamerasMove.infos[i].x + targetX;\r\n\r\n            if (i == 1) {\r\n                this.sceneNodes[i].height = LayerCamerasMove.infos[i].height + targetY;\r\n            }\r\n            else {\r\n                this.sceneNodes[i].y = LayerCamerasMove.infos[i].y + targetY;\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        progressBar: cc.ProgressBar,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    onLoad() {\r\n\r\n        if (cc.sys.isMobile) {\r\n            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\r\n        }\r\n        cc.director.preloadScene(\"game_v1\", this.onProgress.bind(this), this.onComplete.bind(this));\r\n\r\n    },\r\n\r\n    onProgress(completedCount, totalCount) {\r\n        this.progressBar.progress = completedCount / totalCount;\r\n    },\r\n\r\n    onComplete(error) {\r\n        if (!error) {\r\n            cc.director.loadScene(\"game_v1\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n});\r\n","\r\nlet MusicToggle = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        onNode: cc.Node,\r\n        offNode: cc.Node,\r\n        hintNode: cc.Node,\r\n        hintText: cc.Label,\r\n        audioId: -1,\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: null\r\n        },\r\n        anim: cc.Animation,\r\n        bgVolumn: 0.8,\r\n\r\n        bgSlider: cc.Slider,\r\n        bgProgress: cc.ProgressBar,\r\n        offTimer: -1,\r\n\r\n\r\n        appHidden :false,\r\n        micActive : false,\r\n\r\n        game: null\r\n\r\n    },\r\n\r\n    initialize() {\r\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\r\n        if (this.isMusicOn == null) {\r\n            this.isMusicOn = true;\r\n        }\r\n\r\n        if (this.isMusicOn) {\r\n            this.toggleOn();\r\n        }\r\n        else {\r\n            this.toggleOff();\r\n        }\r\n\r\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\r\n\r\n        this.bgSlider.node.on(cc.Node.EventType.TOUCH_CANCEL, this.volumnCancelled, this);\r\n        this.bgSlider._N$handle.node.on(cc.Node.EventType.TOUCH_END, this.volumnCancelled, this);\r\n\r\n\r\n\r\n        /// visibility\r\n        this.hidden = \"\";\r\n        var visibilityChangeParam = \"\";\r\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \r\n            this.hidden = \"hidden\";\r\n            visibilityChangeParam = \"visibilitychange\";\r\n        }\r\n        else if (typeof document.msHidden !== \"undefined\") {\r\n            this.hidden = \"msHidden\";\r\n            visibilityChangeParam = \"msvisibilitychange\";\r\n        }\r\n        else if (typeof document.webkitHidden !== \"undefined\") {\r\n            this.hidden = \"webkitHidden\";\r\n            visibilityChangeParam = \"webkitvisibilitychange\";\r\n        }\r\n\r\n        if (typeof document.addEventListener !== \"undefined\" && typeof document.hidden !== \"undefined\") {\r\n            document.addEventListener(visibilityChangeParam, this.onVisibilityChange.bind(this), false);\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    toggleOver() {\r\n        this.hintNode.active = true;\r\n    },\r\n\r\n    toggleOut() {\r\n        this.hintNode.active = false;\r\n    },\r\n\r\n\r\n    toggleOff() {\r\n        clearTimeout(this.offTimer);\r\n\r\n        this.offTimer = -1;\r\n\r\n        this.onNode.active = true;\r\n        this.offNode.active = false;\r\n        this.hintText.string = \"Turn Volumn On\";\r\n\r\n        this.bgSlider.node.active = false;\r\n\r\n        if (this.audioId >=0) {\r\n            cc.audioEngine.pauseMusic();\r\n        }\r\n\r\n\r\n    },\r\n\r\n    toggleOn() {\r\n        this.offNode.active = true;\r\n        this.onNode.active = false;\r\n        this.hintText.string = \"Turn Volumn Off\";\r\n\r\n        this.bgSlider.node.active = true;\r\n\r\n        if (this.audioId <0) {\r\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\r\n        }\r\n        else {\r\n            cc.audioEngine.resumeMusic();\r\n        }\r\n\r\n        if (this.bgVolumn == 0) {\r\n            this.bgProgress.progress = this.bgSlider.progress = this.bgVolumn = 0.8;\r\n            cc.audioEngine.setMusicVolume(this.bgVolumn);\r\n        }\r\n    },\r\n\r\n    sliderAdjust(value) {\r\n        clearTimeout(this.offTimer);\r\n        this.bgProgress.progress = value.progress;\r\n        this.bgVolumn = value.progress;\r\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\r\n\r\n    },\r\n\r\n    volumnCancelled() {\r\n        clearTimeout(this.offTimer);\r\n        if (this.bgVolumn == 0) {\r\n\r\n            this.offTimer = setTimeout(() => {\r\n                this.checkVolumnToggle();\r\n            }, 1000);\r\n        }\r\n    },\r\n\r\n    checkVolumnToggle() {\r\n        clearTimeout(this.offTimer);\r\n        if (this.bgVolumn == 0) {\r\n            this.toggleOff();\r\n        }\r\n    },\r\n\r\n\r\n    onVisibilityChange: function () {\r\n        let appHidden = document[this.hidden];\r\n\r\n        if (cc.sys.isNative) return;\r\n\r\n       \r\n\r\n        if (appHidden) {\r\n            this.appHidden = true;\r\n            this.muteAll(true);\r\n        }\r\n        else {\r\n            this.appHidden = false;\r\n            this.muteAll(false);\r\n        }\r\n    },\r\n\r\n    onMicChange: function(active){\r\n        this.micActive = active;\r\n\r\n        if(active){\r\n            this.muteAll(true);\r\n        }\r\n        else{\r\n            this.muteAll(false);\r\n        }\r\n    },\r\n\r\n    muteAll: function (muted) {\r\n\r\n        muted = muted || this.micActive || this.appHidden;\r\n\r\n        if (this.game.audioID >= 0) {\r\n            cc.audioEngine.setVolume(this.game.audioID, muted ? 0 : 1);\r\n        }\r\n\r\n        if (this.audioId >=0) {\r\n            cc.audioEngine.setVolume(this.audioId, muted ? 0 : this.bgVolumn);\r\n        }\r\n    },\r\n\r\n    shouldbeMuted: function(){\r\n        return this.micActive || this.appHidden;\r\n    }\r\n\r\n\r\n});","\r\n\r\nlet Pet = cc.Class({\r\n    extends: cc.Component,\r\n\r\n\r\n    properties: {\r\n        headAnim: cc.Animation,\r\n        bodyAnim: cc.Animation,\r\n        mouthNode: cc.Node,\r\n        idleMouthTimeout: -1,\r\n        state: null,\r\n        emotion: \"positive\",\r\n        tummy: cc.Node,\r\n        heartPrefab: cc.Prefab,\r\n\r\n        _heart: cc.Node\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this.tummy.on(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\r\n        this.tummy.on(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\r\n    },\r\n\r\n    onDestroy() {\r\n        this.tummy.off(cc.Node.EventType.TOUCH_MOVE, this._onTummyHandler, this);\r\n        this.tummy.off(cc.Node.EventType.MOUSE_MOVE, this._onTummyHandler, this);\r\n    },\r\n\r\n    play() {\r\n        this._playFurweeAnim(\"happyidle\");\r\n        this.state = \"intro_idle\";\r\n    },\r\n\r\n    playWelcome() {\r\n\r\n    },\r\n\r\n    playIntro() {\r\n        if (this.state == \"intro_idle\") {\r\n            this._setAnimLastFrameHandler();\r\n            this.state = \"intro_idle_checking\"\r\n        }\r\n    },\r\n\r\n    updateMouth(id) {\r\n        this._stopIdleMouth();\r\n        if (this.state.startsWith(\"intro\") || this.state.startsWith(\"wave\")) {\r\n            // skip\r\n        }\r\n        else if (this.state != \"speak\") {\r\n            this.state = \"speak\";\r\n            switch (this.emotion) {\r\n                case \"positive\":\r\n                    this._playFurweeAnim(\"tallking_2_hands\");\r\n                    break;\r\n                case \"negative\":\r\n                    this._playFurweeAnim(\"sadidle\");\r\n                    break;\r\n                default:\r\n                    let randArray = [\"talking_l_a\",\"talking_r_a\", \"talking_l_b\",\"talking_l_c\", \"talking_r_b\", \"talking_r_c\"];\r\n                    let act = Math.floor(Math.random() * randArray.length);\r\n                    this._playFurweeAnim(randArray[act]);\r\n            }\r\n        }\r\n\r\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\r\n        if (node) {\r\n            this._clearMouth();\r\n            node.active = true;\r\n        }\r\n    },\r\n\r\n    startIdle() {\r\n        this.state = \"idle\";\r\n        this._stopIdleMouth();\r\n\r\n        this._clearMouth();\r\n        //\r\n        this._setIdleMouth();\r\n\r\n\r\n        switch (this.emotion) {\r\n            case \"negative\":\r\n                this._playFurweeAnim(\"sadidle\");\r\n                break;\r\n            case \"positive\":\r\n                this._playFurweeAnim(\"happyidle\");\r\n                break;\r\n            default:\r\n                this._playFurweeAnim(\"normalidle\");\r\n        }\r\n    },\r\n\r\n    resetIdle(){\r\n        if(this.idleTimer){\r\n            clearTimeout(this.idleTimer);\r\n        }\r\n        this.idleTimer = setTimeout(() => {\r\n            this._playFurweeAnim(\"listenwaitidle\");\r\n        }, 30000);\r\n    },\r\n\r\n    _setIdleMouth() {\r\n        let idle = Math.floor(Math.random() * 2);\r\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\r\n        this.idleMouthTimeout = setTimeout(() => {\r\n            this._setIdleMouth();\r\n        }, 2000);\r\n    },\r\n\r\n    _cancelAnimHandler(){\r\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\r\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\r\n    },\r\n\r\n    _setAnimLastFrameHandler(){\r\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\r\n        this.bodyAnim.on(\"lastframe\", this._animComplete.bind(this));\r\n    },\r\n\r\n    _setAnimFinishHandler() {\r\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\r\n        this.bodyAnim.on(\"finished\", this._animComplete.bind(this));\r\n    },\r\n\r\n    _animComplete() {\r\n        this.bodyAnim.off(\"finished\", this._animComplete.bind(this));\r\n        this.bodyAnim.off(\"lastframe\", this._animComplete.bind(this));\r\n        switch (this.state) {\r\n            case \"intro_idle_checking\":\r\n                this._playFurweeAnim(\"intro\");\r\n                this._setAnimFinishHandler();\r\n                this.state = \"intro_jump\";\r\n                break;\r\n            case \"intro_jump\":\r\n                this._playFurweeAnim(\"happywave\");\r\n                this._setAnimFinishHandler();\r\n                this.state = \"wave_1\";\r\n                break;\r\n            case \"wave_1\":\r\n                this._playFurweeAnim(\"tallking_2_hands\");\r\n                this.state = \"speak\";\r\n                this.resetIdle();\r\n                break;\r\n            default:\r\n                this._playFurweeAnim(\"normalidle\");\r\n                this.state = \"idle\";\r\n                break;\r\n        }\r\n        console.log('_animComplete');\r\n    },\r\n\r\n    _clearMouth() {\r\n        for (let i = 0; i <= 21; i++) {\r\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\r\n            node2.active = false;\r\n        }\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\r\n            node2.active = false;\r\n        }\r\n\r\n        let node3 = this.mouthNode.getChildByName(\"open_mouth\");\r\n        node3.active = false;\r\n    },\r\n\r\n\r\n\r\n    _stopIdleMouth() {\r\n        clearTimeout(this.idleMouthTimeout);\r\n        this.idleMouthTimeout = -1;\r\n    },\r\n\r\n\r\n    _playFurweeAnim(anim) {\r\n        console.log(\"playAnim\", anim);\r\n        this._cancelAnimHandler();\r\n\r\n        this.headAnim.play(anim + \"_head\");\r\n        this.bodyAnim.play(anim + \"_body\");\r\n\r\n        if (anim == \"laugh\") {\r\n            if (!this._heart) {\r\n                this._heart = cc.instantiate(this.heartPrefab);\r\n                this._heart.y = this.tummy.y;\r\n                this.node.addChild(this._heart);\r\n            }\r\n            else {\r\n                this._heart.getComponent(cc.Animation).play();\r\n            }\r\n        }\r\n    },\r\n\r\n    setEmotion(state) {\r\n        console.log(\"setemotion\", state);\r\n        this.emotion = state;\r\n    },\r\n\r\n    isReadyToTalk() {\r\n        return !this.state.startsWith(\"intro\");\r\n    },\r\n\r\n    _onTummyHandler() {\r\n        if (this.state == \"idle\") {\r\n            this.state = \"laugh\";\r\n            this._playFurweeAnim(\"laugh\");\r\n            this._setAnimFinishHandler();\r\n        }\r\n    }\r\n})","const {Helper} = require(\"Helper\");\r\n\r\nlet SwitchWidget = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    onLoad() {\r\n\r\n        Helper.addCallback(this.onResize.bind(this));\r\n        this.onResize(Helper.width, Helper.isPcView);\r\n    },\r\n\r\n    onDestroy(){\r\n        Helper.removeCallback(this.onResize.bind(this));\r\n    },\r\n    // update (dt) {},\r\n\r\n    onResize: function (w, isPcView) {\r\n        if (!this.node) return;\r\n\r\n        if(!isPcView){\r\n            this.node.emit(\"mobileView\", w);\r\n        }\r\n        else{ \r\n            this.node.emit(\"pcView\", w);\r\n        }\r\n    }\r\n});\r\n","let UIManager = require(\"UIManager\");\r\n\r\nlet UIBase = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        sendButton:cc.Node,\r\n        text: cc.EditBox,\r\n        ///recorder\r\n\r\n        microButton: cc.Node,\r\n        recordButton: cc.Node,\r\n\r\n    },\r\n    \r\n\r\n    //mobile\r\n    startRecord() {\r\n        this.microButton.active = false;\r\n        this.recordButton.active = true;\r\n\r\n        this.text.enabled = false;\r\n\r\n        UIBase.initRecognition(this);\r\n\r\n        UIManager.instance.game.music.onMicChange(true);\r\n        \r\n        if(UIBase.useWebRecognition){\r\n            UIBase.startWebRecognition();\r\n        }\r\n        else{\r\n            UIBase.startAPIRecognition();\r\n        }\r\n    },\r\n\r\n    stopRecord() {\r\n        this.microButton.active = true;\r\n        this.recordButton.active = false;\r\n\r\n        UIManager.instance.game.music.onMicChange(false);\r\n\r\n        if(UIBase.useWebRecognition){\r\n           UIBase.stopWebRecognition();\r\n        }\r\n        else{\r\n            UIBase.stopAPIRecognition();\r\n        }\r\n       \r\n        this.text.enabled = true;\r\n        this.updateUIAfterRecord();\r\n    },\r\n\r\n    updateUIAfterRecord() {\r\n        this.sendButton.active = (this.text.string.length != 0);\r\n        this.updateSendButton(this.sendButton.active);\r\n    },\r\n\r\n    updateSendButton(active) {\r\n        this.microButton.active = !active;\r\n    },\r\n\r\n    statics: {\r\n        ui:null,\r\n        useWebRecognition:false,\r\n        recognition:null,\r\n        textRecognition:\"\",\r\n\r\n         //api\r\n         stream: null,\r\n         recorder: null,\r\n         \r\n         gumStream : null,\r\n         //stream from getUserMedia() \r\n         rec : null,\r\n         //Recorder.js object \r\n         input : null,\r\n         audioContext:null,\r\n\r\n        initRecognition(uibase){\r\n            UIManager.uiBase = uibase;\r\n\r\n            window.SpeechRecognition = window.SpeechRecognition\r\n            || window.webkitSpeechRecognition;\r\n\r\n            UIBase.useWebRecognition = SpeechRecognition != undefined;\r\n            UIManager.instance.debugNode.string += \"useWebRecognition:\" +  UIBase.useWebRecognition + \"\\n\";\r\n\r\n            UIBase.textRecognition = \"\";\r\n        },\r\n\r\n\r\n        startWebRecognition(){\r\n            let finalString = \"\";\r\n            UIBase.recognition = new SpeechRecognition();\r\n            UIBase.recognition.interimResults = true;\r\n            UIBase.recognition.continuous = true;\r\n            UIBase.recognition.lang = \"en-US\";\r\n        \r\n            UIManager.instance.debugNode.string += \"startWebRecognition 1\\n\";\r\n           \r\n            UIBase.recognition.onresult = function (event) {\r\n\r\n                console.log(event);\r\n                UIManager.instance.debugNode.string += \"startWebRecognition 3\"+event+\"\\n\";\r\n                let interString = \"\";\r\n                let autoEnd = false;\r\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n                    // If the result item is Final, add it to Final Transcript, Else add it to Interim transcript\r\n                    if (event.results[i].isFinal) {\r\n                        finalString += event.results[i][0].transcript;\r\n                        UIBase.textRecognition = finalString;\r\n                        autoEnd = true;\r\n                    \r\n                    }\r\n                    else{\r\n                        interString += event.results[i][0].transcript;\r\n                        UIBase.textRecognition = finalString + interString;\r\n                    \r\n                    }\r\n                }\r\n                //////////\r\n                UIManager.uiBase.text.string = UIBase.textRecognition;\r\n\r\n                if (UIManager.uiBase.text.enabled) {\r\n                    UIManager.uiBase.updateUIAfterRecord();\r\n                }\r\n                UIManager.instance.debugNode.string += \"startWebRecognition 2\\n\";\r\n\r\n                if(autoEnd){\r\n                    UIManager.uiBase.stopRecord();\r\n                    if(UIManager.uiBase.text.string.length != 0){\r\n                        UIManager.instance.game.sendHandler()\r\n                    }\r\n                }\r\n            };\r\n\r\n            UIBase.recognition.onerror = function(event) {\r\n\r\n                UIManager.instance.debugNode.string += \"startWebRecognition error\"+event.error+\"\\n\" + event.message+\"\\n\";\r\n                if(event.error == \"network\"){\r\n                     UIBase.useWebRecognition = false;\r\n                }\r\n            }\r\n\r\n            UIBase.recognition.start();\r\n            UIManager.instance.debugNode.string += \"startWebRecognition 6\\n\";\r\n        },\r\n\r\n        stopWebRecognition(){\r\n            UIBase.recognition.stop();\r\n        },\r\n\r\n        \r\n        //start api recognition\r\n        startAPIRecognition(){\r\n            \r\n            var AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n            let constraints  =  {\r\n                audio: true,\r\n                video: false\r\n            } ;\r\n\r\n            navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\r\n\r\n                UIBase.audioContext = new AudioContext();\r\n\r\n                console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\"); \r\n                /* assign to gumStream for later use */\r\n                UIBase.gumStream = stream;\r\n                /* use the stream */\r\n                UIBase.input = UIBase.audioContext.createMediaStreamSource(stream);\r\n                /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\r\n                UIBase.rec = new Recorder(UIBase.input, {\r\n                    numChannels: 1\r\n                }) \r\n                //start the recording process \r\n                UIBase.rec.record()\r\n                console.log(\"Recording started\");\r\n            }).catch(function(err) {\r\n                \r\n            });\r\n        },\r\n\r\n        stopAPIRecognition(){\r\n\r\n            UIBase.rec.stop(); //stop microphone access \r\n            UIBase.gumStream.getAudioTracks()[0].stop();\r\n            //create the wav blob and pass it on to createDownloadLink \r\n\r\n            UIBase.rec.exportWAV(function(blob) {\r\n\r\n                let xhr = new XMLHttpRequest();\r\n                let requestURL = UIManager.instance.game.URL + \"/audio-to-text/\" + UIManager.instance.game.URL_SUFFIX;\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                        if (xhr.status == 200) {\r\n                            let json = JSON.parse(xhr.responseText);\r\n                            if(json.text != null){\r\n                                /////////////\r\n                                UIManager.uiBase.text.string = json.text;\r\n                                UIManager.uiBase.updateUIAfterRecord();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //let params = JSON.stringify({ \"audio\": blob});\r\n                xhr.open('POST', requestURL, true);\r\n\r\n                //URL = window.URL || window.webkitURL;\r\n                \r\n                var fd=new FormData();\r\n                fd.append(\"audio\",blob);\r\n\r\n                xhr.send(fd);\r\n            });\r\n\r\n        \r\n        }\r\n\r\n    }\r\n});\r\n","let LayerCamerasMove = require(\"LayerCamerasMove\");\r\nconst {Furwee} = require(\"Furwee\");\r\nconst {Helper} = require(\"Helper\");\r\n\r\nlet UIManager = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isHActive: true,\r\n\r\n        hNode: cc.Node,\r\n        vNOde: cc.Node,\r\n        uiCamera: cc.Camera,\r\n\r\n        musicWidget: cc.Widget,\r\n        musicButton: cc.Node,\r\n\r\n        startBlock: cc.Node,\r\n\r\n        game: null,\r\n        cameraMove: LayerCamerasMove,\r\n        debugNode: cc.Label,\r\n    },\r\n\r\n    statics:{\r\n        instance :null,\r\n        uiBase: null\r\n    },\r\n\r\n    onLoad: function(){\r\n        this.startBlock.active = true;\r\n\r\n\r\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\r\n        this.node.on(\"pcView\", this.pcView.bind(this));\r\n\r\n        if (!Helper.isPcView) {\r\n            this.mobileView(Helper.width);\r\n\r\n        }\r\n        else{\r\n            this.pcView(Helper.width);\r\n        }\r\n\r\n        //update View\r\n       // cc.view.setDesignResolutionSize( cc.Canvas.instance.designResolution.width,  cc.Canvas.instance.designResolution.height, new cc.ResolutionPolicy(cc.ContainerStrategy.PROPORTION_TO_FRAME, cc.ContentStrategy.SHOW_ALL),);    \r\n\r\n       setTimeout(() => {\r\n        Helper.handleResize();\r\n       }, 1);\r\n        UIManager.instance = this;\r\n    },\r\n\r\n\r\n    mobileView(w){\r\n       \r\n        this.isHActive = false;\r\n        this.hNode.active = false;\r\n        this.vNOde.active = true;\r\n\r\n        this.vNOde.width = w;\r\n        this.musicWidget.bottom = 70;\r\n        this.musicWidget.left = -5;\r\n\r\n        this.musicButton.scale = 0.6;\r\n        this.musicButton.x = 20;\r\n       \r\n        let ws = this.node.getComponentsInChildren(cc.Widget);\r\n        for(let i in ws){\r\n            ws[i].updateAlignment();\r\n        }\r\n       \r\n        this.vNOde.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\r\n        this.vNOde.getComponent('UIBase').text.string = this.game.editBox.string;\r\n        this.vNOde.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\r\n\r\n        this.game.sendButton = this.vNOde.getComponent('UIBase').sendButton;\r\n        this.game.editBox = this.vNOde.getComponent('UIBase').text;\r\n\r\n        if(this.game.microButton){\r\n            this.vNOde.getComponent('UIBase').microButton.active = this.game.microButton.active;\r\n        }\r\n\r\n        if(this.game.recordButton){\r\n            this.vNOde.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\r\n        }\r\n\r\n        this.game.microButton = this.vNOde.getComponent('UIBase').microButton;\r\n        this.game.recordButton = this.vNOde.getComponent('UIBase').recordButton;\r\n\r\n        if( UIManager.uiBase){\r\n            UIManager.uiBase = this.vNOde.getComponent('UIBase');\r\n        }\r\n    },\r\n\r\n    pcView(w){\r\n       \r\n        this.isHActive = true;\r\n        this.hNode.active = true;\r\n        this.vNOde.active = false;\r\n        this.hNode.width = w;\r\n\r\n        this.musicWidget.bottom = 46;\r\n        this.musicWidget.left = 62;\r\n        this.musicWidget.updateAlignment();\r\n\r\n        this.musicButton.scale = 1;\r\n        this.musicButton.x = 0;\r\n\r\n        let ws = this.node.getComponentsInChildren(cc.Widget);\r\n        for(let i in ws){\r\n            ws[i].updateAlignment();\r\n        }\r\n\r\n        this.hNode.getComponent('UIBase').sendButton.active = this.game.sendButton.active;\r\n        this.hNode.getComponent('UIBase').text.string = this.game.editBox.string;\r\n        this.hNode.getComponent('UIBase').text.enabled = this.game.editBox.enabled;\r\n\r\n        this.game.sendButton = this.hNode.getComponent('UIBase').sendButton;\r\n        this.game.editBox = this.hNode.getComponent('UIBase').text;\r\n\r\n        if(this.game.microButton){\r\n            this.hNode.getComponent('UIBase').microButton.active = this.game.microButton.active;\r\n        }\r\n\r\n        if(this.game.recordButton){\r\n            this.hNode.getComponent('UIBase').recordButton.active = this.game.recordButton.active;\r\n        }\r\n\r\n        this.game.microButton = this.hNode.getComponent('UIBase').microButton;\r\n        this.game.recordButton = this.hNode.getComponent('UIBase').recordButton;\r\n\r\n        if( UIManager.uiBase){\r\n            UIManager.uiBase = this.hNode.getComponent('UIBase');\r\n        }\r\n\r\n        this.hNode.getComponent(\"HUI\").adjustMushroom(w);\r\n       \r\n    },\r\n\r\n    closeStartBlock() {\r\n        this.startBlock.active = false;\r\n        this.cameraMove.initialize();\r\n        this.game.blockClickHandler();\r\n    },\r\n\r\n    isBlockActive(){\r\n       return this.startBlock.active ;\r\n    },\r\n\r\n    updateSendButton(active){\r\n        if(!this.isHActive){\r\n            this.vNOde.getComponent(\"UIBase\").updateSendButton(active)\r\n        }\r\n        else{\r\n            this.hNode.getComponent(\"UIBase\").updateSendButton(active)\r\n        }\r\n    },\r\n\r\n    toggleDebug: function () {\r\n        return;\r\n        this.debugNode.node.active = !this.debugNode.node.acctive;\r\n    },\r\n\r\n    logout() {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('POST',  Furwee.LOGOUT_URL , true);\r\n        xhr.send();\r\n    },\r\n\r\n    home(){\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('POST',  Furwee.HOME_URL , true);\r\n        xhr.send();\r\n    },\r\n\r\n    education(){\r\n      \r\n    },\r\n\r\n    onScroll(evt){\r\n       \r\n        let content = this.game.balloonNode;\r\n        for(let i = 0; i < content.children.length; i++){\r\n            let v = content.children[i].convertToWorldSpaceAR(cc.v2(0,0));\r\n            \r\n            let top = v.y + content.children[i].height/2;\r\n            let bot = v.y - content.children[i].height/2;\r\n          //  console.log(top, bot);\r\n            if(bot >1080 || top < 540){\r\n                content.children[i].children[0].active = false;\r\n               // console.log(\"hide\", i);\r\n            }\r\n            else{\r\n                content.children[i].children[0].active = true;\r\n\r\n                bot = Math.max(650, bot);\r\n                content.children[i].opacity =  255 - (bot - 650)/540 * 255;\r\n\r\n                \r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n});\r\n\r\ncc.ScrollView.prototype._calculateBoundary = function() {\r\n    if (this.content) {\r\n        //refresh content size\r\n        let layout = this.content.getComponent(cc.Layout);\r\n        if(layout && layout.enabledInHierarchy) {\r\n            layout.updateLayout();\r\n        }\r\n        let viewSize = this._view.getContentSize();\r\n\r\n        let anchorX = viewSize.width * this._view.anchorX;\r\n        let anchorY = viewSize.height * this._view.anchorY;\r\n\r\n        this._leftBoundary = -anchorX;\r\n        this._bottomBoundary = -anchorY;\r\n\r\n        this._rightBoundary = this._leftBoundary + viewSize.width;\r\n        this._topBoundary = this._bottomBoundary + viewSize.height;\r\n\r\n        //this._moveContentToTopLeft(viewSize);\r\n    }\r\n}","let UIBase = require(\"UIBase\");\r\nlet UIManager = require(\"UIManager\");\r\n\r\nlet VUI = cc.Class({\r\n    extends: UIBase,\r\n\r\n    properties: {\r\n      \r\n       \r\n    },\r\n\r\n    \r\n\r\n});"],"file":"project.js"}