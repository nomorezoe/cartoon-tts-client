{"version":3,"sources":["assets/Scripts/tool/AutoSwitchWidget.js","assets/Scripts/game/Ballon.js","assets/Scripts/game/BodyAnim.js","assets/Scripts/game/BottomUI.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/game/CamMove.js","assets/Scripts/game/Eye.js","assets/Scripts/tool/FitWidget.js","assets/Scripts/game/Game.js","assets/Scripts/tool/Helper.js","assets/Scripts/loading/Loading.js","assets/Scripts/game/MusicToggle.js","assets/Scripts/tool/SwitchWidget.js"],"names":["Helper","require","cc","Class","extends","Component","properties","minWidth","minHeight","isPcView","mobileNode","Node","pcNode","onLoad","addCallback","this","onResize","bind","canvas","node","parent","getComponent","Canvas","frameSize","view","getFrameSize","height","width","active","updateAlignment","whiteBG","pinkBG","text","Label","start","update","updateTextHeight","bg","Math","max","init","isFurwee","color","Color","string","step","x","opacity","removeChild","anim","Animation","playIntro","play","introComplete","SwitchWidget","switchwidget","musicWidget","Widget","sendButton","musicButton","inputWidget","mobileViews","pcViews","on","mobileView","pcView","i","length","_i","bottom","left","scale","_i2","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","isM","isN","statics","systemEvent","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","z","y","_i3","_i4","_i5","_i6","rotationX","_i7","_i8","fov","_i9","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","m","n","u","console","log","position","sceneNodes","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","screenHeight","designResolutionHeight","designResolutionHeight_2","getDesignResolutionSize","getCanvasSize","info","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","v3","stopAllActions","runAction","stage","eye","isLeft","Boolean","randX","randY","touchMoveHandler","mouseMoveHandler","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","convertToNodeSpaceAR","len","tan","posX","posY","mouseLen2","pow","factor","min","len2","setPosition","fitHeight","MusicToggle","BodyAnim","editBox","EditBox","audioID","mouthNode","mouthIsReset","historyObjects","balloonPrefab","Prefab","balloonNode","introSound","type","AudioClip","default","music","blockerNode","idleMouthTimeout","bodyAnim","headAnim","initialMsgJSON","introCameras","furweeIntialized","URL","enableTextInput","isLocalHost","window","location","href","indexOf","setEnableTextInput","onTextLenChange","startFurwee","handleConnect","socket","id","startFurwee_backup","addBallon","audioInfo","audio_offset_ms","viseme_id","audioEngine","audioOffset","updateMouth","setFinishCallback","that","xhr","XMLHttpRequest","requestURL","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","tryToStartFurweeIntro","remoteUrl","audio_file_link","loader","load","url","open","setRequestHeader","send","onTTSCompleted","reply","index","message","soundloadedHandler","arguments","undefined","lip_sync_animation","err","res","stopIdleMouth","didReturnHandler","sendHandler","setTimeout","focus","sendText","trim","json","params","stringify","history","xhr2","requestURL2","params2","getChildByName","clearMouth","dt","time","getCurrentTime","startIdleMouth","textContent","children","balloon","instantiate","addChild","blockClickHandler","initialize","introCameraAnim","setIdleMouth","clearTimeout","idle","floor","random","errorClickHandler","captureError","bool","enabled","callBacks","initialized","setResizeCallback","handleResize","func","removeCallback","splice","progressBar","ProgressBar","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene","onNode","offNode","hintNode","hintText","audioId","bgVolumn","bgSlider","Slider","bgProgress","isMusicOn","sys","localStorage","getItem","toggleOn","toggleOff","sliderAdjust","toggleOver","toggleOut","pauseMusic","resumeMusic","playMusic","value","setMusicVolume","emit"],"mappings":"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","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        isPcView: true,\n\n        mobileNode: cc.Node,\n        pcNode: cc.Node\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = 640 / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.isPcView = false;\n            this.mobileNode.active = true;\n            this.pcNode.active = false;\n\n            this.mobileNode.getComponent(\"cc.Widget\").updateAlignment();\n        }\n        else{\n            this.isPcView = true;\n            this.mobileNode.active = false;\n            this.pcNode.active = true;\n\n            this.pcNode.getComponent(\"cc.Widget\").updateAlignment();\n        }\n    }\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        whiteBG: cc.Node,\n        pinkBG: cc.Node,\n        text: cc.Label,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    // update (dt) {},\n\n    update() {\n        if (this.updateTextHeight) {\n            this.node.height = this.bg.height = Math.max(55, this.text.node.height + 20);\n            this.updateTextHeight = false;\n        }\n    },\n\n    init(text, isFurwee) {\n\n        if (isFurwee) {\n            this.text.node.color = new cc.Color(\"#63697B\");\n            this.pinkBG.active = false;\n            this.whiteBG.active = true;\n\n            this.bg = this.whiteBG;\n        }\n        else {\n            //this.text.node.color = new cc.Color(\"#FFFFFF\");\n            this.whiteBG.active = false;\n            this.pinkBG.active = true;\n\n            this.bg = this.pinkBG;\n        }\n        this.isFurwee = isFurwee;\n        this.text.string = text;\n        this.updateTextHeight = true;\n\n    },\n\n    step() {\n        if (this.isFurwee) {\n            this.node.x -= 20;\n        }\n        else {\n            this.node.x += 20;\n        }\n\n        this.node.opacity -= 50;\n\n        if(this.node.opacity <=0){\n            this.node.parent.removeChild(this.node);\n        }\n    },\n\n\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nlet BodyAnim = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anim: cc.Animation\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    playIntro(){\n        this.anim.play(\"intro_body\");\n    },\n\n    introComplete(){\n        this.anim.play(\"body\");\n    },\n\n    play(){\n        this.anim.play(\"body\");\n    }\n    // update (dt) {},\n});\n","let SwitchWidget = require(\"SwitchWidget\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        switchwidget: SwitchWidget,\n        musicWidget: cc.Widget,\n        sendButton: cc.Node,\n        musicButton: cc.Node,\n\n        inputWidget: cc.Widget,\n\n        mobileViews:[cc.Node],\n        pcViews: [cc.Node]\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.node.on(\"mobileView\", this.mobileView.bind(this));\n        this.node.on(\"pcView\", this.pcView.bind(this));\n        // this.node.on(\"mouseOver\")\n\n        if(this.switchwidget && !this.switchwidget.isPcView ){\n            this.mobileView();\n        }\n    },\n\n    mobileView(){\n\n        for(let i = 0; i < this.mobileViews.length; i++){\n            this.mobileViews[i].active = true;\n        }\n\n        for(let i = 0; i < this.pcViews.length; i++){\n            this.pcViews[i].active = false;\n        }\n\n\n        this.musicWidget.bottom = 70;\n        this.musicWidget.left = -5;\n        this.musicWidget.updateAlignment();\n\n        this.inputWidget.bottom = 35.5;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 0.6;\n        this.musicButton.x = 20;\n\n       \n    },\n\n    pcView(){\n        for(let i = 0; i < this.mobileViews.length; i++){\n            this.mobileViews[i].active = false;\n        }\n\n        for(let i = 0; i < this.pcViews.length; i++){\n            this.pcViews[i].active = true;\n        }\n\n        this.musicWidget.bottom = 46;\n        this.musicWidget.left = 62;\n        this.musicWidget.updateAlignment();\n\n\n        this.inputWidget.bottom = 83;\n        this.inputWidget.updateAlignment();\n\n        this.musicButton.scale = 1;\n        this.musicButton.x = 0;\n\n    }\n});\n","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false,\n\n        isM:false,\n        isN:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n         if(this.isM){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x +=1;\n             }\n        }\n\n         if(this.isN){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.x -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n            case cc.macro.KEY.m:\n                this.isM = true;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n            case cc.macro.KEY.m:\n                this.isM = false;\n                break;\n            case cc.macro.KEY.n:\n                this.isN = false;\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cameras: [cc.Camera],\n        sceneNodes: [cc.Node],\n        infos: null,\n        vx: 0,\n        vy: 0,\n        ax: 0.5,\n        maxV: 1,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 10,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        screenHeight: 0,\n        designResolutionHeight: 0,\n        designResolutionHeight_2: 0,\n    },\n\n    onLoad: function () {\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.screenHeight = cc.view.getDesignResolutionSize().width / cc.view.getCanvasSize().width * cc.view.getCanvasSize().height;\n        \n\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height / 2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n            let info = { x: this.sceneNodes[i].eulerAngles.x, y: this.sceneNodes[i].eulerAngles.y };\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n\n    },\n\n    onDestroy: function () {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    },\n\n    onTouchMove: function (evt) {\n        // this.onMouseMove(evt);\n    },\n\n    onMouseMove: function (evt) {\n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n        let targetY = (this.screenWidth / 2 - evt._x) / (this.screenWidth / 2) * this.rotRangeY;\n        let targetX = (this.screenHeight / 2 - evt._y) / (this.screenHeight / 2) * this.rotRangeX ;\n\n        //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n        //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n        console.log(\"currentX\", currentX, \"currentY\", currentY);\n\n        let timeY = Math.abs(targetY - currentY) / this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX) / this.rotRangeX;\n        //console.log('time', timeX, timeY);\n\n        for (let i = 0; i < this.sceneNodes.length; i++) {\n\n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY + this.infos[i].y, 0));\n            // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n                console.log(targetX, targetY);\n            // this.cameras[i].node.stopAllActions();\n            // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n\n            this.sceneNodes[i].stopAllActions();\n            this.sceneNodes[i].runAction(rotate3DTo);\n\n        }\n\n    },\n});","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stage: cc.Node,\n        eye: cc.Node,\n        isLeft: cc.Boolean\n    },\n\n    onLoad() {\n        this.randX = 8;\n        this.randY = 1.5;\n        // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        // this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt) {\n        //console.log(evt);\n    },\n\n    mouseMoveHandler(evt) {\n\n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let len = 0;\n        let tan = 0;\n        let ctan = 0;\n\n        let posX = 0;\n        let posY = 0;\n\n        if (pos.x != 0 && pos.y != 0) {\n\n            let mouseLen2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            if (mouseLen2 > Math.pow(150, 2)) {\n                posX = 0;\n                posY = 0;\n\n            }\n            else {\n                let factor = Math.min(Math.pow(mouseLen2, 0.5) / 40, 1);\n                //factor = Math.pow(factor, 2);\n                if (this.isLeft) {\n                    pos.x -= 40 * factor;\n                }\n                else {\n                    pos.x += 40 * factor;\n                }\n                if (pos.x < 0) {\n                    pos.x = Math.max(pos.x, -8);\n                }\n                else {\n                    pos.x = Math.min(pos.x, 8);\n                }\n                if (pos.y < 0) {\n                    pos.y = Math.max(pos.y, -2.5);\n                }\n                else {\n                    pos.y = Math.min(pos.y, 2.5);\n                }\n                let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2) / (Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n                len = Math.pow(len2, 0.5);\n\n                tan = pos.y / len;\n                ctan = pos.x / len;\n\n                posX = len * ctan;\n                posY = len * tan;\n\n            }\n\n        }\n\n        this.eye.setPosition(posX, posY);\n        //console.log(\"set pos\", posX, posY);\n\n    }\n})","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = this.fitHeight / frameSize.height * frameSize.width;\n\n        if (w < this.minWidth) {\n            this.node.scale = w / this.minWidth;\n        }\n    }\n});\n","let MusicToggle = require(\"MusicToggle\");\nlet BodyAnim = require(\"BodyAnim\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox: cc.EditBox,\n        audioID: -1,\n        mouthNode: cc.Node,\n        mouthIsReset: true,\n        historyObjects: [],\n        sendButton: cc.Node,\n\n        balloonPrefab: cc.Prefab,\n        balloonNode: cc.Node,\n\n        introSound: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        music: MusicToggle,\n        blockerNode: cc.Node,\n        idleMouthTimeout: -1,\n        bodyAnim: BodyAnim,\n        headAnim: cc.Animation,\n\n        initialMsgJSON: null,\n\n        introCameras: [cc.Camera],\n        furweeIntialized:false,\n\n        URL: \"http://40.121.137.102\",\n\n        enableTextInput: false\n\n    },\n\n    start() {\n        this.blockerNode.active = true;\n    },\n\n    onLoad() {\n\n        let isLocalHost = false;\n        if (window.location.href.indexOf(\"localhost\") != -1 || window.location.href.indexOf(\"127.0.0.1\") != -1) {\n            isLocalHost = true;\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        /*\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\" : \"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n\n        return;\n\n*/  \n        this.setEnableTextInput(false);\n        this.onTextLenChange(this.editBox.string);\n        this.startFurwee();\n\n    },\n\n    handleConnect() {\n        console.log('connected', this.socket.id);\n    },\n\n    startFurwee_backup() {\n\n\n        let msg = \"Hi, my name is Furwee. What's your name?\";\n        this.addBallon(msg, true);\n        //return;\n\n        this.audioInfo = [{ \"audio_offset_ms\": 50, \"viseme_id\": 0 }, { \"audio_offset_ms\": 100, \"viseme_id\": 12 }, { \"audio_offset_ms\": 237.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 475, \"viseme_id\": 0 }, { \"audio_offset_ms\": 650, \"viseme_id\": 21 }, { \"audio_offset_ms\": 687.5, \"viseme_id\": 11 }, { \"audio_offset_ms\": 762.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 850, \"viseme_id\": 4 }, { \"audio_offset_ms\": 893.75, \"viseme_id\": 6 }, { \"audio_offset_ms\": 937.5, \"viseme_id\": 21 }, { \"audio_offset_ms\": 1000, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1062.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 1150, \"viseme_id\": 18 }, { \"audio_offset_ms\": 1212.5, \"viseme_id\": 5 }, { \"audio_offset_ms\": 1287.5, \"viseme_id\": 13 }, { \"audio_offset_ms\": 1350, \"viseme_id\": 7 }, { \"audio_offset_ms\": 1400, \"viseme_id\": 6 }, { \"audio_offset_ms\": 1662, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2425, \"viseme_id\": 0 }, { \"audio_offset_ms\": 2475, \"viseme_id\": 7 }, { \"audio_offset_ms\": 2575, \"viseme_id\": 1 }, { \"audio_offset_ms\": 2637.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2687.5, \"viseme_id\": 15 }, { \"audio_offset_ms\": 2737.5, \"viseme_id\": 6 }, { \"audio_offset_ms\": 2787.5, \"viseme_id\": 3 }, { \"audio_offset_ms\": 2825, \"viseme_id\": 13 }, { \"audio_offset_ms\": 2862.5, \"viseme_id\": 19 }, { \"audio_offset_ms\": 2925, \"viseme_id\": 4 }, { \"audio_offset_ms\": 3025, \"viseme_id\": 6 }, { \"audio_offset_ms\": 3125, \"viseme_id\": 21 }, { \"audio_offset_ms\": 3300, \"viseme_id\": 0 }]\n        this.audioID = cc.audioEngine.play(this.introSound);\n        this.audioOffset = 0;\n        this.updateMouth();\n\n        this.bodyAnim.playIntro();\n        this.headAnim.play();\n\n        cc.audioEngine.setFinishCallback(this.audioID, function () {\n            this.audioID = -1;\n            this.mouthIsReset = false;\n        }.bind(this));\n\n    },\n\n    startFurwee() {\n        this.headAnim.play();\n        this.bodyAnim.play();\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n        let requestURL = this.URL + \"/initial-message/\";\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n\n                    that.initialMsgJSON = JSON.parse(xhr.responseText);\n                    if (!that.tryToStartFurweeIntro()) {\n                        //preload sound\n                        let remoteUrl = that.initialMsgJSON.audio_file_link;\n                        cc.loader.load({ url: remoteUrl, type: 'wav' });\n                    }\n                }\n            }\n        }\n        xhr.open('GET', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(\"\");\n    },\n\n    tryToStartFurweeIntro() {\n        if (this.blockerNode.active) {\n            return false;\n        }\n        if (!this.initialMsgJSON) {\n            return false;\n        }\n\n        if(this.furweeIntialized){\n            return false;\n        }\n        this.furweeIntialized = true;\n\n        this.setEnableTextInput(true);\n        this.onTTSCompleted(this.initialMsgJSON, function () {\n\n            this.addBallon(this.initialMsgJSON.reply, true);\n            this.bodyAnim.playIntro();\n\n        }.bind(this));\n\n        this.historyObjects.push({ \"index\": this.historyObjects.length, \"reply\": this.initialMsgJSON.reply, \"message\": this.initialMsgJSON.message });\n        return true;\n    },\n\n\n    onTTSCompleted(info, soundloadedHandler = null) {\n        if (!info) {\n            return;\n        }\n\n        this.audioInfo = info.lip_sync_animation;\n\n        let remoteUrl = info.audio_file_link;\n        cc.loader.load({ url: remoteUrl, type: 'wav' }, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.stopIdleMouth();\n            this.updateMouth();\n\n            if (soundloadedHandler) {\n                soundloadedHandler();\n            }\n\n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    },\n\n    didReturnHandler() {\n        this.sendHandler();\n        setTimeout(function () {\n            this.editBox.focus();\n        }.bind(this), 0);\n    },\n\n\n    sendHandler() {\n        if(!this.enableTextInput){\n            return;\n        }\n        let sendText = this.editBox.string;\n        if (sendText.trim().length == 0) {\n            return;\n        }\n\n        /* this.socket.emit(\"tts\", sendText);\n         return;\n */\n\n        this.setEnableTextInput(false);\n        this.addBallon(sendText, false);\n        this.editBox.string = \"\";\n        this.editBox.focus();\n\n        this.onTextLenChange(this.editBox.string);\n\n        let that = this;\n        let xhr = new XMLHttpRequest();\n\n        let requestURL = this.URL + \"/messages/\";\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                if (xhr.status == 200) {\n                    let json = JSON.parse(xhr.responseText);\n                    that.setEnableTextInput(true);\n                    that.onTTSCompleted(json);\n\n                    that.historyObjects.push({ \"index\": that.historyObjects.length, \"reply\": json.reply, \"message\": json.message });\n\n                    that.addBallon(json.reply, true);\n                }\n            }\n        }\n        let params = JSON.stringify({ \"message\": sendText, history: this.historyObjects });\n        xhr.open('POST', requestURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(params);\n\n\n        let xhr2 = new XMLHttpRequest();\n        let requestURL2 = this.URL + \"/emotion/\";\n        xhr2.onreadystatechange = function () {\n            if (xhr2.readyState == XMLHttpRequest.DONE) {\n                if (xhr2.status == 200) {\n                    console.log(xhr2.responseText);\n                }\n            }\n        }\n        let params2 = JSON.stringify({ \"message\": sendText });\n        xhr2.open('POST', requestURL2, true);\n        xhr2.setRequestHeader('Content-type', 'application/json');\n        xhr2.send(params2);\n    },\n\n    updateMouth() {\n        //audio_offset_ms: 1162.5, viseme_id: 11}\n        let id = this.audioInfo[this.audioOffset].viseme_id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if (node) {\n            this.clearMouth();\n            node.active = true;\n        }\n    },\n\n    update(dt) {\n        if (this.audioID != -1) {\n            let time = cc.audioEngine.getCurrentTime(this.audioID)\n\n            while (this.audioInfo.length > this.audioOffset\n                && (this.audioInfo[this.audioOffset].audio_offset_ms < time * 1000 + 15)) {\n                // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else {\n            if (!this.mouthIsReset) {\n                this.mouthIsReset = true;\n                this.clearMouth();\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n                this.startIdleMouth();\n            }\n        }\n    },\n\n    onTextLenChange(textContent) {\n        this.sendButton.active = textContent.length != 0\n    },\n\n    addBallon(message, isFurwee) {\n        for (var i = 0; i < this.balloonNode.children.length; ++i) {\n            this.balloonNode.children[i].getComponent(\"Ballon\").step();\n        }\n\n        let balloon = cc.instantiate(this.balloonPrefab);\n        balloon.getComponent('Ballon').init(message, isFurwee);\n        this.balloonNode.addChild(balloon);\n\n\n    },\n\n    blockClickHandler() {\n        this.blockerNode.active = false;\n        this.music.initialize();\n        this.tryToStartFurweeIntro();\n        //this.introCameraAnim();\n    },\n\n    introCameraAnim() {\n        for (let i = 0; i < this.introCameras.length; i++) {\n            this.introCameras[i].getComponent(cc.Animation).play();\n        }\n\n        setTimeout(this.tryToStartFurweeIntro.bind(this), 2000);\n    },\n\n    clearMouth() {\n        for (let i = 0; i <= 21; i++) {\n            let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n            node2.active = false;\n        }\n\n        for (let i = 0; i < 2; i++) {\n            let node2 = this.mouthNode.getChildByName(\"idle_\" + i);\n            node2.active = false;\n        }\n    },\n\n    startIdleMouth() {\n        this.setIdleMouth();\n    },\n\n    setIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n\n        this.clearMouth();\n        let idle = Math.floor(Math.random() * 2);\n        this.mouthNode.getChildByName(\"idle_\" + idle).active = true;\n\n        setTimeout(this.setIdleMouth.bind(this), 3000 * Math.random() + 3000);\n    },\n\n    stopIdleMouth() {\n        clearTimeout(this.idleMouthTimeout);\n        this.idleMouthTimeout = -1;\n    },\n\n    errorClickHandler(){\n        if(window.captureError){\n            window.captureError();\n        }\n\n    },\n\n    setEnableTextInput(bool){\n        this.editBox.enabled = this.enableTextInput = bool;\n    }\n});\n","let Helper = {};\n\nHelper.callBacks = [];\nHelper.initialized = false;\nHelper.initialize = function(){\n    if(Helper.initialized ){\n        return;\n    }\n    Helper.initialized  = true;\n    cc.view.setResizeCallback(Helper.handleResize);\n}\n\nHelper.handleResize = function(){\n    for(let i =0 ; i < Helper.callBacks .length; i++){\n        Helper.callBacks[i]();\n    }\n}\n\nHelper.addCallback = function(func){\n    Helper.initialize();\n    Helper.callBacks.push(func);\n}\n\nHelper.removeCallback = function(func){\n    let index = Helper.callBacks.indexOf(func);\n    if(index != -1){\n        Helper.splice(index,1);\n    }\n}\n\nexport {Helper};","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar:cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad () {\n        cc.director.preloadScene(\"game\", this.onProgress.bind(this), this.onComplete.bind(this));\n    },\n\n    onProgress(completedCount, totalCount){\n        this.progressBar.progress = completedCount/totalCount;\n    },\n\n    onComplete(error){\n        if(!error){\n            cc.director.loadScene(\"game\");\n        }\n\n    }\n\n    \n});\n","\nlet MusicToggle = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        onNode: cc.Node,\n        offNode: cc.Node,\n        hintNode: cc.Node,\n        hintText: cc.Label,\n        audioId: null,\n        music: {\n            type: cc.AudioClip,\n            default: null\n        },\n        anim: cc.Animation,\n        bgVolumn: 0.8,\n\n        bgSlider: cc.Slider, \n        bgProgress: cc.ProgressBar,\n       \n    },\n\n    initialize() {\n        this.isMusicOn = cc.sys.localStorage.getItem(\"music\");\n        if (this.isMusicOn == null) {\n            this.isMusicOn = true;\n        }\n\n        if (this.isMusicOn) {\n            this.toggleOn();\n            /*setTimeout(function(){ \n                cc.sys.__audioSupport.context.resume();\n                cc.game.canvas.dispatchEvent(new Event(\"mousedown\"))\n            }, 3000);*/\n        }\n        else {\n            this.toggleOff();\n        }\n\n        this.bgSlider.node.on('slide', this.sliderAdjust.bind(this));\n\n       \n\n    },\n\n    toggleOver() {\n        this.hintNode.active = true;\n    },\n\n    toggleOut() {\n        this.hintNode.active = false;\n    },\n\n\n    toggleOff() {\n        this.onNode.active = true;\n        this.offNode.active = false;\n        this.hintText.string = \"Turn Volumn On\";\n\n        this.bgSlider.node.active = false;\n\n        if (this.audioId != null) {\n            cc.audioEngine.pauseMusic();\n        }\n\n\n    },\n\n    toggleOn() {\n        this.offNode.active = true;\n        this.onNode.active = false;\n        this.hintText.string = \"Turn Volumn Off\";\n\n        this.bgSlider.node.active = true;\n\n        if (!this.audioId) {\n            this.audioId = cc.audioEngine.playMusic(this.music, true, this.bgVolumn);\n        }\n        else {\n            cc.audioEngine.resumeMusic();\n        }\n    },\n\n    sliderAdjust(value){\n        this.bgProgress.progress = value.progress;\n        this.bgVolumn = value.progress;\n        cc.audioEngine.setMusicVolume(this.bgVolumn);\n    },\n\n   \n});","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\nconst {Helper} = require(\"Helper\");\n\nlet SwitchWidget = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        minWidth: -1, \n        minHeight: -1,\n        fitHeight: 640,\n        isPcView: true\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad() {\n\n        Helper.addCallback(this.onResize.bind(this));\n\n        this.canvas = this.node.parent.getComponent(cc.Canvas);\n\n        this.onResize();\n    },\n\n    onDestroy(){\n        Helper.removeCallback(this.onResize.bind(this));\n    },\n    // update (dt) {},\n\n    onResize: function () {\n        if (!this.node) return;\n        var frameSize = cc.view.getFrameSize();\n        let w = this.fitHeight / frameSize.height * frameSize.width;\n        console.log(\"W\",w);\n        if (w < this.minWidth) {\n            this.node.emit(\"mobileView\");\n            this.isPcView = false;\n        }\n        else{\n            this.node.emit(\"pcView\");\n            this.isPcView = true;\n        }\n    }\n});\n"],"file":"project.js"}