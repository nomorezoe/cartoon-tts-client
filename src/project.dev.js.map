{"version":3,"sources":["assets/Scripts/game/Eye.js","assets/Scripts/game/Game.js","assets/Scripts/loading/Loading.js"],"names":["cc","Class","extends","Component","properties","stage","Node","eye","onLoad","this","randX","randY","on","EventType","MOUSE_MOVE","mouseMoveHandler","touchMoveHandler","evt","console","log","worldPos","convertToWorldSpaceAR","v2","getLocationX","getLocationY","pos","node","convertToNodeSpaceAR","len","tan","ctan","x","y","Math","max","min","len2","pow","posX","posY","setPosition","editBox","EditBox","audioID","mouthNode","mouthIsReset","isLocalHost","window","location","href","indexOf","urlAddress","socket","io","transports","handleConnect","bind","onTTSCompleted","id","info","file","audioInfo","remoteUrl","loader","load","url","type","err","res","audioEngine","play","audioOffset","updateMouth","setFinishCallback","sendHandler","sendText","string","emit","getChildByName","i","node2","active","update","dt","time","getCurrentTime","length","progressBar","ProgressBar","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene"],"mappings":"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","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        stage:cc.Node,\n        eye: cc.Node\n    },\n\n    onLoad () {\n        this.randX =8;\n        this.randY = 1.5;\n       // this.stage.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler, this);\n        this.stage.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMoveHandler, this);\n    },\n\n    touchMoveHandler(evt){\n        console.log(evt);\n    },\n\n    mouseMoveHandler(evt){\n        \n        let worldPos = this.stage.convertToWorldSpaceAR(cc.v2(evt.getLocationX(), evt.getLocationY()));\n        //console.log(\"world\",worldPos.x, worldPos.y);\n        worldPos = cc.v2(evt.getLocationX(), evt.getLocationY());\n        let pos = this.node.convertToNodeSpaceAR(worldPos);\n        //console.log(pos.x , pos.y);\n\n        //this.eye.setPosition(pos.x, pos.y);\n\n        let  len = 0;\n        let tan = 0;\n        let ctan  = 0;\n        if(pos.x!= 0 && pos.y !=0){\n            if(pos.x < 0){\n                pos.x = Math.max(pos.x, -8);\n            }\n            else{\n                pos.x = Math.min(pos.x, 8);\n            }\n            if(pos.y < 0){\n                pos.y = Math.max(pos.y, -1.5);\n            }\n            else{\n                pos.y = Math.min(pos.y, 1.5);\n            }\n            let len2 = Math.pow(pos.x, 2) * Math.pow(pos.y, 2)/(Math.pow(pos.x, 2) + Math.pow(pos.y, 2));\n            len = Math.pow(len2, 0.5);\n        \n            tan = pos.y / len;\n            ctan = pos.x / len;\n        }\n\n       \n        let posX = len * ctan;\n        let posY = len * tan;\n\n        this.eye.setPosition(posX, posY);\n        console.log(\"set pos\", posX, posY);\n\n\n    }\n})","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        audioID:-1, \n        mouthNode: cc.Node,\n        mouthIsReset: true\n        \n    },\n\n    onLoad () {\n\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\":\"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); \n    },\n\n    onTTSCompleted(info){\n        if(!info){\n            return;\n        }\n        console.log(\"onTTSCompleted\", info.file, info.info);\n\n        this.audioInfo = info.info;\n\n        let remoteUrl =  this.urlAddress + \"/output/?fileName=\" + info.file;\n        cc.loader.load({url: remoteUrl, type: 'wav'}, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.updateMouth();\n            \n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    }, \n\n    sendHandler(){\n        let sendText = this.editBox.string;\n        if(sendText == \"\"){\n            return;\n        }\n        this.socket.emit(\"tts\", sendText);\n    }, \n\n    updateMouth(){\n        let id =  this.audioInfo[this.audioOffset].id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if(node){\n            for(let i = 0; i <= 21; i++){\n                let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n                node2.active = false;\n            }\n            node.active = true;\n        }\n    },\n\n    update (dt){\n        if(this.audioID != -1){\n            let time = cc.audioEngine.getCurrentTime( this.audioID )\n\n            while( this.audioInfo.length > this.audioOffset \n                && (this.audioInfo[this.audioOffset ].audioOffset < time * 1000 + 15))\n                {\n               // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else{\n            if(!this.mouthIsReset){\n                this.mouthIsReset = true;\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n\n                for(let i = 1; i <= 21; i++){\n                    let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n                    node2.active = false;\n                }\n            }\n        }\n       \n    }\n     \n\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar:cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad () {\n        cc.director.preloadScene(\"game\", this.onProgress.bind(this), this.onComplete.bind(this));\n    },\n\n    onProgress(completedCount, totalCount){\n        this.progressBar.progress = completedCount/totalCount;\n    },\n\n    onComplete(error){\n        if(!error){\n            cc.director.loadScene(\"game\");\n        }\n\n    }\n\n    \n});\n"],"file":"project.dev.js"}