{"version":3,"sources":["assets/Scripts/game/Game.js","assets/Scripts/loading/Loading.js"],"names":["cc","Class","extends","Component","properties","editBox","EditBox","audioID","mouthNode","Node","mouthIsReset","onLoad","isLocalHost","window","location","href","indexOf","console","log","this","urlAddress","socket","io","transports","on","handleConnect","bind","onTTSCompleted","id","info","file","audioInfo","remoteUrl","loader","load","url","type","err","res","audioEngine","play","audioOffset","updateMouth","setFinishCallback","sendHandler","sendText","string","emit","node","getChildByName","i","node2","active","update","dt","time","getCurrentTime","length","progressBar","ProgressBar","director","preloadScene","onProgress","onComplete","completedCount","totalCount","progress","error","loadScene"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOAA,GAAAC;MACIC,SAAAF,GAAAG;MAEAC;QACIC,SAAAL,GAAAM;QACAC,UAAA;QACAC,WAAAR,GAAAS;QACAC,cAAA;;MAIJC,QAAA,SAAAA;QAEI,IAAAC,cAAA;SACA,KAAAC,OAAAC,SAAAC,KAAAC,QAAA,iBAAA,KAAAH,OAAAC,SAAAC,KAAAC,QAAA,iBACIJ,cAAA;QAEJK,QAAAC,IAAA,eAAAN;QAEAO,KAAAC,aAAAR,cAAA,0BAAA;QACAO,KAAAE,SAAA,IAAAR,OAAAS,GAAAH,KAAAC;UAA8CG,cAAA,aAAA,WAAA;;QAE9CJ,KAAAE,OAAAG,GAAA,WAAAL,KAAAM,cAAAC,KAAAP;QACAA,KAAAE,OAAAG,GAAA,kBAAAL,KAAAQ,eAAAD,KAAAP;;MAIJM,eAAA,SAAAA;QACIR,QAAAC,IAAA,aAAAC,KAAAE,OAAAO;;MAGJD,gBAAA,SAAAA,eAAAE;QACI,KAAAA,MACI;QAEJZ,QAAAC,IAAA,kBAAAW,KAAAC,MAAAD,KAAAA;QAEAV,KAAAY,YAAAF,KAAAA;QAEA,IAAAG,YAAAb,KAAAC,aAAA,uBAAAS,KAAAC;QACA9B,GAAAiC,OAAAC;UAAgBC,KAAAH;UAAgBI,MAAA;WAAjB,SAAAC,KAAAC;UAEXnB,KAAAZ,UAAAP,GAAAuC,YAAAC,KAAAF;UACAnB,KAAAsB,cAAA;UACAtB,KAAAuB;UAEA1C,GAAAuC,YAAAI,kBAAAxB,KAAAZ,SAAA;YACIY,KAAAZ,WAAA;YACAY,KAAAT,eAAA;YACHgB,KAAAP;UACJO,KAAAP;;MAGLyB,aAAA,SAAAA;QACI,IAAAC,WAAA1B,KAAAd,QAAAyC;QACA,IAAA,MAAAD,UACI;QAEJ1B,KAAAE,OAAA0B,KAAA,OAAAF;;MAGJH,aAAA,SAAAA;QACI,IAAAd,KAAAT,KAAAY,UAAAZ,KAAAsB,aAAAb;QAEA,IAAAoB,OAAA7B,KAAAX,UAAAyC,eAAA,WAAArB;QACA,IAAAoB,MAAA;UACI,KAAA,IAAAE,IAAA,GAAAA,KAAA,IAAAA,KAAA;YACI,IAAAC,QAAAhC,KAAAX,UAAAyC,eAAA,WAAAC;YACAC,MAAAC,SAAA;;UAEJJ,KAAAI,SAAA;;;MAIRC,QAAA,SAAAA,OAAAC;QACI,KAAA,KAAAnC,KAAAZ,SAAA;UACI,IAAAgD,OAAAvD,GAAAuC,YAAAiB,eAAArC,KAAAZ;UAEA,OAAAY,KAAAY,UAAA0B,SAAAtC,KAAAsB,eAAAtB,KAAAY,UAAAZ,KAAAsB,aAAAA,cAAA,MAAAc,OAAA,IAAA;YAIIpC,KAAAuB;YACAvB,KAAAsB,eAAA;;eAKJ,KAAAtB,KAAAT,cAAA;UACIS,KAAAT,eAAA;UACAS,KAAAX,UAAAyC,eAAA,WAAAG,SAAA;UAEA,KAAA,IAAAF,IAAA,GAAAA,KAAA,IAAAA,KAAA;YACI,IAAAC,QAAAhC,KAAAX,UAAAyC,eAAA,WAAAC;YACAC,MAAAC,SAAA;;;;;;;;;;;IC9FpBpD,GAAAC;MACIC,SAAAF,GAAAG;MAEAC;QACIsD,aAAA1D,GAAA2D;;MAOJhD,QAAA,SAAAA;QACIX,GAAA4D,SAAAC,aAAA,QAAA1C,KAAA2C,WAAApC,KAAAP,OAAAA,KAAA4C,WAAArC,KAAAP;;MAGJ2C,YAAA,SAAAA,WAAAE,gBAAAC;QACI9C,KAAAuC,YAAAQ,WAAAF,iBAAAC;;MAGJF,YAAA,SAAAA,WAAAI;QACIA,SACInE,GAAA4D,SAAAQ,UAAA","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        audioID:-1, \n        mouthNode: cc.Node,\n        mouthIsReset: true\n        \n    },\n\n    onLoad () {\n\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        console.log(\"isLocalHost\", isLocalHost);\n\n        this.urlAddress = isLocalHost ? \"http://127.0.0.1:3000\":\"http://13.115.222.147:3000\";\n        this.socket = new window.io(this.urlAddress, {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n        this.socket.on(\"onTTSCompleted\", this.onTTSCompleted.bind(this));\n\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); \n    },\n\n    onTTSCompleted(info){\n        if(!info){\n            return;\n        }\n        console.log(\"onTTSCompleted\", info.file, info.info);\n\n        this.audioInfo = info.info;\n\n        let remoteUrl =  this.urlAddress + \"/output/?fileName=\" + info.file;\n        cc.loader.load({url: remoteUrl, type: 'wav'}, function (err, res) {\n            // Use texture to create sprite frame\n            this.audioID = cc.audioEngine.play(res);\n            this.audioOffset = 0;\n            this.updateMouth();\n            \n            cc.audioEngine.setFinishCallback(this.audioID, function () {\n                this.audioID = -1;\n                this.mouthIsReset = false;\n            }.bind(this));\n        }.bind(this));\n    }, \n\n    sendHandler(){\n        let sendText = this.editBox.string;\n        if(sendText == \"\"){\n            return;\n        }\n        this.socket.emit(\"tts\", sendText);\n    }, \n\n    updateMouth(){\n        let id =  this.audioInfo[this.audioOffset].id;\n\n        let node = this.mouthNode.getChildByName(\"mouth_\" + id);\n        if(node){\n            for(let i = 0; i <= 21; i++){\n                let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n                node2.active = false;\n            }\n            node.active = true;\n        }\n    },\n\n    update (dt){\n        if(this.audioID != -1){\n            let time = cc.audioEngine.getCurrentTime( this.audioID )\n\n            while( this.audioInfo.length > this.audioOffset \n                && (this.audioInfo[this.audioOffset ].audioOffset < time * 1000 + 15))\n                {\n               // && ((this.audioOffset + 1 >= this.audioInfo.length) || (Math.abs(this.audioInfo[this.audioOffset ].audioOffset - time* 1000 ) > (this.audioInfo[this.audioOffset +1].audioOffset - time* 1000 )))){\n                this.updateMouth();\n                this.audioOffset += 1;\n\n            }\n        }\n        else{\n            if(!this.mouthIsReset){\n                this.mouthIsReset = true;\n                this.mouthNode.getChildByName(\"mouth_0\").active = true;\n\n                for(let i = 1; i <= 21; i++){\n                    let node2 = this.mouthNode.getChildByName(\"mouth_\" + i);\n                    node2.active = false;\n                }\n            }\n        }\n       \n    }\n     \n\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        progressBar:cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad () {\n        cc.director.preloadScene(\"game\", this.onProgress.bind(this), this.onComplete.bind(this));\n    },\n\n    onProgress(completedCount, totalCount){\n        this.progressBar.progress = completedCount/totalCount;\n    },\n\n    onComplete(error){\n        if(!error){\n            cc.director.loadScene(\"game\");\n        }\n\n    }\n\n    \n});\n"],"file":"project.dev.js"}